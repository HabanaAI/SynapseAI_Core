/*****************************************************************************
 * Copyright (C) 2020 HabanaLabs, Ltd.
 * All Rights Reserved.
 *
 * Unauthorized copying of this file, via any medium is strictly prohibited.
 * Proprietary and confidential.
 ******************************************************************************
 */

#ifndef SPECIALFUNCCOEFFICIENTS_DEF_GEN4_H_
#define SPECIALFUNCCOEFFICIENTS_DEF_GEN4_H_

#define CACHE_LINE_SIZE_IN_BYTES 128

#define m2_val 2
#define m3_val 3
#define m4_val 4
#define m5_val 5
#define m6_val 6
#define m7_val 7

// NumIntervals = 256
// 0
#define FUNC_ID_FP32_TANH 0b000000
// 1
#define FUNC_ID_FP32_RSQRT 0b000001
// 2
#define FUNC_ID_FP32_LOG2 0b000010
// 3
#define FUNC_ID_INT8_SQRT 0b000011
// 4
#define FUNC_ID_UINT16_SQUARE 0b000100
// 5
#define FUNC_ID_UINT32_POWER4 0b000101
// 6
#define FUNC_ID_INT8_SQRT_C0 0b000110
// 7
#define FUNC_ID_UINT16_SQUARE_C0 0b000111
// 8
#define FUNC_ID_FP32_ERF 0b001000
// 9
#define FUNC_ID_FP32_IMP_TANH 0b001001
// NumIntervals = 128
// 128
#define FUNC_ID_FP32_SQRT 0b010000000
// 129
#define FUNC_ID_FP32_RCP 0b010000001
// 130
#define FUNC_ID_FP32_SINCOS 0b010000010
// 131
#define FUNC_ID_BF16_RCP_SCALAR_M7 0b010000011

// 132
#define FUNC_ID_BF16_SINCOS_SCALAR_M7 0b010000100
// 133
#define FUNC_ID_BF16_SINCOS_LINEAR_M6 0b010000101
// 134
#define FUNC_ID_BF16_SINCOS_POLY2_M6_C2C1 0b010000110
// 135
#define FUNC_ID_BF16_SINCOS_POLY2_M6_C0 0b010000111
// 136
#define FUNC_ID_BF16_LOG2_LINEAR_INTERLEAVED_M5 0b010001000
// 137
#define FUNC_ID_BF16_LOG2_LINEAR_GAUDI2_M5 0b010001001
// 138
#define FUNC_ID_BF16_EXP 0b010001010
// 139
#define FUNC_ID_INT16_EXP_NEG_0_16_128ENTRIES 0b010001011
// 140
#define FUNC_ID_REDUCTION_16 0b010001100
// 141
#define FUNC_ID_REDUCTION_8 0b010001101

// NumIntervals = 64
// 256
#define FUNC_ID_FP32_POW2 0b100000000
// 257
#define FUNC_ID_BF16_TANH 0b100000001
// 258
#define FUNC_ID_INT16_TANH_0_8 0b100000010
// 259
#define FUNC_ID_INT16_SIGMOID_0_8 0b100000011
// 260
#define FUNC_ID_INT16_EXP_NEG_0_16 0b100000100
// 261
#define FUNC_ID_INT16_RECIP_1_4 0b100000101
// 262
#define FUNC_ID_INT8_TANH_0_8_LINEAR 0b100000110
// 263
#define FUNC_ID_INT8_SIGMOID_0_8_LINEAR 0b100000111
// 264
#define FUNC_ID_INT8_EXP_NEG_0_8_LINEAR 0b100001000
// 265
#define FUNC_ID_BF16_TANH_C0 0b100001001
// 266
#define FUNC_ID_INT16_TANH_0_8_C0 0b100001010
// 267
#define FUNC_ID_INT16_SIGMOID_0_8_C0 0b100001011
// 268
#define FUNC_ID_INT16_EXP_NEG_0_16_C0 0b100001100
// 269
#define FUNC_ID_INT16_RECIP_1_4_C0 0b100001101
// 270
#define FUNC_ID_INT8_TANH_0_8_LINEAR_C0 0b100001110
// 271
#define FUNC_ID_INT8_SIGMOID_0_8_LINEAR_C0 0b100001111
// 272
#define FUNC_ID_INT8_EXP_NEG_0_8_LINEAR_C0 0b100010000
// 273
#define FUNC_ID_BF16_TANH_LINEAR_M4 0b100010001
// 274
#define FUNC_ID_BF16_TANH_POLY2_M4_C2C1 0b100010010
// 275
#define FUNC_ID_BF16_TANH_POLY2_M4_C0 0b100010011
// 276
#define FUNC_ID_BF16_SQRT_SCALAR_M6 0b100010100
// 277
#define FUNC_ID_BF16_LOG2_LINEAR_M5 0b100010101

// 278
#define FUNC_ID_BF16_SINCOS_LINEAR_M5 0b100010110
// 279
#define FUNC_ID_BF16_SINCOS_POLY2_M5_C2C1 0b100010111
// 280
#define FUNC_ID_BF16_SINCOS_POLY2_M5_C0 0b100011000
// 281
#define FUNC_ID_FP16_TANH 0b100011001
// 282
#define FUNC_ID_FP16_TANH_C0 0b100011010
// 283
#define FUNC_ID_BF16_RSQRT_SCALAR_M6 0b100011011
// 284
#define FUNC_ID_INT16_GELU_MINUS_RELU_0_4 0b100011100
// 285
#define FUNC_ID_FP16_GELU 0b100011101
// 286
#define FUNC_ID_FP16_GELU_C0 0b100011110
// 287
#define FUNC_ID_REDUCTION_32 0b100011111
// 288
#define FUNC_ID_BF16_C0_RECIP 0b100100000
// 289
#define FUNC_ID_SWIZZLE_32 0b100100001

// NumIntervals = 32 or less
// 384
#define FUNC_ID_BF16_RSQRT 0b110000000
// 385
#define FUNC_ID_BF16_LOG2 0b110000001
// 386
#define FUNC_ID_BF16_SQRT 0b110000010
// 387
#define FUNC_ID_BF16_RCP 0b110000011
// 388
#define FUNC_ID_BF16_SINCOS 0b110000100
// 389
#define FUNC_ID_BF16_POW2 0b110000101
// 390
#define FUNC_ID_INT8_TANH 0b110000110
// 391
#define FUNC_ID_BF16_RSQRT_C0 0b110000111
// 392
#define FUNC_ID_BF16_LOG2_C0 0b110001000
// 393
#define FUNC_ID_BF16_SQRT_C0 0b110001001
// 394
#define FUNC_ID_BF16_RCP_C0 0b110001010
// 395
#define FUNC_ID_BF16_SINCOS_C0 0b110001011
// 396
#define FUNC_ID_BF16_POW2_C0 0b110001100
// 397
#define FUNC_ID_INT8_TANH_C0 0b110001101
// 398
#define FUNC_ID_FP16_RCP 0b110001110
// 399
#define FUNC_ID_BF16_RCP_LINEAR_M2 0b110001111
// 400
#define FUNC_ID_BF16_RCP_LINEAR_M3 0b110010000
// 401
#define FUNC_ID_BF16_RCP_LINEAR_M4 0b110010001
// 402
#define FUNC_ID_BF16_RCP_POLY2_M2_C2C1 0b110010010
// 403
#define FUNC_ID_BF16_RCP_POLY2_M3_C2C1 0b110010011
// 404
#define FUNC_ID_BF16_RCP_POLY2_M4_C2C1 0b110010100
// 405
#define FUNC_ID_BF16_RCP_POLY2_M2_C0 0b110010101
// 406
#define FUNC_ID_BF16_RCP_POLY2_M3_C0 0b110010110
// 407
#define FUNC_ID_BF16_RCP_POLY2_M4_C0 0b110010111
// 408
#define FUNC_ID_FP16_RCP_C0 0b110011000
// 409
#define FUNC_ID_BF16_SQRT_LINEAR_M2 0b110011001
// 410
#define FUNC_ID_BF16_SQRT_LINEAR_M3 0b110011010
// 411
#define FUNC_ID_BF16_SQRT_LINEAR_M4 0b110011011
// 412
#define FUNC_ID_BF16_SQRT_POLY2_M2_C2C1 0b110011100
// 413
#define FUNC_ID_BF16_SQRT_POLY2_M3_C2C1 0b110011101
// 414
#define FUNC_ID_BF16_SQRT_POLY2_M4_C2C1 0b110011110
// 415
#define FUNC_ID_BF16_SQRT_POLY2_M2_C0 0b110011111
// 416
#define FUNC_ID_BF16_SQRT_POLY2_M3_C0 0b110100000
// 417
#define FUNC_ID_BF16_SQRT_POLY2_M4_C0 0b110100001

// 418
#define FUNC_ID_BF16_TANH_LINEAR_M2 0b110100010
// 419
#define FUNC_ID_BF16_TANH_LINEAR_M3 0b110100011

// 421
#define FUNC_ID_BF16_TANH_POLY2_M2_C2C1 0b110100101
// 422
#define FUNC_ID_BF16_TANH_POLY2_M3_C2C1 0b110100110

// 424
#define FUNC_ID_BF16_TANH_POLY2_M2_C0 0b110101000
// 425
#define FUNC_ID_BF16_TANH_POLY2_M3_C0 0b110101001

// 426
#define FUNC_ID_BF16_LOG2ML_LINEAR_M4_0_075 0b110101010

// 427
#define FUNC_ID_BF16_SINCOS_LINEAR_M2 0b110101011
// 428
#define FUNC_ID_BF16_SINCOS_LINEAR_M3 0b110101100
// 429
#define FUNC_ID_BF16_SINCOS_LINEAR_M4 0b110101101
// 430
#define FUNC_ID_BF16_SINCOS_POLY2_M2_C2C1 0b110101110
// 431
#define FUNC_ID_BF16_SINCOS_POLY2_M2_C0 0b110101111
// 432
#define FUNC_ID_BF16_SINCOS_POLY2_M3_C2C1 0b110110000
// 433
#define FUNC_ID_BF16_SINCOS_POLY2_M3_C0 0b110110001
// 434
#define FUNC_ID_BF16_SINCOS_POLY2_M4_C2C1 0b110110010
// 435
#define FUNC_ID_BF16_SINCOS_POLY2_M4_C0 0b110110011

// 436
#define FUNC_ID_FP16_LOG2 0b110110100
// 437
#define FUNC_ID_FP16_LOG2_C0 0b110110101
// 438
#define FUNC_ID_FP16_SQRT 0b110110110
// 439
#define FUNC_ID_FP16_SQRT_C0 0b110110111
// 440
#define FUNC_ID_FP16_RSQRT 0b110111000
// 441
#define FUNC_ID_FP16_RSQRT_C0 0b110111001
// 442
#define FUNC_ID_FP16_SINCOS 0b110111010
// 443
#define FUNC_ID_FP16_SINCOS_C0 0b110111011
// 444
#define FUNC_ID_FP16_POW2 0b110111100
// 445
#define FUNC_ID_FP16_POW2_C0 0b110111101
// 446
#define FUNC_ID_BF16_RSQRT_LINEAR_M2 0b110111110
// 447
#define FUNC_ID_BF16_RSQRT_LINEAR_M3 0b110111111
// 448
#define FUNC_ID_BF16_RSQRT_LINEAR_M4 0b111000000
// 449
#define FUNC_ID_BF16_RSQRT_POLY2_M2_C2C1 0b111000001
// 450
#define FUNC_ID_BF16_RSQRT_POLY2_M3_C2C1 0b111000010
// 451
#define FUNC_ID_BF16_RSQRT_POLY2_M4_C2C1 0b111000011
// 452
#define FUNC_ID_BF16_RSQRT_POLY2_M2_C0 0b111000100
// 453
#define FUNC_ID_BF16_RSQRT_POLY2_M3_C0 0b111000101
// 454
#define FUNC_ID_BF16_RSQRT_POLY2_M4_C0 0b111000110

#define FUNC_ID_UNUSED 0xFFFFFFFF

#define SPECIAL_FUNC_NUM_TABLES_PER_TYPE 128 // 16 //16*8 (+3bits to func_ID)
#define SPECIAL_FUNC_NUM_ELEMENTS_IN_ENTRY 3
#define SPECIAL_FUNC_BYTES_IN_ENTRY (SPECIAL_FUNC_NUM_ELEMENTS_IN_ENTRY * sizeof(float))

#define SPECIAL_FUNC_NUM_OF_DIFFERENT_INTERVALS 4 // 256/128/64/32
#define SPECIAL_FUNC_256_ENTRIES 0b00
#define SPECIAL_FUNC_128_ENTRIES 0b01
#define SPECIAL_FUNC_64_ENTRIES 0b10
#define SPECIAL_FUNC_32_ENTRIES 0b11

#define SPECIAL_FUNC_NUM_ENTRIES_IN_FUNCID_OFFSET 7 // 4 //4+3 (+3bits to func_ID)

// We have room for 16 functions of each type of the following:
// 256 entries, 128 entries, 64 entries, 32 entries or less.
// In order to align data in cache line each entry type has it's own number of cache lines
// needed to store coefficietns (See TPC_Overview:TCACHE)
#define SPECIAL_FUNCS_NUM_OF_INTERVALS_IN_CACHE_LINE 10
#define SPECIAL_FUNCS_CACHE_LINE_PADDING                                                                               \
    (CACHE_LINE_SIZE_IN_BYTES - (SPECIAL_FUNCS_NUM_OF_INTERVALS_IN_CACHE_LINE * SPECIAL_FUNC_BYTES_IN_ENTRY))
#define SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_256 26
#define SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_128 13
#define SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_64 7
#define SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_32 4
#define SPECIAL_FUNC256_SIZE_BYTES                                                                                     \
    (SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_256 * CACHE_LINE_SIZE_IN_BYTES * SPECIAL_FUNC_NUM_TABLES_PER_TYPE)
#define SPECIAL_FUNC128_SIZE_BYTES                                                                                     \
    (SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_128 * CACHE_LINE_SIZE_IN_BYTES * SPECIAL_FUNC_NUM_TABLES_PER_TYPE)
#define SPECIAL_FUNC64_SIZE_BYTES                                                                                      \
    (SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_64 * CACHE_LINE_SIZE_IN_BYTES * SPECIAL_FUNC_NUM_TABLES_PER_TYPE)
#define SPECIAL_FUNC32_SIZE_BYTES                                                                                      \
    (SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_32 * CACHE_LINE_SIZE_IN_BYTES * SPECIAL_FUNC_NUM_TABLES_PER_TYPE)

#define SPECIAL_FUNCS_BLOB_SIZE_BYTES                                                                                  \
    (SPECIAL_FUNC256_SIZE_BYTES + SPECIAL_FUNC128_SIZE_BYTES + SPECIAL_FUNC64_SIZE_BYTES + SPECIAL_FUNC32_SIZE_BYTES)
// these base addresses are configurable in TPC, but in simulator it doesn't matter since we don't simulate cache/actual
// addresses
#define SPECIAL_FUNCS_INTERVAL256_BASE_ADDR 0
#define SPECIAL_FUNCS_INTERVAL128_BASE_ADDR                                                                            \
    (SPECIAL_FUNCS_INTERVAL256_BASE_ADDR +                                                                             \
     (SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_256 * CACHE_LINE_SIZE_IN_BYTES * SPECIAL_FUNC_NUM_TABLES_PER_TYPE))
#define SPECIAL_FUNCS_INTERVAL64_BASE_ADDR                                                                             \
    (SPECIAL_FUNCS_INTERVAL128_BASE_ADDR +                                                                             \
     (SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_128 * CACHE_LINE_SIZE_IN_BYTES * SPECIAL_FUNC_NUM_TABLES_PER_TYPE))
#define SPECIAL_FUNCS_INTERVAL32_BASE_ADDR                                                                             \
    (SPECIAL_FUNCS_INTERVAL64_BASE_ADDR +                                                                              \
     (SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_64 * CACHE_LINE_SIZE_IN_BYTES * SPECIAL_FUNC_NUM_TABLES_PER_TYPE))

#endif // SPECIALFUNCCOEFFICIENTS_DEF_GEN4_H_

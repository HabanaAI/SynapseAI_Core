/*****************************************************************************
 * Copyright (C) 2020 HabanaLabs, Ltd.
 * All Rights Reserved.
 *
 * Unauthorized copying of this file, via any medium is strictly prohibited.
 * Proprietary and confidential.
 ******************************************************************************
 */

#include <cassert>
#include <cstring>
#include "SpecialFuncCoefficients.h"
#include "gaudi2/SpecialFuncCoefficients_defGen6.h"
using namespace std;

// clang-format off

namespace tpc_gaudi2 {

// FP32

//log2_default_coeffs_m7_zero_exp
// followed by log2_default_coeffs_m7_nonzero_exp
float log2_coeffs_fp32[3 * 256] =  // C0, C1, C2
{ 1.4426950216, -0.7213352919, 0.4767034054, 1.4370887280, -0.7138869762, 0.4684575796,
1.4315400124, -0.7065676451, 0.4604130983, 1.4260480404, -0.6993738413, 0.4525636435,
1.4206118584, -0.6923028231, 0.4449031353, 1.4152303934, -0.6853513718, 0.4374254942,
1.4099026918, -0.6785168648, 0.4301253557, 1.4046280384, -0.6717963219, 0.4229969978,
1.3994054794, -0.6651872396, 0.4160354137, 1.3942340612, -0.6586868763, 0.4092354774,
1.3891130686, -0.6522927284, 0.4025923014, 1.3840415478, -0.6460024118, 0.3961013556,
1.3790189028, -0.6398135424, 0.3897579908, 1.3740440607, -0.6337237358, 0.3835577965,
1.3691165447, -0.6277308464, 0.3774968386, 1.3642354012, -0.6218326092, 0.3715709448,
1.3594000340, -0.6160269976, 0.3657763004, 1.3546096087, -0.6103118658, 0.3601089716,
1.3498635292, -0.6046853065, 0.3545655012, 1.3451610804, -0.5991452932, 0.3491423130,
1.3405015469, -0.5936901569, 0.3438361883, 1.3358843327, -0.5883178711, 0.3386436701,
1.3313087225, -0.5830266476, 0.3335616589, 1.3267742395, -0.5778149366, 0.3285871744,
1.3222800493, -0.5726808310, 0.3237172365, 1.3178257942, -0.5676229000, 0.3189491034,
1.3134106398, -0.5626394749, 0.3142797947, 1.3090342283, -0.5577288866, 0.3097069263,
1.3046958447, -0.5528898239, 0.3052278757, 1.3003950119, -0.5481207371, 0.3008399010,
1.2961311340, -0.5434203148, 0.2965409756, 1.2919038534, -0.5387868881, 0.2923284769,
1.2877123356, -0.5342193842, 0.2882003784, 1.2835563421, -0.5297163725, 0.2841544151,
1.2794352770, -0.5252765417, 0.2801883221, 1.2753486633, -0.5208986998, 0.2763003111,
1.2712960243, -0.5165815353, 0.2724882364, 1.2672768831, -0.5123240948, 0.2687501907,
1.2632907629, -0.5081249475, 0.2650845051, 1.2593371868, -0.5039830208, 0.2614890337,
1.2554157972, -0.4998973608, 0.2579623461, 1.2515259981, -0.4958667755, 0.2545025349,
1.2476676702, -0.4918903112, 0.2511081696, 1.2438400984, -0.4879667759, 0.2477774620,
1.2400429249, -0.4840953350, 0.2445089817, 1.2362757921, -0.4802749157, 0.2413011789,
1.2325384617, -0.4765046835, 0.2381526232, 1.2288302183, -0.4727836847, 0.2350617647,
1.2251509428, -0.4691108465, 0.2320275307, 1.2215001583, -0.4654854536, 0.2290482521,
1.2178776264, -0.4619066715, 0.2261229753, 1.2142827511, -0.4583735466, 0.2232501507,
1.2107152939, -0.4548853636, 0.2204287052, 1.2071750164, -0.4514411688, 0.2176574469,
1.2036613226, -0.4480403662, 0.2149351835, 1.2001742125, -0.4446821213, 0.2122608423,
1.1967130899, -0.4413655996, 0.2096332312, 1.1932777166, -0.4380900860, 0.2070513964,
1.1898677349, -0.4348549843, 0.2045143843, 1.1864829063, -0.4316594601, 0.2020210028,
1.1831228733, -0.4285029173, 0.1995704174, 1.1797873974, -0.4253847599, 0.1971615553,
1.1764761209, -0.4223041534, 0.1947935820, 1.1731886864, -0.4192605019, 0.1924656630,
1.1699249744, -0.4162533283, 0.1901768446, 1.1666846275, -0.4132817984, 0.1879262924,
1.1634672880, -0.4103455544, 0.1857131720, 1.1602728367, -0.4074437618, 0.1835367680,
1.1571009159, -0.4045760632, 0.1813961267, 1.1539511681, -0.4017417431, 0.1792905331,
1.1508234739, -0.3989404440, 0.1772193909, 1.1477175951, -0.3961714506, 0.1751818657,
1.1446331739, -0.3934342861, 0.1731772423, 1.1415700912, -0.3907283545, 0.1712048054,
1.1385279894, -0.3880532980, 0.1692639589, 1.1355066299, -0.3854086399, 0.1673541069,
1.1325058937, -0.3827937841, 0.1654744148, 1.1295253038, -0.3802082539, 0.1636245251,
1.1265649796, -0.3776516914, 0.1618036032, 1.1236244440, -0.3751235008, 0.1600111723,
1.1207035780, -0.3726233244, 0.1582465172, 1.1178021431, -0.3701508045, 0.1565093994,
1.1149197817, -0.3677053452, 0.1547988653, 1.1120566130, -0.3652867079, 0.1531147957,
1.1092121601, -0.3628942966, 0.1514563560, 1.1063863039, -0.3605278730, 0.1498230696,
1.1035788059, -0.3581868410, 0.1482145786, 1.1007894278, -0.3558710814, 0.1466304064,
1.0980181694, -0.3535799980, 0.1450699568, 1.0952646732, -0.3513132334, 0.1435327530,
1.0925288200, -0.3490705490, 0.1420185566, 1.0898103714, -0.3468515873, 0.1405266523,
1.0871092081, -0.3446558714, 0.1390568018, 1.0844249725, -0.3424831629, 0.1376085281,
1.0817577839, -0.3403331041, 0.1361814737, 1.0791072845, -0.3382052183, 0.1347751617,
1.0764732361, -0.3360993862, 0.1333892345, 1.0738556385, -0.3340152502, 0.1320233345,
1.0712541342, -0.3319523335, 0.1306769848, 1.0686687231, -0.3299105167, 0.1293499470,
1.0660991669, -0.3278894424, 0.1280418634, 1.0635453463, -0.3258888721, 0.1267523766,
1.0610071421, -0.3239083290, 0.1254810095, 1.0584841967, -0.3219478130, 0.1242275238,
1.0559766293, -0.3200067282, 0.1229916811, 1.0534840822, -0.3180849552, 0.1217731237,
1.0510064363, -0.3161823750, 0.1205713749, 1.0485436916, -0.3142983913, 0.1193863153,
1.0460954905, -0.3124330044, 0.1182175875, 1.0436618328, -0.3105858564, 0.1170649529,
1.0412424803, -0.3087568283, 0.1159280539, 1.0388374329, -0.3069454432, 0.1148066521,
1.0364464521, -0.3051515818, 0.1137005091, 1.0340692997, -0.3033750057, 0.1126092672,
1.0317060947, -0.3016154766, 0.1115326881, 1.0293564796, -0.2998728752, 0.1104705334,
1.0270204544, -0.2981467247, 0.1094225645, 1.0246978998, -0.2964370251, 0.1083886623,
1.0223885775, -0.2947435379, 0.1073683500, 1.0200924873, -0.2930659056, 0.1063615084,
1.0178093910, -0.2914040089, 0.1053678989, 1.0155392885, -0.2897576094, 0.1043872833,
1.0132818222, -0.2881265879, 0.1034195423, 1.0110372305, -0.2865107059, 0.1024643183,
1.0088050365, -0.2849097252, 0.1015213728, 1.0065854788, -0.2833234072, 0.1005907059,
1.0043780804, -0.2817517519, 0.0996719599, 1.0021829605, -0.2801944017, 0.0987650156,
0.0000000000, 1.4426786900, -0.7157516479, 0.0112272501, 1.4314954281, -0.7047401667,
0.0223678350, 1.4204840660, -0.6939808130, 0.0334230661, 1.4096409082, -0.6834659576,
0.0443941355, 1.3989621401, -0.6731883287, 0.0552824736, 1.3884438276, -0.6631407738,
0.0660891533, 1.3780825138, -0.6533166170, 0.0768156052, 1.3678747416, -0.6437090635,
0.0874629021, 1.3578169346, -0.6343117952, 0.0980321169, 1.3479061127, -0.6251189709,
0.1085244417, 1.3381388187, -0.6161245108, 0.1189410686, 1.3285121918, -0.6073228121,
0.1292830706, 1.3190230131, -0.5987082720, 0.1395514011, 1.3096683025, -0.5902757645,
0.1497471333, 1.3004455566, -0.5820202827, 0.1598713398, 1.2913516760, -0.5739367008,
0.1699249744, 1.2823840380, -0.5660203695, 0.1799091101, 1.2735402584, -0.5582666397,
0.1898245811, 1.2648174763, -0.5506712198, 0.1996723413, 1.2562134266, -0.5432298183,
0.2094533443, 1.2477256060, -0.5359381437, 0.2191685438, 1.2393517494, -0.5287922621,
0.2288186550, 1.2310895920, -0.5217884779, 0.2384047508, 1.2229368687, -0.5149228573,
0.2479275465, 1.2148913145, -0.5081918240, 0.2573878765, 1.2069510221, -0.5015920401,
0.2667865753, 1.1991137266, -0.4951199293, 0.2761243582, 1.1913776398, -0.4887721539,
0.2854021788, 1.1837407351, -0.4825458527, 0.2946207523, 1.1762011051, -0.4764376879,
0.3037807941, 1.1687568426, -0.4704447985, 0.3128829002, 1.1614062786, -0.4645642042,
0.3219281435, 1.1541476250, -0.4587932825, 0.3309168816, 1.1469790936, -0.4531291723,
0.3398499489, 1.1398991346, -0.4475693703, 0.3487281799, 1.1329059601, -0.4421111345,
0.3575520515, 1.1259981394, -0.4367523193, 0.3663221598, 1.1191740036, -0.4314901829,
0.3750394583, 1.1124320030, -0.4263226986, 0.3837043047, 1.1057708263, -0.4212474823,
0.3923174143, 1.0991889238, -0.4162622690, 0.4008793831, 1.0926849842, -0.4113651514,
0.4093909264, 1.0862574577, -0.4065538645, 0.4178525209, 1.0799051523, -0.4018265009,
0.4262647629, 1.0736267567, -0.3971810341, 0.4346282482, 1.0674209595, -0.3926157951,
0.4429434538, 1.0612863302, -0.3881287575, 0.4512110949, 1.0552219152, -0.3837182522,
0.4594316483, 1.0492264032, -0.3793824911, 0.4676055908, 1.0432987213, -0.3751196861,
0.4757333994, 1.0374375582, -0.3709285259, 0.4838157892, 1.0316418409, -0.3668071032,
0.4918531179, 1.0259106159, -0.3627539873, 0.4998458624, 1.0202425718, -0.3587676287,
0.5077946186, 1.0146369934, -0.3548467159, 0.5156998634, 1.0090925694, -0.3509896994,
0.5235619545, 1.0036084652, -0.3471952677, 0.5313814878, 0.9981836081, -0.3434619904,
0.5391588211, 0.9928170443, -0.3397885561, 0.5468944311, 0.9875079393, -0.3361737728,
0.5545887947, 0.9822552204, -0.3326164484, 0.5622423887, 0.9770581722, -0.3291151524,
0.5698555708, 0.9719158411, -0.3256689310, 0.5774288177, 0.9668273926, -0.3222765923,
0.5849624872, 0.9617918730, -0.3189369440, 0.5924570560, 0.9568084478, -0.3156489134,
0.5999128819, 0.9518765211, -0.3124115467, 0.6073303223, 0.9469951391, -0.3092236519,
0.6147098541, 0.9421635866, -0.3060843945, 0.6220518351, 0.9373811483, -0.3029925823,
0.6293566227, 0.9326468706, -0.2999475002, 0.6366245747, 0.9279602766, -0.2969479561,
0.6438561678, 0.9233205318, -0.2939932346, 0.6510516405, 0.9187269211, -0.2910825014,
0.6582114697, 0.9141788483, -0.2882146835, 0.6653358936, 0.9096754789, -0.2853890657,
0.6724253893, 0.9052163363, -0.2826048136, 0.6794800758, 0.9008007050, -0.2798610926,
0.6865005493, 0.8964279890, -0.2771570683, 0.6934869289, 0.8920973539, -0.2744921446,
0.7004396915, 0.8878085613, -0.2718653679, 0.7073590755, 0.8835606575, -0.2692762613,
0.7142455578, 0.8793532848, -0.2667238712, 0.7210991383, 0.8751857281, -0.2642076015,
0.7279204130, 0.8710575104, -0.2617267370, 0.7347096205, 0.8669681549, -0.2592806816,
0.7414669991, 0.8629168272, -0.2568688393, 0.7481929064, 0.8589034081, -0.2544903755,
0.7548874617, 0.8549269438, -0.2521448135, 0.7615512609, 0.8509871960, -0.2498315573,
0.7681843042, 0.8470836878, -0.2475500107, 0.7747870684, 0.8432157040, -0.2452995777,
0.7813596725, 0.8393830061, -0.2430796623, 0.7879025936, 0.8355848789, -0.2408897877,
0.7944158316, 0.8318209648, -0.2387293577, 0.8008998632, 0.8280909061, -0.2365978956,
0.8073549271, 0.8243941069, -0.2344948053, 0.8137811422, 0.8207302094, -0.2324196100,
0.8201789856, 0.8170986176, -0.2303718328, 0.8265484571, 0.8134990931, -0.2283509970,
0.8328900337, 0.8099311590, -0.2263567448, 0.8392038345, 0.8063943386, -0.2243883610,
0.8454900980, 0.8028882742, -0.2224456072, 0.8517490625, 0.7994126081, -0.2205280066,
0.8579809666, 0.7959668636, -0.2186350822, 0.8641861677, 0.7925508022, -0.2167663574,
0.8703646660, 0.7891638279, -0.2149215937, 0.8765169382, 0.7858057022, -0.2131001949,
0.8826431036, 0.7824760675, -0.2113019228, 0.8887432814, 0.7791744471, -0.2095263004,
0.8948177099, 0.7759006023, -0.2077728510, 0.9008668661, 0.7726541758, -0.2060414553,
0.9068906307, 0.7694348097, -0.2043316364, 0.9128893614, 0.7662422657, -0.2026429176,
0.9188632965, 0.7630759478, -0.2009750605, 0.9248125553, 0.7599357367, -0.1993277073,
0.9307373762, 0.7568212748, -0.1977005005, 0.9366379976, 0.7537322044, -0.1960932016,
0.9425145388, 0.7506682873, -0.1945054531, 0.9483672380, 0.7476291656, -0.1929368973,
0.9541963339, 0.7446144819, -0.1913871765, 0.9600019455, 0.7416241169, -0.1898560524,
0.9657843113, 0.7386577129, -0.1883432865, 0.9715435505, 0.7357147932, -0.1868485212,
0.9772799015, 0.7327953577, -0.1853713989, 0.9829936028, 0.7298989296, -0.1839118004,
0.9886846542, 0.7270252705, -0.1824693680, 0.9943534136, 0.7241742611, -0.1810438633 };

// ==========  GL pow2 poly2 approximation  (m = 6) ===================

float pow2_coeffs_fp32[3*64] =  // C0, C1, C2
{ 1.0000000000, 0.6931395531, 0.2415316105, 1.0108892918, 0.7006872892, 0.2441617250,
1.0218971968, 0.7083172798, 0.2468204498, 1.0330249071, 0.7160303593, 0.2495082617,
1.0442737341, 0.7238274813, 0.2522251606, 1.0556452274, 0.7317093611, 0.2549717426,
1.0671404600, 0.7396771908, 0.2577481270, 1.0787608624, 0.7477318048, 0.2605549097,
1.0905077457, 0.7558740377, 0.2633920908, 1.1023825407, 0.7641049623, 0.2662602663,
1.1143867970, 0.7724255323, 0.2691596746, 1.1265215874, 0.7808367014, 0.2720906734,
1.1387887001, 0.7893394232, 0.2750535011, 1.1511892080, 0.7979347706, 0.2780486345,
1.1637248993, 0.8066236973, 0.2810764313, 1.1763969660, 0.8154072762, 0.2841371298,
1.1892070770, 0.8242864609, 0.2872312069, 1.2021567822, 0.8332623243, 0.2903589010,
1.2152473927, 0.8423359394, 0.2935206890, 1.2284805775, 0.8515083790, 0.2967169285,
1.2418577671, 0.8607807159, 0.2999479771, 1.2553807497, 0.8701540232, 0.3032141924,
1.2690509558, 0.8796293736, 0.3065159321, 1.2828700542, 0.8892079592, 0.3098536730,
1.2968395948, 0.8988907337, 0.3132277727, 1.3109612465, 0.9086790085, 0.3166385889,
1.3252366781, 0.9185738564, 0.3200865984, 1.3396675587, 0.9285764694, 0.3235721588,
1.3542555571, 0.9386880398, 0.3270956278, 1.3690024614, 0.9489096403, 0.3306573629,
1.3839099407, 0.9592425823, 0.3342580795, 1.3989796638, 0.9696880579, 0.3378978968,
1.4142135382, 0.9802472591, 0.3415772915, 1.4296133518, 0.9909214973, 0.3452968597,
1.4451807737, 1.0017119646, 0.3490569592, 1.4609178305, 1.0126198530, 0.3528578281,
1.4768261909, 1.0236465931, 0.3567003012, 1.4929077625, 1.0347933769, 0.3605844975,
1.5091644526, 1.0460615158, 0.3645110130, 1.5255981684, 1.0574523211, 0.3684802055,
1.5422108173, 1.0689672232, 0.3724926710, 1.5590044260, 1.0806075335, 0.3765488863,
1.5759809017, 1.0923745632, 0.3806492090, 1.5931421518, 1.1042697430, 0.3847942352,
1.6104903221, 1.1162945032, 0.3889844418, 1.6280274391, 1.1284501553, 0.3932201862,
1.6457555294, 1.1407381296, 0.3975020647, 1.6636766195, 1.1531599760, 0.4018305540,
1.6817928553, 1.1657171249, 0.4062062502, 1.7001063824, 1.1784108877, 0.4106295109,
1.7186193466, 1.1912429333, 0.4151009321, 1.7373338938, 1.2042146921, 0.4196211100,
1.7562521696, 1.2173278332, 0.4241905212, 1.7753765583, 1.2305836678, 0.4288096428,
1.7947090864, 1.2439837456, 0.4334790707, 1.8142521381, 1.2575298548, 0.4381992817,
1.8340080976, 1.2712235451, 0.4429709911, 1.8539791107, 1.2850662470, 0.4477946758,
1.8741676807, 1.2990596294, 0.4526708126, 1.8945759535, 1.3132054806, 0.4576001167,
1.9152065516, 1.3275053501, 0.4625829458, 1.9360618591, 1.3419609070, 0.4676202536,
1.9571441412, 1.3565739393, 0.4727122784, 1.9784560204, 1.3713461161, 0.4778597355 };


float recip_coeffs_fp32[3*128] =  // C0, C1, C2
{ 1.0000000000, -0.9999661446, 0.9883909225, 0.9922480583, -0.9845234156, 0.9656698704,
0.9846153259, -0.9694355726, 0.9436399937, 0.9770991802, -0.9546920061, 0.9222751856,
0.9696969986, -0.9402822256, 0.9015504122, 0.9624060392, -0.9261962175, 0.8814419508,
0.9552239180, -0.9124244452, 0.8619271517, 0.9481481314, -0.8989574909, 0.8429841995,
0.9411764145, -0.8857865334, 0.8245922327, 0.9343065023, -0.8729028702, 0.8067314625,
0.9275362492, -0.8602983952, 0.7893828154, 0.9208632708, -0.8479648829, 0.7725280523,
0.9142856598, -0.8358947039, 0.7561497688, 0.9078013897, -0.8240803480, 0.7402311563,
0.9014084339, -0.8125147820, 0.7247563601, 0.8951048851, -0.8011909723, 0.7097097635,
0.8888888359, -0.7901022434, 0.6950769424, 0.8827586174, -0.7792421579, 0.6808435917,
0.8767123222, -0.7686043978, 0.6669962406, 0.8707482815, -0.7581831217, 0.6535217762,
0.8648648262, -0.7479722500, 0.6404079199, 0.8590604067, -0.7379662991, 0.6276426315,
0.8533333540, -0.7281597853, 0.6152142286, 0.8476821184, -0.7185474634, 0.6031119823,
0.8421052694, -0.7091242075, 0.5913249254, 0.8366012573, -0.6998851299, 0.5798431635,
0.8311687708, -0.6908254623, 0.5686566830, 0.8258064985, -0.6819405556, 0.5577560663,
0.8205127716, -0.6732258797, 0.5471323729, 0.8152866364, -0.6646772623, 0.5367767811,
0.8101265430, -0.6562904119, 0.5266808271, 0.8050314188, -0.6480613947, 0.5168365240,
0.7999999523, -0.6399860382, 0.5072360039, 0.7950310707, -0.6320607662, 0.4978717566,
0.7901234627, -0.6242818832, 0.4887367487, 0.7852760553, -0.6166455746, 0.4798237085,
0.7804877758, -0.6091486216, 0.4711261988, 0.7757575512, -0.6017874479, 0.4626375437,
0.7710843086, -0.5945590734, 0.4543516636, 0.7664670944, -0.5874600410, 0.4462623596,
0.7619047165, -0.5804873705, 0.4383641481, 0.7573964596, -0.5736382008, 0.4306510687,
0.7529411316, -0.5669094324, 0.4231178761, 0.7485380173, -0.5602984428, 0.4157594442,
0.7441860437, -0.5538024902, 0.4085706472, 0.7398843765, -0.5474187136, 0.4015465975,
0.7356321812, -0.5411447287, 0.3946826458, 0.7314286232, -0.5349780321, 0.3879742622,
0.7272727489, -0.5289161205, 0.3814170361, 0.7231638432, -0.5229566097, 0.3750067949,
0.7191010714, -0.5170973539, 0.3687393665, 0.7150838375, -0.5113359690, 0.3626108170,
0.7111110687, -0.5056703091, 0.3566173315, 0.7071822882, -0.5000983477, 0.3507552147,
0.7032966614, -0.4946179390, 0.3450208902, 0.6994535923, -0.4892271757, 0.3394109011,
0.6956521273, -0.4839240313, 0.3339217901, 0.6918919086, -0.4787065983, 0.3285504580,
0.6881719828, -0.4735730886, 0.3232936859, 0.6844919920, -0.4685218334, 0.3181486130,
0.6808511019, -0.4635508060, 0.3131120205, 0.6772487164, -0.4586585760, 0.3081811666,
0.6736842394, -0.4538433552, 0.3033533096, 0.6701570749, -0.4491035938, 0.2986257076,
0.6666666269, -0.4444377422, 0.2939959764, 0.6632124186, -0.4398441315, 0.2894613743,
0.6597938538, -0.4353214502, 0.2850195169, 0.6564102173, -0.4308681488, 0.2806681395,
0.6530612707, -0.4264827967, 0.2764048576, 0.6497461796, -0.4221640825, 0.2722275257,
0.6464645863, -0.4179105759, 0.2681339979, 0.6432161331, -0.4137210846, 0.2641220093,
0.6399999857, -0.4095942974, 0.2601897717, 0.6368159056, -0.4055289030, 0.2563351393,
0.6336634159, -0.4015238285, 0.2525562048, 0.6305419207, -0.3975776434, 0.2488512993,
0.6274509430, -0.3936895132, 0.2452185154, 0.6243902445, -0.3898580074, 0.2416560650,
0.6213592291, -0.3860821724, 0.2381622791, 0.6183575392, -0.3823610544, 0.2347354889,
0.6153845787, -0.3786933422, 0.2313741446, 0.6124402285, -0.3750782013, 0.2280766964,
0.6095237732, -0.3715145588, 0.2248415947, 0.6066350937, -0.3680014610, 0.2216674089,
0.6037735939, -0.3645380735, 0.2185527086, 0.6009389162, -0.3611232042, 0.2154960632,
0.5981308222, -0.3577561378, 0.2124961615, 0.5953488350, -0.3544359207, 0.2095515728,
0.5925925970, -0.3511618376, 0.2066612244, 0.5898617506, -0.3479328156, 0.2038238049,
0.5871559381, -0.3447480202, 0.2010381222, 0.5844749212, -0.3416069746, 0.1983029842,
0.5818182230, -0.3385084867, 0.1956171989, 0.5791854858, -0.3354520798, 0.1929796934,
0.5765765905, -0.3324368000, 0.1903892756, 0.5739910603, -0.3294620514, 0.1878452301,
0.5714285374, -0.3265269995, 0.1853461266, 0.5688889027, -0.3236310482, 0.1828912497,
0.5663716793, -0.3207733631, 0.1804795265, 0.5638766289, -0.3179534674, 0.1781100035,
0.5614035130, -0.3151705265, 0.1757818460, 0.5589519739, -0.3124239445, 0.1734939814,
0.5565217733, -0.3097131252, 0.1712456942, 0.5541125536, -0.3070374727, 0.1690361500,
0.5517241955, -0.3043963909, 0.1668643951, 0.5493562222, -0.3017891645, 0.1647295952,
0.5470085144, -0.2992153168, 0.1626311541, 0.5446808338, -0.2966742516, 0.1605682373,
0.5423728228, -0.2941653728, 0.1585400105, 0.5400843620, -0.2916882038, 0.1565458775,
0.5378150940, -0.2892422676, 0.1545848846, 0.5355648994, -0.2868268490, 0.1526566744,
0.5333333015, -0.2844417095, 0.1507602930, 0.5311203003, -0.2820861340, 0.1488952637,
0.5289256573, -0.2797596455, 0.1470608711, 0.5267490149, -0.2774618864, 0.1452564001,
0.5245901346, -0.2751922607, 0.1434813738, 0.5224490166, -0.2729504108, 0.1417351961,
0.5203251839, -0.2707358599, 0.1400171518, 0.5182186365, -0.2685481310, 0.1383268833,
0.5161290169, -0.2663867474, 0.1366636753, 0.5140562057, -0.2642514706, 0.1350269318,
0.5119999647, -0.2621417046, 0.1334162951, 0.5099601746, -0.2600570917, 0.1318311691,
0.5079364777, -0.2579972744, 0.1302710772, 0.5059288740, -0.2559617758, 0.1287354231,
0.5039370060, -0.2539503574, 0.1272238493, 0.5019607544, -0.2519624233, 0.1257358789 };


// rqsrt FP32 (m=7, even and odd exp)
// rqsrt FP32 (m=7, even and odd exp)
// rsqrt_default_coeffs_m7_12 followed by rsqrt_default_coeffs_m7_24
float rsqrt_coeffs_fp32[3 * 256] =  // C0, C1, C2
{ 1.0000000000, -0.4999893904, 0.3713679314, 0.9961165190, -0.4941869974, 0.3642400503,
0.9922778606, -0.4884959459, 0.3573021889, 0.9884833097, -0.4829133749, 0.3505480289,
0.9847319126, -0.4774363041, 0.3439712524, 0.9810229540, -0.4720618725, 0.3375658989,
0.9773555994, -0.4667876959, 0.3313263655, 0.9737290144, -0.4616109133, 0.3252470493,
0.9701424837, -0.4565290213, 0.3193227053, 0.9665952921, -0.4515398741, 0.3135484457,
0.9630868435, -0.4466408491, 0.3079192638, 0.9596161842, -0.4418296814, 0.3024306297,
0.9561828375, -0.4371044636, 0.2970778942, 0.9527860880, -0.4324626923, 0.2918570042,
0.9494253397, -0.4279025793, 0.2867635489, 0.9460998774, -0.4234220982, 0.2817937136,
0.9428089857, -0.4190192223, 0.2769435644, 0.9395523071, -0.4146920443, 0.2722095251,
0.9363291264, -0.4104390144, 0.2675880194, 0.9331389666, -0.4062579870, 0.2630757093,
0.9299811125, -0.4021476507, 0.2586691380, 0.9268550873, -0.3981059790, 0.2543652058,
0.9237604141, -0.3941316605, 0.2501608133, 0.9206964970, -0.3902230263, 0.2460530996,
0.9176629782, -0.3863785267, 0.2420393229, 0.9146591425, -0.3825968504, 0.2381165028,
0.9116846323, -0.3788763285, 0.2342821360, 0.9087389708, -0.3752157688, 0.2305335999,
0.9058216810, -0.3716138601, 0.2268686295, 0.9029322863, -0.3680690527, 0.2232846022,
0.9000703096, -0.3645803928, 0.2197793722, 0.8972353935, -0.3611464500, 0.2163506746,
0.8944271803, -0.3577660322, 0.2129964828, 0.8916451931, -0.3544380665, 0.2097146511,
0.8888888359, -0.3511613607, 0.2065030336, 0.8861579895, -0.3479348421, 0.2033599615,
0.8834521770, -0.3447573185, 0.2002834082, 0.8807710409, -0.3416280746, 0.1972717047,
0.8781141043, -0.3385456800, 0.1943229437, 0.8754810095, -0.3355095387, 0.1914355755,
0.8728715181, -0.3325183392, 0.1886079311, 0.8702852726, -0.3295714855, 0.1858383417,
0.8677217960, -0.3266677856, 0.1831253767, 0.8651809692, -0.3238065243, 0.1804676056,
0.8626621962, -0.3209867477, 0.1778634787, 0.8601653576, -0.3182077408, 0.1753116846,
0.8576899767, -0.3154685497, 0.1728107929, 0.8552359343, -0.3127684593, 0.1703596115,
0.8528028727, -0.3101066351, 0.1679568291, 0.8503904343, -0.3074823618, 0.1656011343,
0.8479982615, -0.3048949242, 0.1632915735, 0.8456262350, -0.3023434877, 0.1610268354,
0.8432739973, -0.2998275757, 0.1588057280, 0.8409413099, -0.2973462343, 0.1566274166,
0.8386278152, -0.2948989868, 0.1544905901, 0.8363333941, -0.2924851179, 0.1523944139,
0.8340576887, -0.2901040316, 0.1503378153, 0.8318003416, -0.2877550125, 0.1483198404,
0.8295613527, -0.2854375839, 0.1463396549, 0.8273402452, -0.2831510305, 0.1443961859,
0.8251370192, -0.2808948755, 0.1424887180, 0.8229511976, -0.2786686420, 0.1406164169,
0.8207826614, -0.2764714956, 0.1387783289, 0.8186311722, -0.2743030787, 0.1369736195,
0.8164966106, -0.2721629143, 0.1352016926, 0.8143785000, -0.2700504065, 0.1334615946,
0.8122769594, -0.2679651976, 0.1317527294, 0.8101915121, -0.2659065723, 0.1300743818,
0.8081220388, -0.2638741732, 0.1284258366, 0.8060683012, -0.2618675232, 0.1268063784,
0.8040302992, -0.2598862648, 0.1252152920, 0.8020075560, -0.2579298019, 0.1236521006,
0.7999999523, -0.2559977770, 0.1221160889, 0.7980074883, -0.2540897131, 0.1206065416,
0.7960298061, -0.2522052526, 0.1191231012, 0.7940666676, -0.2503440380, 0.1176650524,
0.7921180725, -0.2485055923, 0.1162319183, 0.7901836634, -0.2466894388, 0.1148229837,
0.7882634401, -0.2448953390, 0.1134380102, 0.7863570452, -0.2431229353, 0.1120761633,
0.7844645977, -0.2413717508, 0.1107370853, 0.7825856209, -0.2396415472, 0.1094204187,
0.7807201147, -0.2379318476, 0.1081255674, 0.7788678408, -0.2362424135, 0.1068519354,
0.7770286798, -0.2345728874, 0.1055992842, 0.7752025127, -0.2329229116, 0.1043671370,
0.7733892202, -0.2312922478, 0.1031548977, 0.7715885639, -0.2296804190, 0.1019624472,
0.7698003054, -0.2280873060, 0.1007890701, 0.7680245638, -0.2265124321, 0.0996346474,
0.7662609816, -0.2249556780, 0.0984984636, 0.7645095587, -0.2234166861, 0.0973805189,
0.7627700567, -0.2218950987, 0.0962800980, 0.7610423565, -0.2203907967, 0.0951970816,
0.7593263388, -0.2189033031, 0.0941311121, 0.7576220036, -0.2174326181, 0.0930817127,
0.7559289932, -0.2159781456, 0.0920486450, 0.7542471886, -0.2145400047, 0.0910315514,
0.7525767088, -0.2131175995, 0.0900300741, 0.7509171963, -0.2117109299, 0.0890439749,
0.7492686510, -0.2103196383, 0.0880730152, 0.7476309538, -0.2089434862, 0.0871167183,
0.7460038662, -0.2075823545, 0.0861748457, 0.7443873882, -0.2062358856, 0.0852472782,
0.7427814007, -0.2049038410, 0.0843335390, 0.7411856651, -0.2035862207, 0.0834335089,
0.7396003008, -0.2022825480, 0.0825469494, 0.7380249500, -0.2009927034, 0.0816733837,
0.7364597321, -0.1997166872, 0.0808128119, 0.7349042892, -0.1984539032, 0.0799647570,
0.7333587408, -0.1972044706, 0.0791292191, 0.7318229675, -0.1959681511, 0.0783058405,
0.7302967310, -0.1947445869, 0.0774943829, 0.7287800312, -0.1935337782, 0.0766946077,
0.7272727489, -0.1923354864, 0.0759063959, 0.7257747650, -0.1911494732, 0.0751295090,
0.7242859602, -0.1899755001, 0.0743635893, 0.7228063345, -0.1888135672, 0.0736086369,
0.7213356495, -0.1876634359, 0.0728644133, 0.7198740244, -0.1865249872, 0.0721306801,
0.7184212208, -0.1853979826, 0.0714071989, 0.7169771194, -0.1842821836, 0.0706938505,
0.7155417204, -0.1831777096, 0.0699903965, 0.7141149044, -0.1820840836, 0.0692967176,
0.7126966715, -0.1810013056, 0.0686126947, 0.7112867832, -0.1799292564, 0.0679379702,
0.7098852396, -0.1788676977, 0.0672726631, 0.7084919214, -0.1778166294, 0.0666162968,
0.7071068287, -0.1767729521, 0.0656491518, 0.7043607235, -0.1747214794, 0.0643891096,
0.7016464472, -0.1727094650, 0.0631626844, 0.6989632845, -0.1707355976, 0.0619686842,
0.6963106394, -0.1687991619, 0.0608061552, 0.6936879158, -0.1668990850, 0.0596737862,
0.6910947561, -0.1650342941, 0.0585707426, 0.6885303259, -0.1632040739, 0.0574960709,
0.6859943867, -0.1614073515, 0.0564488173, 0.6834861040, -0.1596434116, 0.0554280281,
0.6810052395, -0.1579114199, 0.0544329882, 0.6785511971, -0.1562104225, 0.0534627438,
0.6761233807, -0.1545397043, 0.0525164604, 0.6737215519, -0.1528986692, 0.0515935421,
0.6713451147, -0.1512863636, 0.0506931543, 0.6689935923, -0.1497023106, 0.0498145819,
0.6666666269, -0.1481456757, 0.0489572287, 0.6643638611, -0.1466157436, 0.0481202602,
0.6620846987, -0.1451120377, 0.0473033190, 0.6598289013, -0.1436339617, 0.0465056896,
0.6575959921, -0.1421806812, 0.0457266569, 0.6553854942, -0.1407517195, 0.0449658632,
0.6531972885, -0.1393465996, 0.0442225933, 0.6510307789, -0.1379647255, 0.0434964895,
0.6488857269, -0.1366055012, 0.0427869558, 0.6467616558, -0.1352684498, 0.0420933962,
0.6446583271, -0.1339529753, 0.0414155722, 0.6425755024, -0.1326588392, 0.0407530069,
0.6405125856, -0.1313853264, 0.0401051044, 0.6384694576, -0.1301320791, 0.0394715071,
0.6364458799, -0.1288986206, 0.0388518572, 0.6344412565, -0.1276844740, 0.0382457972,
0.6324555874, -0.1264894009, 0.0376528502, 0.6304882765, -0.1253128052, 0.0370726585,
0.6285393238, -0.1241543293, 0.0365049839, 0.6266083717, -0.1230134964, 0.0359493494,
0.6246950626, -0.1218901873, 0.0354053974, 0.6227991581, -0.1207836866, 0.0348730087,
0.6209204197, -0.1196939945, 0.0343518257, 0.6190586090, -0.1186205149, 0.0338413715,
0.6172133684, -0.1175630093, 0.0333415270, 0.6153845787, -0.1165211201, 0.0328519344,
0.6135720015, -0.1154944897, 0.0323723555, 0.6117752790, -0.1144828796, 0.0319024324,
0.6099942923, -0.1134859324, 0.0314421654, 0.6082286835, -0.1125034094, 0.0309909582,
0.6064784527, -0.1115349531, 0.0305489302, 0.6047431231, -0.1105803251, 0.0301156044,
0.6030226946, -0.1096392870, 0.0296908617, 0.6013168097, -0.1087114811, 0.0292744637,
0.5996253490, -0.1077966690, 0.0288661718, 0.5979480743, -0.1068946123, 0.0284657478,
0.5962847471, -0.1060050726, 0.0280731916, 0.5946353674, -0.1051278114, 0.0276880264,
0.5929994583, -0.1042625904, 0.0273103714, 0.5913770199, -0.1034091711, 0.0269397497,
0.5897678137, -0.1025673151, 0.0265761614, 0.5881717205, -0.1017367840, 0.0262194872,
0.5865885019, -0.1009174585, 0.0258694887, 0.5850179195, -0.1001089811, 0.0255259275,
0.5834599733, -0.0993113518, 0.0251886845, 0.5819144249, -0.0985242128, 0.0248576403,
0.5803810358, -0.0977474451, 0.0245327950, 0.5788596869, -0.0969808102, 0.0242137909,
0.5773502588, -0.0962241888, 0.0239005089, 0.5758526325, -0.0954772234, 0.0235929489,
0.5743665695, -0.0947400331, 0.0232908726, 0.5728919506, -0.0940121412, 0.0229941607,
0.5714285374, -0.0932936668, 0.0227026939, 0.5699764490, -0.0925841331, 0.0224163532,
0.5685352087, -0.0918836594, 0.0221351385, 0.5671049356, -0.0911920071, 0.0218588114,
0.5656853914, -0.0905089378, 0.0215872526, 0.5642764568, -0.0898343325, 0.0213204622,
0.5628780127, -0.0891680717, 0.0210582018, 0.5614899397, -0.0885100365, 0.0208004713,
0.5601119995, -0.0878599882, 0.0205470324, 0.5587441921, -0.0872179270, 0.0202980042,
0.5573863983, -0.0865836143, 0.0200531483, 0.5560383797, -0.0859569311, 0.0198124647,
0.5547001362, -0.0853377581, 0.0195757151, 0.5533715487, -0.0847260952, 0.0193430185,
0.5520524979, -0.0841215849, 0.0191140175, 0.5507427454, -0.0835243464, 0.0188889503,
0.5494422913, -0.0829340219, 0.0186674595, 0.5481510162, -0.0823507309, 0.0184496641,
0.5468686819, -0.0817741156, 0.0182354450, 0.5455955267, -0.0812042952, 0.0180245638,
0.5443310738, -0.0806410313, 0.0178171396, 0.5430754423, -0.0800842047, 0.0176130533,
0.5418283939, -0.0795338154, 0.0174121857, 0.5405899286, -0.0789897442, 0.0172146559,
0.5393599272, -0.0784517527, 0.0170201063, 0.5381382704, -0.0779199600, 0.0168286562,
0.5369248390, -0.0773940086, 0.0166401863, 0.5357196331, -0.0768740177, 0.0164546967,
0.5345225334, -0.0763598680, 0.0162720680, 0.5333333015, -0.0758513212, 0.0160923004,
0.5321520567, -0.0753484964, 0.0159152746, 0.5309786797, -0.0748511553, 0.0157408714,
0.5298129320, -0.0743591785, 0.0155692101, 0.5286549330, -0.0738726854, 0.0154001713,
0.5275043249, -0.0733914375, 0.0152337551, 0.5263613462, -0.0729154348, 0.0150697231,
0.5252257586, -0.0724444389, 0.0149081945, 0.5240974426, -0.0719785690, 0.0147490501,
0.5229763985, -0.0715177059, 0.0145924091, 0.5218625069, -0.0710617304, 0.0144379139,
0.5207556486, -0.0706105232, 0.0142858028, 0.5196558237, -0.0701640844, 0.0141359568,
0.5185630322, -0.0697222948, 0.0139882565, 0.5174770355, -0.0692851543, 0.0138427019,
0.5163978338, -0.0688526630, 0.0136991739, 0.5153253078, -0.0684245825, 0.0135577917,
0.5142594576, -0.0680007935, 0.0134184361, 0.5132002831, -0.0675815344, 0.0132811069,
0.5121475458, -0.0671664476, 0.0131458044, 0.5111012459, -0.0667556524, 0.0130122900,
0.5100613832, -0.0663490295, 0.0128806829, 0.5090278387, -0.0659465790, 0.0127509832,
0.5080004930, -0.0655480623, 0.0126230717, 0.5069793463, -0.0651535988, 0.0124970675,
0.5059643984, -0.0647630692, 0.0123726130, 0.5049555302, -0.0643764734, 0.0122500658,
0.5039526224, -0.0639935732, 0.0121290684, 0.5029556751, -0.0636146069, 0.0120098591,
0.5019646883, -0.0632393360, 0.0118921995, 0.5009794235, -0.0628676414, 0.0117762089 };


// SQRT FP32
// sqrt_default_coeffs_m6_12 followed by sqrt_default_coeffs_m6_24
float sqrt_coeffs_fp32[3*128] =  // C0, C1, C2
{ 1.0000000000, 0.4999915361, -0.1235522032, 1.0077822208, 0.4961308241, -0.1207334995,
1.0155048370, 0.4923580885, -0.1180204153, 1.0231691599, 0.4886702299, -0.1154073477,
1.0307763815, 0.4850640297, -0.1128894091, 1.0383279324, 0.4815363884, -0.1104617119,
1.0458250046, 0.4780846834, -0.1081197262, 1.0532686710, 0.4747061729, -0.1058593988,
1.0606601238, 0.4713982344, -0.1036766768, 1.0680004358, 0.4681584835, -0.1015679836,
1.0752906799, 0.4649846554, -0.0995298624, 1.0825318098, 0.4618744850, -0.0975589752,
1.0897247791, 0.4588259459, -0.0956522226, 1.0968705416, 0.4558370113, -0.0938068628,
1.1039701700, 0.4529056549, -0.0920200348, 1.1110242605, 0.4500302076, -0.0902892351,
1.1180340052, 0.4472087622, -0.0886120796, 1.1250000000, 0.4444397688, -0.0869860649,
1.1319231987, 0.4417215586, -0.0854092836, 1.1388041973, 0.4390525818, -0.0838795900,
1.1456439495, 0.4364315271, -0.0823949575, 1.1524430513, 0.4338567257, -0.0809537172,
1.1592023373, 0.4313269854, -0.0795538425, 1.1659224033, 0.4288411140, -0.0781940222,
1.1726039648, 0.4263975620, -0.0768723488, 1.1792476177, 0.4239953756, -0.0755876303,
1.1858540773, 0.4216333628, -0.0743381977, 1.1924240589, 0.4193104506, -0.0731228590,
1.1989579201, 0.4170254469, -0.0719403028, 1.2054563761, 0.4147773981, -0.0707892179,
1.2119200230, 0.4125652313, -0.0696685314, 1.2183493376, 0.4103882313, -0.0685771704,
1.2247449160, 0.4082452059, -0.0675139427, 1.2311072350, 0.4061354399, -0.0664778948,
1.2374368906, 0.4040580988, -0.0654681921, 1.2437342405, 0.4020122290, -0.0644836426,
1.2500000000, 0.3999972343, -0.0635236502, 1.2562344074, 0.3980121613, -0.0625871420,
1.2624381781, 0.3960564137, -0.0616734028, 1.2686114311, 0.3941291571, -0.0607818365,
1.2747548819, 0.3922297955, -0.0599113703, 1.2808688879, 0.3903576136, -0.0590615273,
1.2869538069, 0.3885118961, -0.0582317114, 1.2930101156, 0.3866922855, -0.0574209690,
1.2990380526, 0.3848978281, -0.0566290617, 1.3050383329, 0.3831282854, -0.0558550358,
1.3110110760, 0.3813828230, -0.0550985336, 1.3169567585, 0.3796610832, -0.0543589592,
1.3228756189, 0.3779623508, -0.0536357164, 1.3287682533, 0.3762862682, -0.0529284477,
1.3346347809, 0.3746323586, -0.0522365570, 1.3404756784, 0.3729999065, -0.0515596867,
1.3462911844, 0.3713887930, -0.0508972406, 1.3520817757, 0.3697983027, -0.0502488613,
1.3578475714, 0.3682279587, -0.0496141911, 1.3635890484, 0.3666776419, -0.0489926338,
1.3693064451, 0.3651466370, -0.0483840704, 1.3750000000, 0.3636345863, -0.0477879047,
1.3806700706, 0.3621412516, -0.0472040176, 1.3863170147, 0.3606661558, -0.0466318130,
1.3919410706, 0.3592089415, -0.0460710526, 1.3975424767, 0.3577692509, -0.0455214977,
1.4031214714, 0.3563467264, -0.0449827909, 1.4086784124, 0.3549410105, -0.0444546938,
1.4142135382, 0.3535474539, -0.0436823368, 1.4252192974, 0.3508174419, -0.0426857471,
1.4361406565, 0.3481497765, -0.0417264700, 1.4469796419, 0.3455420732, -0.0408027172,
1.4577380419, 0.3429920673, -0.0399124622, 1.4684175253, 0.3404976130, -0.0390540361,
1.4790199995, 0.3380569220, -0.0382261276, 1.4895468950, 0.3356679678, -0.0374269485,
1.5000000000, 0.3333288431, -0.0366551876, 1.5103807449, 0.3310379982, -0.0359096527,
1.5206906796, 0.3287937641, -0.0351891518, 1.5309311152, 0.3265945911, -0.0344922543,
1.5411034822, 0.3244389296, -0.0338181257, 1.5512092113, 0.3223254681, -0.0331656933,
1.5612494946, 0.3202526569, -0.0325340033, 1.5712256432, 0.3182194233, -0.0319221020,
1.5811388493, 0.3162243366, -0.0313290358, 1.5909903049, 0.3142663240, -0.0307542086,
1.6007810831, 0.3123443127, -0.0301967859, 1.6105123758, 0.3104571104, -0.0296559334,
1.6201851368, 0.3086036444, -0.0291310549, 1.6298005581, 0.3067830801, -0.0286214352,
1.6393595934, 0.3049942255, -0.0281265974, 1.6488631964, 0.3032364845, -0.0276457071,
1.6583124399, 0.3015086651, -0.0271785259, 1.6677080393, 0.2998100519, -0.0267242193,
1.6770509481, 0.2981398106, -0.0262825489, 1.6863422394, 0.2964972258, -0.0258527994,
1.6955825090, 0.2948814631, -0.0254347324, 1.7047727108, 0.2932919264, -0.0250277519,
1.7139136791, 0.2917276621, -0.0246316195, 1.7230061293, 0.2901883125, -0.0242457390,
1.7320507765, 0.2886729240, -0.0238697529, 1.7410485744, 0.2871811390, -0.0235035419,
1.7500000000, 0.2857122421, -0.0231465101, 1.7589058876, 0.2842656374, -0.0227984190,
1.7677669525, 0.2828407288, -0.0224590302, 1.7765837908, 0.2814370394, -0.0221278667,
1.7853571177, 0.2800540924, -0.0218048096, 1.7940875292, 0.2786914110, -0.0214896202,
1.8027756214, 0.2773482800, -0.0211818218, 1.8114221096, 0.2760244608, -0.0208814144,
1.8200274706, 0.2747194767, -0.0205880404, 1.8285923004, 0.2734327316, -0.0203013420,
1.8371173143, 0.2721638680, -0.0200213194, 1.8456028700, 0.2709126472, -0.0197477341,
1.8540496826, 0.2696783543, -0.0194802284, 1.8624581099, 0.2684608698, -0.0192188025,
1.8708287477, 0.2672597170, -0.0189630985, 1.8791620731, 0.2660745382, -0.0187129974,
1.8874585629, 0.2649050951, -0.0184683800, 1.8957188129, 0.2637507915, -0.0182291269,
1.9039433002, 0.2626115084, -0.0179948807, 1.9121322632, 0.2614868879, -0.0177656412,
1.9202864170, 0.2603765726, -0.0175412893, 1.9284061193, 0.2592802048, -0.0173214674,
1.9364917278, 0.2581976652, -0.0171062946, 1.9445436001, 0.2571284771, -0.0168956518,
1.9525624514, 0.2560725212, -0.0166891813, 1.9605484009, 0.2550295591, -0.0164868832,
1.9685019255, 0.2539991140, -0.0162886381, 1.9764235020, 0.2529810667, -0.0160943270,
1.9843134880, 0.2519751787, -0.0159038305, 1.9921722412, 0.2509812117, -0.0157171488 };

// Tanh FP32
// tanhx_default_coeffs2_01 (tanh(x)/x on [0, 1]) then
// tanh_default_coeffs2_12 then
// tanh_default_coeffs2_24 then
// tanh_default_coeffs2_48

float tanh_coeffs_fp32[3*256] =    //C0, C1, C2
{ 1.0000000000, -0.0000004768, -0.3332743645, 0.9999185801, -0.0104162693, -0.3328828812,
0.9996745586, -0.0208197832, -0.3321070671, 0.9992681742, -0.0311989784, -0.3309412003,
0.9986999035, -0.0415418148, -0.3293853998, 0.9979704618, -0.0518360138, -0.3274627924,
0.9970805645, -0.0620701313, -0.3251537085, 0.9960314035, -0.0722321272, -0.3224887848,
0.9948240519, -0.0823107958, -0.3194595575, 0.9934599400, -0.0922948122, -0.3160820007,
0.9919407368, -0.1021732092, -0.3123673201, 0.9902679920, -0.1119354963, -0.3083165884,
0.9884437323, -0.1215711832, -0.3039528131, 0.9864699841, -0.1310704947, -0.2992765903,
0.9843490124, -0.1404236555, -0.2943137884, 0.9820830822, -0.1496216059, -0.2890707254,
0.9796746969, -0.1586556435, -0.2835583687, 0.9771264791, -0.1675174236, -0.2777937651,
0.9744411707, -0.1761990786, -0.2717927694, 0.9716217518, -0.1846932173, -0.2655715942,
0.9686712027, -0.1929929256, -0.2591465712, 0.9655923843, -0.2010917664, -0.2525355816,
0.9623887539, -0.2089838982, -0.2457501888, 0.9590634108, -0.2166639566, -0.2388041019,
0.9556196928, -0.2241269350, -0.2317200899, 0.9520611763, -0.2313685417, -0.2245080471,
0.9483913183, -0.2383847237, -0.2171947956, 0.9446135759, -0.2451722622, -0.2097854614,
0.9407315254, -0.2517281771, -0.2023022175, 0.9367489815, -0.2580502033, -0.1947520971,
0.9326694012, -0.2641363144, -0.1871581078, 0.9284965992, -0.2699850798, -0.1795344353,
0.9242343307, -0.2755955458, -0.1718945503, 0.9198862314, -0.2809672356, -0.1642494202,
0.9154560566, -0.2861000299, -0.1566145420, 0.9109475613, -0.2909941673, -0.1490094662,
0.9063644409, -0.2956506014, -0.1414327621, 0.9017103910, -0.3000702858, -0.1339080334,
0.8969891071, -0.3042547703, -0.1264433861, 0.8922042847, -0.3082059622, -0.1190465689,
0.8873596191, -0.3119260073, -0.1117306948, 0.8824584484, -0.3154174089, -0.1045058966,
0.8775045872, -0.3186830282, -0.0973776579, 0.8725014925, -0.3217258453, -0.0903611183,
0.8674525023, -0.3245493174, -0.0834573507, 0.8623610735, -0.3271570206, -0.0766738653,
0.8572305441, -0.3295527697, -0.0700170994, 0.8520642519, -0.3317404985, -0.0634979010,
0.8468652964, -0.3337244987, -0.0571156740, 0.8416368961, -0.3355090618, -0.0508797169,
0.8363821507, -0.3370987177, -0.0447931290, 0.8311041594, -0.3384981155, -0.0388590097,
0.8258056641, -0.3397120237, -0.0330797434, 0.8204896450, -0.3407453299, -0.0274559259,
0.8151587248, -0.3416029215, -0.0219926834, 0.8098158836, -0.3422898054, -0.0166913271,
0.8044635057, -0.3428109884, -0.0115562677, 0.7991043329, -0.3431717157, -0.0065784454,
0.7937407494, -0.3433768749, -0.0017732382, 0.7883750200, -0.3434318304, 0.0028746128,
0.7830096483, -0.3433415890, 0.0073572397, 0.7776467800, -0.3431112766, 0.0116755962,
0.7722884417, -0.3427460194, 0.0158325434, 0.7669370174, -0.3422508240, 0.0198251009,
0.7615941763, 0.4199600220, -0.3174098730, 0.7680785656, 0.4100407362, -0.3124781847,
0.7744091749, 0.4002757072, -0.3074805737, 0.7805885077, 0.3906668425, -0.3024270535,
0.7866188288, 0.3812158108, -0.2973269224, 0.7925027609, 0.3719242811, -0.2921890020,
0.7982428074, 0.3627933264, -0.2870219946, 0.8038413525, 0.3538239002, -0.2818338871,
0.8093011379, 0.3450164795, -0.2766324282, 0.8146244287, 0.3363717794, -0.2714250088,
0.8198139668, 0.3278896809, -0.2662185431, 0.8248723745, 0.3195704222, -0.2610194683,
0.8298019171, 0.3114136457, -0.2558339834, 0.8346053362, 0.3034188747, -0.2506679296,
0.8392850161, 0.2955855131, -0.2455266714, 0.8438436985, 0.2879129648, -0.2404153347,
0.8482836485, 0.2804000378, -0.2353385687, 0.8526074886, 0.2730457783, -0.2303007841,
0.8568176031, 0.2658489943, -0.2253060341, 0.8609164953, 0.2588083744, -0.2203582525,
0.8649066687, 0.2519222498, -0.2154606581, 0.8687903881, 0.2451891899, -0.2106165886,
0.8725700378, 0.2386076450, -0.2058289051, 0.8762480021, 0.2321755886, -0.2011002302,
0.8798266649, 0.2258913517, -0.1964330673, 0.8833082914, 0.2197530270, -0.1918294430,
0.8866951466, 0.2137584686, -0.1872912645, 0.8899893761, 0.2079057693, -0.1828203201,
0.8931933641, 0.2021929026, -0.1784180403, 0.8963090181, 0.1966174841, -0.1740858555,
0.8993387222, 0.1911774874, -0.1698246002, 0.9022845030, 0.1858706474, -0.1656354666,
0.9051482677, 0.1806946993, -0.1615191698, 0.9079321623, 0.1756473780, -0.1574761868,
0.9106382132, 0.1707264185, -0.1535071135, 0.9132684469, 0.1659295559, -0.1496123075,
0.9158245325, 0.1612542868, -0.1457917690, 0.9183086157, 0.1566984653, -0.1420457363,
0.9207223654, 0.1522597075, -0.1383742094, 0.9230675697, 0.1479357481, -0.1347768307,
0.9253462553, 0.1437240839, -0.1312536001, 0.9275598526, 0.1396226883, -0.1278039217,
0.9297102690, 0.1356289387, -0.1244275570, 0.9317991734, 0.1317408085, -0.1211240292,
0.9338279963, 0.1279557943, -0.1178926229, 0.9357986450, 0.1242718697, -0.1147328615,
0.9377123117, 0.1206866503, -0.1116439104, 0.9395707846, 0.1171978712, -0.1086250544,
0.9413754940, 0.1138035059, -0.1056755781, 0.9431279898, 0.1105012894, -0.1027945280,
0.9448294640, 0.1072891951, -0.0999810696, 0.9464814663, 0.1041649580, -0.0972343683,
0.9480853081, 0.1011265516, -0.0945532322, 0.9496423006, 0.0981718302, -0.0919369459,
0.9511538744, 0.0952990055, -0.0893843174, 0.9526211023, 0.0925059319, -0.0868943930,
0.9540452957, 0.0897905827, -0.0844660997, 0.9554276466, 0.0871511698, -0.0820984840,
0.9567693472, 0.0845857859, -0.0797902346, 0.9580714703, 0.0820924044, -0.0775405169,
0.9593353271, 0.0796694756, -0.0753481388, 0.9605617523, 0.0773149729, -0.0732120275,
0.9617519379, 0.0750272274, -0.0711311102, 0.9629068375, 0.0728044510, -0.0691041946,
0.9640276432, 0.0706281662, -0.0661668777, 0.9661701918, 0.0664937496, -0.0624238253,
0.9681872129, 0.0625932217, -0.0588774681, 0.9700858593, 0.0589143038, -0.0555191040,
0.9718728065, 0.0554451942, -0.0523405075, 0.9735543728, 0.0521746874, -0.0493333340,
0.9751367569, 0.0490921736, -0.0464897156, 0.9766255617, 0.0461872816, -0.0438016653,
0.9780261517, 0.0434503555, -0.0412616730, 0.9793437719, 0.0408722162, -0.0388625860,
0.9805830717, 0.0384439230, -0.0365971327, 0.9817487001, 0.0361572504, -0.0344587564,
0.9828450680, 0.0340040922, -0.0324409008, 0.9838759899, 0.0319770575, -0.0305371284,
0.9848455191, 0.0300689936, -0.0287415981, 0.9857571125, 0.0282732248, -0.0270485878,
0.9866143465, 0.0265830755, -0.0254524946, 0.9874202013, 0.0249927044, -0.0239481926,
0.9881778955, 0.0234963894, -0.0225305557, 0.9888901711, 0.0220886469, -0.0211950541,
0.9895597696, 0.0207643509, -0.0199370384, 0.9901891947, 0.0195186138, -0.0187520981,
0.9907808304, 0.0183469057, -0.0176362991, 0.9913370609, 0.0172449350, -0.0165858269,
0.9918597937, 0.0162086487, -0.0155968666, 0.9923510551, 0.0152341127, -0.0146659613,
0.9928127527, 0.0143177509, -0.0137897730, 0.9932467937, 0.0134561062, -0.0129652023,
0.9936546087, 0.0126460791, -0.0121893883, 0.9940379858, 0.0118844509, -0.0114594698,
0.9943981171, 0.0111683607, -0.0107727051, 0.9947366714, 0.0104953051, -0.0101267099,
0.9950547218, 0.0098625422, -0.0095191002, 0.9953536987, 0.0092678070, -0.0089474916,
0.9956345558, 0.0087087154, -0.0084099770, 0.9958984852, 0.0081832409, -0.0079045296,
0.9961465597, 0.0076893568, -0.0074292421, 0.9963796139, 0.0072251558, -0.0069822073,
0.9965986013, 0.0067889690, -0.0065619946, 0.9968043566, 0.0063788891, -0.0061669350,
0.9969975948, 0.0059936047, -0.0057954788, 0.9971792698, 0.0056314468, -0.0054461956,
0.9973499775, 0.0052912235, -0.0051180124, 0.9975103140, 0.0049713850, -0.0048093796,
0.9976609945, 0.0046708584, -0.0045193434, 0.9978024960, 0.0043885708, -0.0042467117,
0.9979355335, 0.0041232109, -0.0039904118, 0.9980604649, 0.0038738251, -0.0037496090,
0.9981778860, 0.0036395788, -0.0035232306, 0.9982881546, 0.0034193993, -0.0033104420,
0.9983918667, 0.0032125711, -0.0031105280, 0.9984891415, 0.0030182600, -0.0029225349,
0.9985806942, 0.0028356314, -0.0027459860, 0.9986666441, 0.0026640892, -0.0025800467,
0.9987473488, 0.0025029182, -0.0024241209, 0.9988231659, 0.0023514032, -0.0022776127,
0.9988944530, 0.0022090673, -0.0021399260, 0.9989614487, 0.0020754337, -0.0020104647,
0.9990242720, 0.0019497871, -0.0018888712, 0.9990833998, 0.0018317699, -0.0017746687,
0.9991388321, 0.0017209053, -0.0016673803, 0.9991910458, 0.0016167164, -0.0015665293,
0.9992400408, 0.0015188456, -0.0014717579, 0.9992860556, 0.0014268160, -0.0013827085,
0.9993293285, 0.0013390779, -0.0012594461, 0.9994081259, 0.0011818409, -0.0011116266,
0.9994776249, 0.0010430813, -0.0009812117, 0.9995390177, 0.0009205341, -0.0008659363,
0.9995931387, 0.0008124113, -0.0007642508, 0.9996409416, 0.0007170439, -0.0006744862,
0.9996831417, 0.0006327629, -0.0005953312, 0.9997203350, 0.0005583763, -0.0005253553,
0.9997532368, 0.0004928112, -0.0004637241, 0.9997822046, 0.0004348755, -0.0004092455,
0.9998078346, 0.0003838539, -0.0003612041, 0.9998303652, 0.0003387928, -0.0003187656,
0.9998502731, 0.0002989769, -0.0002813339, 0.9998679161, 0.0002638102, -0.0002483130,
0.9998834133, 0.0002328157, -0.0002191067, 0.9998971224, 0.0002055168, -0.0001933575,
0.9999091625, 0.0001813173, -0.0001705885, 0.9999198914, 0.0001599789, -0.0001505613,
0.9999293089, 0.0001412630, -0.0001329184, 0.9999376535, 0.0001245737, -0.0001173019,
0.9999449253, 0.0001100302, -0.0001034737, 0.9999513626, 0.0000970364, -0.0000913143,
0.9999570847, 0.0000857115, -0.0000805855, 0.9999620914, 0.0000755787, -0.0000711679,
0.9999666214, 0.0000667572, -0.0000628233, 0.9999705553, 0.0000588894, -0.0000554323,
0.9999740124, 0.0000519753, -0.0000488758, 0.9999769926, 0.0000458956, -0.0000431538,
0.9999797344, 0.0000404119, -0.0000380278, 0.9999821186, 0.0000357628, -0.0000336170,
0.9999842644, 0.0000314713, -0.0000296831, 0.9999860525, 0.0000277758, -0.0000262260,
0.9999877214, 0.0000245571, -0.0000231266, 0.9999891520, 0.0000216961, -0.0000203848,
0.9999904633, 0.0000190735, -0.0000180006, 0.9999915361, 0.0000168085, -0.0000158548,
0.9999924898, 0.0000149012, -0.0000140667, 0.9999934435, 0.0000131130, -0.0000123978,
0.9999941587, 0.0000115633, -0.0000109673, 0.9999948740, 0.0000102520, -0.0000096560,
0.9999954700, 0.0000090599, -0.0000084639, 0.9999960661, 0.0000079870, -0.0000075102,
0.9999964237, 0.0000070333, -0.0000066757, 0.9999969006, 0.0000061989, -0.0000058413,
0.9999972582, 0.0000054836, -0.0000051260, 0.9999976158, 0.0000048876, -0.0000045300,
0.9999978542, 0.0000042915, -0.0000040531, 0.9999980927, 0.0000038147, -0.0000035763,
0.9999983311, 0.0000033379, -0.0000030994, 0.9999985695, 0.0000029802, -0.0000027418,
0.9999986887, 0.0000026226, -0.0000023842, 0.9999988079, 0.0000022650, -0.0000021458,
0.9999990463, 0.0000020266, -0.0000019073, 0.9999991655, 0.0000017881, -0.0000016689,
0.9999991655, 0.0000015497, -0.0000014305, 0.9999992847, 0.0000014305, -0.0000013113,
0.9999994040, 0.0000011921, -0.0000011921, 0.9999994040, 0.0000010729, -0.0000010729,
0.9999995232, 0.0000009537, -0.0000009537, 0.9999995232, 0.0000008345, -0.0000008345,
0.9999996424, 0.0000007153, -0.0000007153, 0.9999996424, 0.0000005960, -0.0000005960,
0.9999997616, 0.0000005960, -0.0000005960, 0.9999997616, 0.0000004768, -0.0000004768 };

float erf_coeffs_fp32[3*256] = {
    0.5641895835610864,-1.2623806222871032e-8,-4.7014239033759064e-2,
    0.5641781053309155,-1.469232769316928e-3,-4.70039093176441e-2,
    0.5641436731101878,-2.938130135149082e-3,-4.698325304183919e-2,
    0.5640862944635684,-4.406381997034753e-3,-4.695228235959873e-2,
    0.5640059819952035,-5.873665986614715e-3,-4.6911009113203124e-2,
    0.5639027533432809,-7.339660137805624e-3,-4.685945129214338e-2,
    0.5637766311721641,-8.804042963056135e-3,-4.679763562781194e-2,
    0.5636276431630306,-1.0266493920892487e-2,-4.6725580788541006e-2,
    0.5634558220010678,-1.1726693072845584e-2,-4.664332208460471e-2,
    0.5632612053617387,-1.3184321537519621e-2,-4.655089528530976e-2,
    0.563043835894273,-1.4639061551371712e-2,-4.644834056612998e-2,
    0.5628037612031253,-1.6090596606181524e-2,-4.6335702462859785e-2,
    0.5625410338272958,-1.7538611585753337e-2,-4.621302984579788e-2,
    0.5622557112175223,-1.89827929011783e-2,-4.608037590206734e-2,
    0.5619478557113624,-2.0422828625684546e-2,-4.593779808760478e-2,
    0.5616175345061806,-2.185840862806463e-2,-4.5785358094176866e-2,
    0.561264819630059,-2.3289224705115543e-2,-4.562312180137909e-2,
    0.5608897879106494,-2.471497071252746e-2,-4.545115924439932e-2,
    0.5604925209419893,-2.6135342694656748e-2,-4.5269544561155665e-2,
    0.5600731050493025,-2.7550039012827206e-2,-4.507835594451779e-2,
    0.5596316312518066,-2.8958760472027972e-2,-4.4877675588699394e-2,
    0.5591681952235543,-3.0361210445962517e-2,-4.4667589646879016e-2,
    0.5586828972523309,-3.175709500065142e-2,-4.444818815627159e-2,
    0.5581758421966386,-3.3146123016083495e-2,-4.4219564991944106e-2,
    0.5576471394407925,-3.452800630594223e-2,-4.3981817805746136e-2,
    0.5570969028481586,-3.59024597356501e-2,-4.373504795892689e-2,
    0.5565252507125661,-3.726920133839507e-2,-4.34793604537545e-2,
    0.5559323057079221,-3.862795242879987e-2,-4.321486387487616e-2,
    0.5553181948360647,-3.997843771498801e-2,-4.2941670304701404e-2,
    0.5546830493728867,-4.1320385407878156e-2,-4.2659895268045284e-2,
    0.5540270048127636,-4.265352732863009e-2,-4.236965764689012e-2,
    0.5533502008113247,-4.397759901365763e-2,-4.207107960498864e-2,
    0.5526527811266014,-4.529233981719541e-2,-4.1764286510224846e-2,
    0.5519348935585923,-4.659749301150592e-2,-4.1449406854663175e-2,
    0.5511966898872807,-4.789280588440149e-2,-4.112657217614052e-2,
    0.5504383258091492,-4.917802983443824e-2,-4.0795916970906815e-2,
    0.5496599608722276,-5.045292046335877e-2,-4.045757861226497e-2,
    0.5488617584097157,-5.171723766604313e-2,-4.0111697250803914e-2,
    0.5480438854722257,-5.2970745717410034e-2,-3.975841574415239e-2,
    0.5472065127586836,-5.421321335680409e-2,-3.939787956089547e-2,
    0.5463498145459356,-5.54444138696764e-2,-3.903023668121803e-2,
    0.5454739686171021,-5.6664125166145794e-2,-3.8655637513738995e-2,
    0.5445791561887255,-5.7872129856833994e-2,-3.827423480235741e-2,
    0.5436655618367549,-5.906821532577491e-2,-3.788618352521017e-2,
    0.542733373421416,-6.0252173800359375e-2,-3.749164080386595e-2,
    0.5417827820110123,-6.1423802418229735e-2,-3.70907658058208e-2,
    0.5408139818047015,-6.258290329128803e-2,-3.668371964525748e-2,
    0.5398271700542996,-6.37292835664408e-2,-3.627066528988992e-2,
    0.538822546985156,-6.486275548364347e-2,-3.58517674500639e-2,
    0.5378003157161496,-6.598313643030998e-2,-3.5427192498579445e-2,
    0.5367606821788553,-6.70902489931697e-2,-3.499710835337387e-2,
    0.535703855035927,-6.818392100670372e-2,-3.456168438140946e-2,
    0.5346300455987485,-6.92639855983336e-2,-3.412109130627221e-2,
    0.5335394677444012,-7.033028123080337e-2,-3.3675501096106904e-2,
    0.5324323378319956,-7.138265174115203e-2,-3.322508686180922e-2,
    0.5313088746184198,-7.242094637640997e-2,-3.277002276907027e-2,
    0.530169299173551,-7.344501982646552e-2,-3.2310483922335834e-2,
    0.5290138347949831,-7.445473225349983e-2,-3.184664626753647e-2,
    0.5278427069223162,-7.544994931829326e-2,-3.137868649076295e-2,
    0.5266561430510611,-7.643054220332697e-2,-3.0906781923927942e-2,
    0.525454372646206,-7.739638763281516e-2,-3.0431110434019668e-2,
    0.5242376270554964,-7.83473678896224e-2,-2.9951850320419478e-2,
    0.5230061394224761,-7.928337082880221e-2,-2.9469180222649508e-2,
    0.5217601445993393,-8.020428988809218e-2,-2.898327902331284e-2,
    0.5204998756740237,0.4393937622692274,-0.11027182642456797,
    0.5273384771841337,0.4359476850185575,-0.11109646494977884,
    0.534123032580151,0.43247583778218057,-0.11188752264256963,
    0.5408531474045912,0.42897927000147346,-0.11264498044913483,
    0.5475284436020598,0.42545903171287025,-0.11336883579789953,
    0.5541485595245257,0.4219161730327378,-0.11405910249048103,
    0.5607131499285741,0.4183517436458448,-0.11471581053625009,
    0.5672218859647071,0.41476679229876107,-0.11533900601386153,
    0.5736744551587611,0.4111623662977039,-0.11592875088722794,
    0.5800705613855243,0.40753951101195174,-0.11648512285196094,
    0.5864099248346322,0.4038992693823774,-0.11700821513994077,
    0.592692281968832,0.4002426814359218,-0.11749813632601717,
    0.5989173854747072,0.3965707838059957,-0.11795501012020328,
    0.6050850042059598,0.3928846092595234,-0.11837897516349044,
    0.6111949231193523,0.38918518623040166,-0.11877018479981676,
    0.6172469432034161,0.3854735383598626,-0.1191288068401259,
    0.6232408814000348,0.3817506840444304,-0.1194550233385663,
    0.6291765705190195,0.37801763599088417,-0.11974903033130051,
    0.6350538591457952,0.3742754007791824,-0.12001103758654194,
    0.6408726115423163,0.3705249784333602,-0.12024126834339673,
    0.6466327075417059,0.36676736213378736,-0.12043997052461568,
    0.6523340424344837,0.36300353723798834,-0.1206073676144714,
    0.6579765268523944,0.3592344817774822,-0.12074373601220316,
    0.6635600866418344,0.3554611654285067,-0.12084935007332942,
    0.6690846627334446,0.3516845492294871,-0.12092449291759165,
    0.6745502110047136,0.34790558556558443,-0.12096947530292783,
    0.6799567021342677,0.3441252190755414,-0.12098472232585995,
    0.6853041214730321,0.34034437669574846,-0.12097016948522141,
    0.690592468848253,0.3365639880252035,-0.12092654236384537,
    0.6958217584482014,0.3327849635171018,-0.12085404337070782,
    0.7009920186350447,0.32900820539527037,-0.1207530349576316,
    0.7061032917796596,0.32523460468332077,-0.12062387507056865,
    0.7111556340872708,0.3214650413527672,-0.12046694633796524,
    0.7161491154195069,0.31770038313137344,-0.12028260821325688,
    0.7210838191087743,0.31394148646257714,-0.12007126056698886,
    0.7259598417714304,0.31018919541369655,-0.1198333015184766,
    0.7307772931151458,0.3064443416101104,-0.11956913732576141,
    0.7355362957425139,0.30270774398061673,-0.11927918207267474,
    0.7402369849507577,0.2989802085131357,-0.11896385730266186,
    0.7448795085277097,0.2952625280215237,-0.11862359168560072,
    0.7494640265442282,0.2915554819227981,-0.11825882064886895,
    0.7539907111432247,0.28785983602601534,-0.11786998606401192,
    0.7584597463254674,0.2841763423309788,-0.11745753585049636,
    0.7628713277323369,0.28050573883900176,-0.11702192367656997,
    0.7672256624256981,0.2768487493736304,-0.11656360857192645,
    0.7715229686650656,0.273206083412741,-0.11608305459561255,
    0.7757634756822261,0.26957843593148384,-0.11558073049098483,
    0.7799474234534919,0.26596648725604793,-0.11505710933623757,
    0.784075062469754,0.2623709029280013,-0.11451266819606642,
    0.788146653504501,0.25879233357989195,-0.11394788778755893,
    0.7921624673799754,0.2552314148210182,-0.11336325212924114,
    0.796122784731632,0.2516887671341848,-0.11275924820479374,
    0.8000278957710627,0.2481649957831865,-0.11213636564081975,
    0.8038781000475573,0.24466069073025254,-0.11149509634992041,
    0.8076737062084595,0.24117642656445984,-0.11083593422196884,
    0.8114150317584802,0.23771276244012796,-0.11015937477849234,
    0.815102402818133,0.23427024202560226,-0.10946591485988709,
    0.8187361538814453,0.23084939346223937,-0.10875605231038965,
    0.8223166275731059,0.22745072933307528,-0.10803028564973441,
    0.8258441744052026,0.2240747466415793,-0.10728911376215917,
    0.8293191525337045,0.22072192680036834,-0.10653303560340956,
    0.8327419275148381,0.21739273562900535,-0.10576254987799427,
    0.8361128720615097,0.21408762336176218,-0.10497815475142298,
    0.839432365799918,0.21080702466452061,-0.10418034755946862,
    0.8427008096886113,0.20754412844310344,-0.10295864572629042,
    0.8490860521030743,0.20110898793543644,-0.10128870126236193,
    0.8552718280926255,0.19477823808391267,-9.957398566963147e-2,
    0.861261443507961,0.18855467687370736,-9.781838970547022e-2,
    0.8670582878381753,0.1824408590791019,-9.602575837466915e-2,
    0.8726658266552589,0.17643909912490627,-9.419988316587798e-2,
    0.8780875941555881,0.17055147443320925,-9.234449470465408e-2,
    0.8833271858131679,0.16477982922944096,-9.046325581217998e-2,
    0.8883882511585844,0.15912577878221631,-8.855975499905706e-2,
    0.8932744866967964,0.15359071404993507,-8.663750038697893e-2,
    0.897989628976061,0.14817580670719352,-8.469991407486327e-2,
    0.9025374478194265,0.14288201452337293,-8.27503269443734e-2,
    0.9069217397293707,0.13771008706590915,-8.079197391572279e-2,
    0.9111463214752902,0.1326605717000688,-7.88279896449302e-2,
    0.9152150238726748,0.1277338198576459,-7.686140466478644e-2,
    0.9191316857619394,0.12292999354676662,-7.489514197113693e-2,
    0.9229001481940111,0.11824907207506571,-7.29320140363953e-2,
    0.9265242488289243,0.11369085895940939,-7.097472026437189e-2,
    0.9300078165528207,0.10925498899483119,-6.902584485730771e-2,
    0.933354666317929,0.1049409354565632,-6.708785509869553e-2,
    0.9365685942092757,0.10074801740942127,-6.516310004206587e-2,
    0.9396533727410882,9.667540709901869e-2,-6.325380958211387e-2,
    0.942612746385071,9.272213740097474e-2,-6.136209391865938e-2,
    0.9454504273319874,8.888710930366664e-2,-5.9489943370019e-2,
    0.9481700914872506,8.51690994024238e-2,-5.763922855117211e-2,
    0.9507753747005298,8.156676738262356e-2,-5.581170087810773e-2,
    0.9532698692287012,7.807866347114394e-2,-5.400899339999743e-2,
    0.9556571204308405,7.470323583571267e-2,-5.223262192797139e-2,
    0.9579406236933355,7.143883791364639e-2,-5.0483986460578945e-2,
    0.960123821582625,6.828373565141502e-2,-4.8764372870115334e-2,
    0.962210101222521,6.523611463867501e-2,-4.707495484807608e-2,
    0.9642027918925665,6.2294087120720786e-2,-4.541679608736889e-2,
    0.9661051628433953,5.9455698874423694e-2,-4.3790852672651516e-2,
    0.9679204213246276,5.671893593459288e-2,-4.2197975681731364e-2,
    0.9696517108204198,5.4081731157784196e-2,-4.0638913963925986e-2,
    0.9713021094874164,5.1541970612338096e-2,-3.911431708108174e-2,
    0.9728746287895164,4.909749978454663e-2,-3.7624738401646596e-2,
    0.9743722123235574,4.6746129591258664e-2,-3.6170638314889994e-2,
    0.9757977348297528,4.4485642191588466e-2,-3.475238757278242e-2,
    0.9771540013804794,4.2313796589773765e-2,-3.337027071285227e-2,
    0.9784437467408094,4.022833402379775e-2,-3.2024489570987774e-2,
    0.9796696348940064,3.822698313457721e-2,-3.0715166858505755e-2,
    0.9808342587250629,3.63074649114522e-2,-2.9442349784075367e-2,
    0.9819401398552475,3.4467497411203155e-2,-2.820601371695518e-2,
    0.982989728620543,3.2704800248076864e-2,-2.7006065865922652e-2,
    0.9839854041868051,3.101709885383812e-2,-2.5842348972189302e-2,
    0.9849294747944417,2.9402128506947678e-2,-2.471464499155189e-2,
    0.9858241781254086,2.7857638131537278e-2,-2.36226787638647e-2,
    0.9866716817853391,2.638139386696491e-2,-2.256612165173769e-2,
    0.9874740838936719,2.4971182409891993e-2,-2.1544595143321493e-2,
    0.9882334137746984,2.3624814131241765e-2,-2.0557674405177036e-2,
    0.9889516327425497,2.2340125970936008e-2,-1.960489177523129e-2,
    0.989630634973232,2.111498411433702e-2,-1.8685740193573445e-2,
    0.9902722484569533,1.994728645427992e-2,-1.77996765553541e-2,
    0.9908782360241154,1.8834964843438662e-2,-1.694612498494447e-2,
    0.9914502964384968,1.77759871420319e-2,-1.6124480017593104e-2,
    0.9919900655513211,1.6768359066639794e-2,-1.5334109697700962e-2,
    0.9924991175100776,1.5810125845492944e-2,-1.4574358568018132e-2,
    0.9929789660161523,1.4899373686769213e-2,-1.3844550560717176e-2,
    0.9934310656255222,1.4034231066154408e-2,-1.3143991781325914e-2,
    0.9938568130869689,1.321286984047614e-2,-1.2471973186107488e-2,
    0.9942575487124823,1.2433506194083935e-2,-1.1827773143506675e-2,
    0.9946345577747377,1.1694401424970587e-2,-1.1210659879091653e-2,
    0.9949890719267559,1.0993862578071157e-2,-1.0619893811449939e-2,
    0.9953223089860399,1.0320733624632726e-2,-9.783426537891209e-3,
    0.9959292224003354,9.098733080911997e-3,-8.750706863292192e-3,
    0.9964637873620672,8.005764005414214e-3,-7.809907642325551e-3,
    0.9969337097572146,7.030337052406192e-3,-6.955082683481925e-3,
    0.9973460006072957,6.161706591522936e-3,-6.180380627467987e-3,
    0.9977070221777307,5.389858787021401e-3,-5.480086795001038e-3,
    0.9980225331782329,4.705494449505806e-3,-4.84865837189869e-3,
    0.998297732754503,4.100007493467671e-3,-4.280753311588361e-3,
    0.9985373030210946,3.565459786322573e-3,-3.7712533751365243e-3,
    0.9987454499327847,3.0945531219702042e-3,-3.315281765384931e-3,
    0.9989259423358101,2.680598994808863e-3,-2.9082158295274975e-3,
    0.9990821490807215,2.317486790699285e-3,-2.5456953136266942e-3,
    0.9992170741152516,1.999650950777714e-3,-2.22362665605648e-3,
    0.9993333895084338,1.7220376032710636e-3,-1.9381837975819523e-3,
    0.9994334663862903,1.4800710984410293e-3,-1.6858059703848763e-3,
    0.9995194037848015,1.2696208241456252e-3,-1.4631929128506257e-3,
    0.9995930554477155,1.0869686234912907e-3,-1.2672979280751577e-3,
    0.9996560546152192,9.287770838989677e-4,-1.0953191789886448e-3,
    0.999709836864795,7.920589176413532e-4,-9.446895815419675e-4,
    0.9997556610779266,6.741476087838222e-4,-8.130656269628487e-4,
    0.9997946286159668,5.726694601169579e-4,-6.983154296672558e-4,
    0.9998277007956666,4.8551713648464903e-4,-5.985062666197953e-4,
    0.9998557147598598,4.10824767859537e-4,-5.118918414321537e-4,
    0.9998793978418455,3.469446461993154e-4,-4.3689947332835376e-4,
    0.9998993805233601,2.9242552519857074e-4,-3.721173858199032e-4,
    0.9999162080859166,2.4599251028585827e-4,-3.1628223799805446e-4,
    0.9999303510539467,2.0652850824775563e-4,-2.682670163534383e-4,
    0.9999422145258039,1.7305719113998156e-4,-2.2706938344238534e-4,
    0.9999521464854821,1.447274172602602e-4,-1.9180055553430912e-4,
    0.9999604451835341,1.207989948859939e-4,-1.6167373549759792e-4,
    0.999967365674544,1.0062997116187468e-4,-1.3599761423272895e-4,
    0.9999731255856279,8.366485548942816e-5,-1.141639603058166e-4,
    0.9999779101953337,6.942410726678919e-5,-9.563811253705264e-5,
    0.9999818768934772,5.749486577510087e-5,-7.99536294551482e-5,
    0.9999851590832445,4.7522507483692964e-5,-6.670394783815081e-5,
    0.9999878695876631,3.9203167155393535e-5,-5.553566596073273e-5,
    0.9999901036148303,3.2277098284158545e-5,-4.61424250940126e-5,
    0.9999919413320243,2.652279811050433e-5,-3.825936021953418e-5,
    0.9999934500942601,2.1751825932643823e-5,-3.1658088447377495e-5,
    0.9999946863685273,1.780424757208796e-5,-2.6142203530897276e-5,
    0.9999956973908667,1.4544642672515737e-5,-2.1543239334363004e-5,
    0.9999965225896363,1.185861621231576e-5,-1.771706999013136e-5,
    0.999997194804776,9.64975971912067e-6,-1.4540710723620554e-5,
    0.9999977413296146,7.837012014976472e-6,-1.1909483563004642e-5,
    0.9999981847987688,6.352373920502229e-6,-9.734519056614186e-6,
    0.9999985439429443,5.138934996412373e-6,-7.940558047653853e-6,
    0.9999988342289738,4.149174730599248e-6,-6.464027416531256e-6,
    0.9999990684011761,3.343504062039863e-6,-5.251358274191531e-6,
    0.999999256938111,2.6890167997542693e-6,-4.257523102691845e-6,
    0.9999994084369981,2.1584237294425586e-6,-3.4447675827350696e-6,
    0.9999995299364554,1.7291450634609477e-6,-2.7815121470979107e-6,
    0.9999996271867962,1.3825399461670257e-6,-2.2414072819209953e-6,
    0.9999997048758482,1.1032539083329157e-6,-1.8025188919382691e-6,
    0.9999997668171616,8.786679786091836e-7,-1.446634391245387e-6,
    0.9999998161064894,6.98434451056548e-7,-1.1586655658631718e-6,
    0.9999998552515774,5.540871131062195e-7,-9.261437854186943e-7,
    0.9999998862795612,4.3871448870944887e-7,-7.387885251385635e-7,
    0.9999999108256176,3.4668690063036136e-7,-5.881440822128187e-7,
    0.9999999302059757,2.734289049178821e-7,-4.6727198323566613e-7,
    0.9999999454779,2.1523007412033692e-7,-3.7049190878074623e-7,
    0.9999999574888576,1.690880928381483e-7,-2.93164326609561e-7,
    0.9999999669167232,1.3257897474985095e-7,-2.3150879244452133e-7,
    0.9999999743025828,1.037499263991015e-7,-1.8245169051227492e-7,
    0.9999999800774315,8.103123829763937e-8,-1.4350041448291919e-7};

float tanh_imp_coeffs_fp32[3*256] = {
    1.000000000504258,-4.772693601255651e-7,-0.3332743701074458,0.9999186292291273,-1.0416252277121122e-2,-0.33288398953232123,
    0.999674608750284,-2.0819824632221214e-2,-0.3321044358372531,0.9992682247400388,-3.119902903064285e-2,-0.33093799163806253,
    0.9986999523866873,-4.154177230774331e-2,-0.3293880981630584,0.9979704549878965,-5.1836068950653666e-2,-0.3274593155637821,
    0.9970805819959487,-6.207007603307682e-2,-0.3251572970838215,0.9960313665232028,-7.223212737902643e-2,-0.3224887580839584,
    0.9948240223212808,-8.23107667647397e-2,-0.3194614395916597,0.9934599402503823,-9.229477998243175e-2,-0.31608406663626165,
    0.9919406842577941,-0.10217322560119123,-0.3123663016983248,0.9902679868871438,-0.11193546427256951,-0.30831869363969844,
    0.9884437443422422,-0.12157118643946578,-0.3039526225786335,0.98647001113145,-0.13107043832109705,-0.2992802411628464,
    0.9843489943203819,-0.14042364606135854,-0.2943144126853636,0.9820830474224148,-0.1496216379425035,-0.28906864656719194,
    0.9796746639578694,-0.15865566458114896,-0.2835570317084443,0.977126470713908,-0.16751741704044076,-0.2777941681999552,
    0.9744412207381086,-0.17619904280665336,-0.27179509796623225,0.9716217860993397,-0.18469315959736918,-0.26557523470617017,
    0.9686711504499876,-0.19299286697945264,-0.25915029381716104,0.9655924014237589,-0.20109175579541586,-0.25253622264967895,
    0.9623887229032201,-0.2089839154092214,-0.24574913155044745,0.9590633871909497,-0.21666393879660212,-0.23880522621341385,
    0.9556197471176621,-0.22412692551996466,-0.231720741682051,0.9520612281199501,-0.23136848264029813,-0.22451187837473927,
    0.9483913203193864,-0.23838472362883087,-0.21719474058382116,0.944613570633631,-0.24517226535580075,-0.20978527754171358,
    0.9407315749489622,-0.2517282232379575,-0.20229922761400804,0.9367489703822359,-0.25805020464016526,-0.19475206562628514,
    0.9326694276587881,-0.264136300631391,-0.18715895359576393,0.9284966436311597,-0.2699850762009713,-0.17953469511064912,
    0.9242343339618103,-0.2755955590480021,-0.1718936933767608,0.9198862259912229,-0.28096722706016686,-0.1642499130604382,
    0.9154560518109464,-0.28609999459992785,-0.15661684598357584,0.9109475415592724,-0.29099419771895096,-0.14900748071935596,
    0.9063644169553406,-0.29565057842169207,-0.14143427603607867,0.9017103850855879,-0.30007026810011855,-0.13390913813638217,
    0.8969891324545693,-0.3042547702569219,-0.12644340174031843,0.8922043193103285,-0.30820594263756257,-0.11904781473256204,
    0.8873595742526836,-0.3119259788834701,-0.11173252644068606,0.8824584891310283,-0.31541738981872264,-0.10450707932460107,
    0.8775046142365387,-0.31868298447770144,-9.738040386870984e-2,0.872501453792056,-0.3217258509737603,-9.0360816705313e-2,
    0.8674524617413388,-0.32454933730894264,-8.345602155408771e-2,0.8623610378379204,-0.32715703221441017,-7.667311295099345e-2,
    0.8572305240324105,-0.32955274610711727,-7.001858255668042e-2,0.8520642011557977,-0.3317404922446032,-6.349832774027565e-2,
    0.8468652858951015,-0.3337244681486425,-5.711766238557883e-2,0.8416369280566307,-0.33550903736643806,-5.088132962817901e-2,
    0.8363822081111059,-0.3370987116307178,-4.479351630451731e-2,0.8311041350139944,-0.3384981334722562,-3.885786897669244e-2,
    0.8258056442936055,-0.3397120593328846,-3.307751134249751e-2,0.8204895963987875,-0.3407453432233156,-2.74550627388468e-2,
    0.8151587752974512,-0.34160292095999567,-2.1992657693982943e-2,0.809815887316612,-0.3422897950126616,-1.669196625106771e-2,
    0.8044635602142265,-0.3428110199881914,-1.1554214947345797e-2,0.799104342472717,-0.343171688769814,-6.580208268585728e-3,
    0.7937407028038339,-0.3433769193274676,-1.770350462049936e-3,0.788375029854278,-0.34343184220995526,2.8753325021802435e-3,
    0.7830096321013961,-0.34334158872387854,7.357170837464625e-3,0.777646737928188,-0.34311127980292594,1.167582895136057e-2,
    0.7722884958668622,-0.3427460155651153,1.5832283599007686e-2,0.7669369750002277,-0.34225086555238204,1.982780225734042e-2,
    0.7615941684058639,0.41996001790750126,-0.31740986860035325,0.7680785761222578,0.4100407866300942,-0.3124781438185304,
    0.7744092002191064,0.40027569612768077,-0.3074806248887755,0.7805884651593133,0.39066680145825766,-0.3024270895341259,
    0.786618825131029,0.3812158521230766,-0.2973269014230321,0.7925027593744158,0.3719243050099641,-0.2921890098577908,
    0.7982427677107212,0.3627933373459276,-0.2870219509988861,0.8038413662734278,0.35382385961095253,-0.2818338505347269,
    0.8093010834405248,0.34501652836848085,-0.2766324276352559,0.8146244559662834,0.33637175897180466,-0.2714250000668407,
    0.8198140253103157,0.3278897381101763,-0.2662184903630547,0.8248723341611551,0.3195704361621452,-0.2610194329662879,
    0.8298019231511106,0.3114136193252914,-0.25583398214459996,0.8346053277587105,0.30341886149830505,-0.2506679206869483,
    0.8392850753946787,0.29558555589111685,-0.24552666919682017,0.8438436826670459,0.2879129263443952,-0.2404152959460364,
    0.8482836528207224,0.28040003834101623,-0.23533852715927556,0.8526074733466102,0.27304580969571424,-0.23030075767993385,
    0.8568176137551363,0.2658490209113916,-0.2253060619231562,0.860916523508928,0.25880832519292113,-0.2203582050696319,
    0.8649066301092204,0.25192225811130825,-0.21546065439468565,0.8687903373305,0.24518924691314747,-0.21061659069409677,
    0.8725700235978184,0.23860761947307385,-0.20582891978710244,0.8762480405011801,0.2321756128869153,-0.2011002839812646,
    0.8798267114413992,0.22589138170620232,-0.19643307350102965,0.8833083304018318,0.21975300581553717,-0.1918294378133401,
    0.8866951608404258,0.2137584979557724,-0.18729129683553938,0.8899894346965866,0.2079058108970811,-0.18282035198776383,
    0.8931933515074244,0.20219284426655745,-0.1784180970370386,0.896309077628035,0.19661745103677947,-0.17408582874380396,
    0.8993387455505685,0.1911774436816021,-0.16982465726684848,0.9022844533169415,0.1858706000069388,-0.16563551631264,
    0.9051482640201797,0.18069466866413347,-0.1615191730208255,0.9079322053894947,0.1756473743545043,-0.15747623755655898,
    0.9106382694543411,0.1707264227340675,-0.15350717241790893,0.9132684122828397,0.1659295050273047,-0.14961230144439164,
    0.9158245537900925,0.16125430235967686,-0.14579181851154147,0.9183085776120724,0.1566984898180859,-0.14204579590569147,
    0.9207223310409147,0.15225974024976702,-0.13837419241755744,0.9230676250175918,0.14793572780837203,-0.13477686106823084,
    0.9253462341781099,0.1437241312583372,-0.13125355659123064,0.9275598969495137,0.13962263704584155,-0.12780394252128038,
    0.9297103156921429,0.13562894214775706,-0.12442759804537856,0.9317991568847347,0.13174075670694987,-0.12112402451214574,
    0.9338280513491142,0.12795580646401283,-0.11789265163561317,0.935798594511367,0.12427183499493892,-0.114732843431465,
    0.9377123466965294,0.12068660576377205,-0.11164390384728687,0.9395708334539761,0.11719790399883598,-0.10862508209999192,
    0.9413755459108238,0.11380353840248444,-0.10567557777116943,0.9431279411508062,0.11050134270164638,-0.10279454560650726,
    0.9448294426162063,0.10728917704821847,-9.998110006154305e-2,0.9464814405305607,0.10416492927746585,-9.723431961280601e-2,
    0.9480852923399762,0.10112651603202942,-9.455325081709429e-2,0.9496423231710178,9.817188375866331e-2,-9.193691210926705e-2,
    0.9511538263032459,9.529900958643076e-2,-8.938429744295535e-2,0.9526210636545864,9.250590209149855e-2,-8.689437963323768e-2,
    0.9540452662778373,8.979060195695612e-2,-8.446611355356057e-2,0.9554276348667036,8.715118253319067e-2,-8.209843910463845e-2,
    0.9567693402698655,8.45857503051942e-2,-7.979028398026478e-2,0.9580715240116736,8.209244527365153e-2,-7.754056630532376e-2,
    0.9593352988181557,7.966944125367446e-2,-7.534819701090875e-2,0.9605617491471112,7.731494609895927e-2,-7.3212082134334e-2,
    0.9617519317211491,7.502720185452999e-2,-7.113112489047153e-2,0.9629068760626058,7.280448484450382e-2,-6.910422763428709e-2,
    0.9640276191806455,7.062820002814453e-2,-6.616685548206919e-2,0.9661702105272139,6.64937527490099e-2,-6.2423843754656705e-2,
    0.9681872516805432,6.259320162094237e-2,-5.8877462190264705e-2,0.9700858600476531,5.891425792752068e-2,-5.551915861209863e-2,
    0.971872777361803,5.544516761783595e-2,-5.2340534030910414e-2,0.9735543862406069,5.2174701704160636e-2,-4.933337134147231e-2,
    0.9751367264161619,4.909214486930515e-2,-4.64896586241148e-2,0.9766255105864989,4.618728262076846e-2,-4.380160765134155e-2,
    0.9780261398476119,4.34503872907089e-2,-4.126166820376075e-2,0.9793437186740823,4.087220314375605e-2,-3.886253871668718e-2,
    0.9805830694239893,3.844393082163087e-2,-3.659717372291674e-2,0.9817487463505028,3.615721132447493e-2,-3.445878853688441e-2,
    0.9828450491083672,3.400410970119355e-2,-3.244086155675384e-2,0.9838760357485018,3.197709859768736e-2,-3.0537134537069764e-2,
    0.9848455351982521,3.0069041789327396e-2,-2.874161112324357e-2,0.9857571592284913,2.8273177806234544e-2,-2.7048553950626143e-2,
    0.9866143139118707,2.658310374110874e-2,-2.5452480517843015e-2,0.9874202105791136,2.4992759315864567e-2,-2.3948158075337237e-2,
    0.9881778762824003,2.349641126868514e-2,-2.2530597700533665e-2,0.9888901637766481,2.2088638111965327e-2,-2.1195047725137774e-2,
    0.9895597610309046,2.0764315301788964e-2,-1.993698667602735e-2,0.9901892002831898,1.9518600849314543e-2,-1.875211582795008e-2,
    0.9907808666529718,1.83469213978438e-2,-1.7636351490672813e-2,0.9913370063260858,1.724495878250451e-2,-1.6585817134166004e-2,
    0.9918597343273365,1.620863708251566e-2,-1.5596835398048405e-2,0.9923510418962872,1.5234110173001763e-2,-1.4665920097598935e-2,
    0.9928128034818486,1.431774977688644e-2,-1.378976823714914e-2,0.993246783371288,1.34561340159487e-2,-1.2965252120358754e-2,
    0.9936546419691609,1.2646036455416348e-2,-1.2189411567355724e-2,0.9940379417414835,1.1884415634900784e-2,-1.1459446281681222e-2,
    0.9943981528401978,1.1168405076564934e-2,-1.077270840270561e-2,0.994736658422661,1.0495303758980376e-2,-1.0126695248804074e-2,
    0.9950547596805247,9.862567044510455e-3,-9.519042275797985e-3,0.9953536805919675,9.26779804679769e-3,-8.947516262606026e-3,
    0.9956345724108107,8.708739424274347e-3,-8.410008734606556e-3,0.9958985179055996,8.183265584688109e-3,-7.904529623544597e-3,
    0.9961465353612625,7.689375285893045e-3,-7.429201172018252e-3,0.9963795823554914,7.22518461756595e-3,-6.982252090947047e-3,
    0.9965985593215029,6.788920348262163e-3,-6.562011949259783e-3,0.9968043129083678,6.378913622858376e-3,-6.16690581365751e-3,
    0.9969976391496163,5.993593995072496e-3,-5.795449127527943e-3,0.997179286450355,5.631483780172384e-3,-5.446242818932221e-3,
    0.9973499584026793,5.291192713200937e-3,-5.117968639154568e-3,0.997510316438702,4.971412898546247e-3,-4.809384725784276e-3,
    0.997660982330086,4.670914036931575e-3,-4.519321381374786e-3,0.997802540542538,4.388538916090147e-3,-4.246677056141333e-3,
    0.9979355404533037,4.123199152472899e-3,-3.99041453781483e-3,0.9980604984393104,3.8738711710706313e-3,-3.7495573333185283e-3,
    0.9981778998432069,3.639592411391973e-3,-3.5231862390657344e-3,0.9982882008241867,3.419457747751326e-3,-3.3104360854347673e-3,
    0.9983918301001211,3.212616112896825e-3,-3.1104926595944653e-3,0.9984891905871818,3.01826731403851e-3,-2.9225897855390524e-3,
    0.9985806609428127,2.8356590312474043e-3,-2.7460065693358255e-3,0.9986665970175903,2.664083988117896e-3,-2.5800647836679703e-3,
    0.9987473332212159,2.502877285704118e-3,-2.4241264054272954e-3,0.9988231838075982,2.3514138904827016e-3,-2.2775912807103745e-3,
    0.99889444408371,2.2091062681216466e-3,-2.1398949231142784e-3,0.9989613915466488,2.0754021547476835e-3,-2.010506432223748e-3,
    0.9990242869530799,1.9497824584700878e-3,-1.8889265372342777e-3,0.9990833753250106,1.8317592831043686e-3,-1.7746857343393873e-3,
    0.9991388868956216,1.720874068084204e-3,-1.6673425449733235e-3,0.9991910379986706,1.616695837453643e-3,-1.566481868197433e-3,
    0.9992400319047838,1.518819551751823e-3,-1.4717134222671576e-3,0.9992860596077635,1.4268645571536788e-3,-1.3826702810179963e-3,
    0.9993293061363568,1.339088981993643e-3,-1.259474444119545e-3,0.999408091420237,1.1818346536741947e-3,-1.111647115842186e-3,
    0.9994776243468054,1.0430376822895006e-3,-9.811535184981136e-4,0.9995389909562742,9.205338063691297e-4,-8.659649390485939e-4,
    0.9995931499278974,8.124120694417987e-4,-7.642892643656917e-4,0.9996409474895478,7.169852774827486e-4,-6.745435742733444e-4,
    0.9996831305876877,6.327638786348433e-4,-5.953298661707766e-4,0.9997203585194203,5.58432874095505e-4,-5.254135651579797e-4,
    0.9997532132052166,4.928314123816863e-4,-4.6370450758009797e-4,0.9997822082603859,4.349347580947472e-4,-4.092401164088563e-4,
    0.9998077970051588,3.8383836144988354e-4,-3.6117052270318023e-4,0.9998303795370941,3.387437856200763e-4,-3.187454100102367e-4,
    0.9998503089752085,2.98946276639072e-4,-2.8130238403427794e-4,0.9998678969725475,2.638237855364028e-4,-2.482566970259474e-4,
    0.9998834185826806,2.32827273548063e-4,-2.1909216371839574e-4,0.9998971165556703,2.054721514752135e-4,-1.9335313844358454e-4,
    0.9999092051302655,1.813307208373616e-4,-1.7063742633911116e-4,0.9999198733812888,1.6002550009963144e-4,-1.5059002259257013e-4,
    0.9999292881743099,1.4122333263364616e-4,-1.3289758233193757e-4,0.9999375967736164,1.246301851202437e-4,-1.1728353787503399e-4,
    0.9999449291441103,1.0998655568821124e-4,-1.0350378670860943e-4,0.9999513999830177,9.706342037824764e-5,-9.134288319160372e-5,
    0.9999571105130906,8.565865509878323e-5,-8.061067742282916e-5,0.9999621500652788,7.559387727818948e-5,-7.113934738930864e-5,
    0.9999665974755708,6.671165810947542e-5,-6.278077921661286e-5,0.9999705223178073,5.887306180840296e-5,-5.540425204279802e-5,
    0.9999739859917194,5.195547394755962e-5,-4.889439935224213e-5,0.9999770426831832,4.585068444418812e-5,-4.314940421426927e-5,
    0.9999797402116931,4.046319572902306e-5,-3.807940876671141e-5,0.9999821207782917,3.570872957645299e-5,-3.360511080268105e-5,
    0.9999842216256485,3.151290919500976e-5,-2.965652339726544e-5,0.9999860756205998,2.7810096116195965e-5,-2.617188135838057e-5,
    0.9999877117682567,2.4542363679684898e-5,-2.3096675289795013e-5,0.9999891556657196,2.1658591088902666e-5,-2.0382799893819555e-5,
    0.99999042990249,1.911366380096802e-5,-1.798780073752347e-5,0.9999915544138416,1.6867767999588752e-5,-1.5874212070698846e-5,
    0.9999925467926768,1.4885767726478038e-5,-1.4008969148092867e-5,0.9999934225647428,1.3136655367165013e-5,-1.2362892105320161e-5,
    0.9999941954315157,1.1593066602108068e-5,-1.0910229976079816e-5,0.9999948774845449,1.0230852319139879e-5,-9.628256509345142e-6,
    0.9999954793946171,9.028700897940007e-6,-8.496916222290535e-6,0.9999960105786923,7.967804787432722e-6,-7.498509673646954e-6,
    0.9999964793472276,7.031566333012272e-6,-6.617417456517978e-6,0.9999968930341906,6.205338072787278e-6,-5.839855062015546e-6,
    0.9999972581117963,5.47619361751273e-6,-5.153657482865039e-6,0.9999975802917632,4.832725447988778e-6,-4.548089367434142e-6,
    0.9999978646146723,4.264866450941519e-6,-4.013676990237995e-6,0.9999981155288261,3.763732374598644e-6,-3.5420592292541084e-6,
    0.999998336959842,3.321482891134314e-6,-3.1258575314386735e-6,0.9999985323720683,2.931198942861503e-6,-2.758560782757175e-6,
    0.9999987048227843,2.5867744233087626e-6,-2.4344219296765733e-6,0.9999988570100319,2.2828207669785193e-6,-2.14837052147086e-6,
    0.9999989913148257,2.0145825227562218e-6,-1.895930736181713e-6,0.9999991098384055,1.777863052450431e-6,-1.673153527367253e-6,
    0.9999992144351088,1.5689587917693268e-6,-1.4765529113243865e-6,0.9999993067413848,1.3846014117657902e-6,-1.303053803748557e-6,
    0.9999993882013944,1.2219065568968099e-6,-1.1499411334942588e-6,0.9999994600896062,1.078328819401828e-6,-1.014819437969358e-6,
    0.9999995235307347,9.51621904310801e-7,-8.955751519535445e-7,0.9999995795173374,8.398034281777209e-7,-7.903423751222791e-7,
    0.9999996289253434,7.411239685877437e-7,-6.974748590604199e-7,0.9999996725277578,6.54039626303923e-7,-6.155193101058801e-7,
    0.9999997110067551,5.771879673570432e-7,-5.431939513292875e-7,0.9999997449643522,5.09366613829617e-7,-4.793670641129786e-7}
    ;

// ==========  GL sin and cos poly2 approximations  (m = 6) ===================
// sinx_default_coeffs2_01 (sin(x)/x on [0, 1]) followed by
// cos_default_coeffs2_01

float sincos_coeffs_fp32[3 * 128] =    // C0, C1, C2
{ 1.0000000000, 0.0000000000, -0.1666648388, 0.9999593496, -0.0052082539, -0.1666419506,
0.9998372793, -0.0104157925, -0.1665916443, 0.9996337891, -0.0156217813, -0.1665184498,
0.9993491173, -0.0208255053, -0.1664193869, 0.9989830256, -0.0260261297, -0.1662989855,
0.9985357523, -0.0312230587, -0.1661468744, 0.9980074167, -0.0364152193, -0.1659829617,
0.9973978996, -0.0416022539, -0.1657814980, 0.9967073202, -0.0467830896, -0.1655626297,
0.9959359169, -0.0519570112, -0.1653236151, 0.9950838089, -0.0571234226, -0.1650542021,
0.9941508770, -0.0622814894, -0.1647593975, 0.9931375980, -0.0674303770, -0.1644445658,
0.9920438528, -0.0725693703, -0.1641073227, 0.9908698797, -0.0776977539, -0.1637454033,
0.9896157980, -0.0828148127, -0.1633566618, 0.9882819653, -0.0879197121, -0.1629469395,
0.9868685007, -0.0930118561, -0.1625065804, 0.9853755236, -0.0980902910, -0.1620492935,
0.9838032722, -0.1031544209, -0.1615658998, 0.9821519852, -0.1082034111, -0.1610625982,
0.9804220200, -0.1132366657, -0.1605306864, 0.9786134958, -0.1182533503, -0.1599767208,
0.9767267704, -0.1232527494, -0.1593998671, 0.9747619629, -0.1282341480, -0.1587996483,
0.9727195501, -0.1331967115, -0.1581830978, 0.9705997705, -0.1381399632, -0.1575347185,
0.9684028625, -0.1430629492, -0.1568700075, 0.9661291838, -0.1479651928, -0.1561738253,
0.9637790918, -0.1528457403, -0.1554619074, 0.9613529444, -0.1577039957, -0.1547274590,
0.9588510990, -0.1625392437, -0.1539713144, 0.9562737942, -0.1673508883, -0.1531870365,
0.9536215067, -0.1721380949, -0.1523840427, 0.9508947134, -0.1769001484, -0.1515637636,
0.9480936527, -0.1816365719, -0.1507132053, 0.9452188015, -0.1863464117, -0.1498500109,
0.9422705173, -0.1910291910, -0.1489615440, 0.9392493963, -0.1956841946, -0.1480506659,
0.9361556768, -0.2003108263, -0.1471130848, 0.9329898357, -0.2049082518, -0.1461601257,
0.9297524691, -0.2094758749, -0.1451878548, 0.9264440536, -0.2140130997, -0.1441930532,
0.9230648279, -0.2185192108, -0.1431802511, 0.9196155071, -0.2229936123, -0.1421468258,
0.9160965681, -0.2274357080, -0.1410903931, 0.9125084877, -0.2318447828, -0.1400165558,
0.9088516235, -0.2362203598, -0.1389162540, 0.9051268101, -0.2405616045, -0.1378034353,
0.9013344049, -0.2448680401, -0.1366695166, 0.8974750042, -0.2491390705, -0.1355142593,
0.8935490847, -0.2533739805, -0.1343450546, 0.8895573616, -0.2575722933, -0.1331547499,
0.8855003119, -0.2617334127, -0.1319440603, 0.8813785315, -0.2658567429, -0.1307140589,
0.8771926165, -0.2699416876, -0.1294665337, 0.8729431629, -0.2739876509, -0.1282032728,
0.8686307669, -0.2779940367, -0.1269270182, 0.8642561436, -0.2819604874, -0.1256251335,
0.8598198891, -0.2858862877, -0.1243087053, 0.8553224802, -0.2897709608, -0.1229740381,
0.8507648706, -0.2936139107, -0.1216250658, 0.8461474180, -0.2974146605, -0.1202591658,
1.0000000000, -0.0000001192, -0.4999834299, 0.9998779297, -0.0156248808, -0.4998588562,
0.9995117188, -0.0312458277, -0.4996122122, 0.9989016056, -0.0468590260, -0.4992513657,
0.9980474710, -0.0624608994, -0.4987611771, 0.9969497919, -0.0780475140, -0.4981498718,
0.9956086874, -0.0936150551, -0.4974181652, 0.9940245152, -0.1091597080, -0.4965672493,
0.9921976328, -0.1246777773, -0.4955908060, 0.9901286364, -0.1401653290, -0.4944984913,
0.9878177643, -0.1556186676, -0.4932849407, 0.9852658510, -0.1710340977, -0.4919457436,
0.9824733734, -0.1864076853, -0.4904919863, 0.9794409275, -0.2017358541, -0.4889127016,
0.9761694670, -0.2170146704, -0.4872205257, 0.9726597071, -0.2322405577, -0.4854061604,
0.9689124823, -0.2474098206, -0.4834684134, 0.9649286270, -0.2625185251, -0.4814227819,
0.9607092142, -0.2775632143, -0.4792548418, 0.9562553167, -0.2925401926, -0.4769665003,
0.9515680075, -0.3074456453, -0.4745686054, 0.9466482401, -0.3222761154, -0.4720498323,
0.9414974451, -0.3370279074, -0.4694159031, 0.9361168146, -0.3516974449, -0.4666656256,
0.9305076599, -0.3662810326, -0.4638071060, 0.9246712923, -0.3807752132, -0.4608343840,
0.9186091423, -0.3951765299, -0.4577429295, 0.9123227596, -0.4094812870, -0.4545449018,
0.9058136940, -0.4236861467, -0.4512314796, 0.8990834951, -0.4377874136, -0.4478178024,
0.8921337128, -0.4517819881, -0.4442828894, 0.8849661350, -0.4656661749, -0.4406453371,
0.8775825500, -0.4794366360, -0.4369027615, 0.8699847460, -0.4930901527, -0.4330469370,
0.8621745110, -0.5066231489, -0.4290943146, 0.8541537523, -0.5200325251, -0.4250327349,
0.8459244967, -0.5333150625, -0.4208598137, 0.8374887705, -0.5464671850, -0.4165978432,
0.8288484812, -0.5594860315, -0.4122253656, 0.8200058937, -0.5723682642, -0.4077538252,
0.8109631538, -0.5851107836, -0.4031811953, 0.8017224073, -0.5977104902, -0.3985080719,
0.7922859192, -0.6101641655, -0.3937445879, 0.7826559544, -0.6224689484, -0.3888804913,
0.7728350163, -0.6346217394, -0.3839230537, 0.7628252506, -0.6466195583, -0.3788743019,
0.7526293993, -0.6584595442, -0.3737312555, 0.7422497272, -0.6701388359, -0.3684930801,
0.7316888571, -0.6816544533, -0.3631694317, 0.7209494114, -0.6930036545, -0.3577570915,
0.7100338936, -0.7041836977, -0.3522555828, 0.6989450455, -0.7151918411, -0.3466669321,
0.6876856089, -0.7260253429, -0.3409961462, 0.6762582064, -0.7366816998, -0.3352354765,
0.6646656990, -0.7471580505, -0.3294029236, 0.6529110670, -0.7574521303, -0.3234812021,
0.6409969330, -0.7675611973, -0.3174864054, 0.6289262772, -0.7774828672, -0.3114144802,
0.6167020798, -0.7872147560, -0.3052647114, 0.6043273211, -0.7967544794, -0.2990390062,
0.5918051004, -0.8060996532, -0.2927424908, 0.5791383982, -0.8152480125, -0.2863755226,
0.5663301945, -0.8241974115, -0.2799340487, 0.5533838272, -0.8329455853, -0.2734248638 };




////// BF16 //////

 // ==========  bf16 log2 linear approximation on [1, 2] ===================

uint16_t log2_bf16_linear_coeffs_m3[2*2*(1 << m3_val)] =  // C2, C1, C0
{
//zero
16313, 48938,
16302, 48914,
16293, 48896,
16285, 48868,
16278, 48840,
16271, 48820,
16266, 48804,
16261, 48788,
//non zero
    0, 16302,
15920, 16284,
16036, 16269,
16108, 16257,
16150, 16236,
16180, 16218,
16206, 16204,
16232, 16190
};

uint16_t log2_bf16_linear_coeffs_m4[2*2*(1 << m4_val)] =  // C2, C1, C0
{
//zero
16313, 48946,
16307, 48932,
16302, 48920,
16297, 48910,
16293, 48900,
16289, 48888,
16285, 48872,
16281, 48860,
16278, 48848,
16275, 48836,
16271, 48824,
16269, 48816,
16266, 48808,
16263, 48800,
16261, 48792,
16258, 48784,
//non zero
    0, 16307,
15792, 16297,
15920, 16288,
16000, 16280,
16036, 16272,
16072, 16265,
16108, 16259,
16134, 16252,
16150, 16242,
16164, 16232,
16180, 16224,
16194, 16214,
16206, 16208,
16220, 16200,
16232, 16194,
16244, 16188
};

uint16_t log2_bf16_linear_coeffs_interleaved_m5[2*4*(1 << m5_val)] =  // C2, C1, C0
{
    //non zero    //zero        //0.75-1
    0,     16310, 16313, 48948, 00000, 00000, 00000, 00000,
    15680, 16304, 16310, 48942, 00000, 00000, 00000, 00000,
    15792, 16299, 16307, 48936, 00000, 00000, 00000, 00000,
    15880, 16294, 16305, 48928, 00000, 00000, 00000, 00000,
    15920, 16290, 16302, 48922, 00000, 00000, 00000, 00000,
    15960, 16286, 16300, 48918, 00000, 00000, 00000, 00000,
    16000, 16281, 16297, 48912, 00000, 00000, 00000, 00000,
    16020, 16278, 16295, 48908, 00000, 00000, 00000, 00000,
    16036, 16274, 16293, 48902, 00000, 00000, 00000, 00000,
    16056, 16270, 16291, 48898, 00000, 00000, 00000, 00000,
    16072, 16267, 16289, 48892, 00000, 00000, 00000, 00000,
    16092, 16264, 16287, 48884, 00000, 00000, 00000, 00000,
    16108, 16261, 16285, 48876, 00000, 00000, 00000, 00000,
    16124, 16258, 16283, 48868, 00000, 00000, 00000, 00000,
    16134, 16254, 16281, 48864, 00000, 00000, 00000, 00000,
    16142, 16248, 16279, 48856, 00000, 00000, 00000, 00000,
    16150, 16244, 16278, 48852, 16340, 49029, 00000, 00000,
    16158, 16238, 16276, 48844, 16338, 49026, 00000, 00000,
    16164, 16234, 16275, 48840, 16336, 49020, 00000, 00000,
    16172, 16230, 16273, 48832, 16334, 49014, 00000, 00000,
    16180, 16226, 16271, 48828, 16332, 49008, 00000, 00000,
    16186, 16220, 16270, 48824, 16331, 49002, 00000, 00000,
    16194, 16216, 16269, 48820, 16329, 48996, 00000, 00000,
    16200, 16212, 16267, 48816, 16327, 48992, 00000, 00000,
    16206, 16210, 16266, 48808, 16325, 48986, 00000, 00000,
    16214, 16206, 16264, 48804, 16324, 48980, 00000, 00000,
    16220, 16202, 16263, 48800, 16322, 48976, 00000, 00000,
    16226, 16198, 16262, 48800, 16320, 48972, 00000, 00000,
    16232, 16196, 16261, 48796, 16319, 48968, 00000, 00000,
    16238, 16192, 16259, 48792, 16317, 48962, 00000, 00000,
    16244, 16190, 16258, 48788, 16316, 48958, 00000, 00000,
    16250, 16186, 16257, 48784, 16314, 48954, 00000, 00000
};

uint16_t log2_bf16_linear_coeffs_m5[2*2*(1 << m5_val)] =  // C2, C1, C0
{
//zero
16313, 48948,
16310, 48942,
16307, 48936,
16305, 48928,
16302, 48922,
16300, 48918,
16297, 48912,
16295, 48908,
16293, 48902,
16291, 48898,
16289, 48892,
16287, 48884,
16285, 48876,
16283, 48868,
16281, 48864,
16279, 48856,
16278, 48852,
16276, 48844,
16275, 48840,
16273, 48832,
16271, 48828,
16270, 48824,
16269, 48820,
16267, 48816,
16266, 48808,
16264, 48804,
16263, 48800,
16262, 48800,
16261, 48796,
16259, 48792,
16258, 48788,
16257, 48784,
//non zero
    0, 16310,
15680, 16304,
15792, 16299,
15880, 16294,
15920, 16290,
15960, 16286,
16000, 16281,
16020, 16278,
16036, 16274,
16056, 16270,
16072, 16267,
16092, 16264,
16108, 16261,
16124, 16258,
16134, 16254,
16142, 16248,
16150, 16244,
16158, 16238,
16164, 16234,
16172, 16230,
16180, 16226,
16186, 16220,
16194, 16216,
16200, 16212,
16206, 16210,
16214, 16206,
16220, 16202,
16226, 16198,
16232, 16196,
16238, 16192,
16244, 16190,
16250, 16186
};
uint16_t log2_bf16_linear_gaudi2_coeffs_m5[3*2*(1 << m5_val)] =  // C2, C1, C0
{
    //non zero
    0, 16310,
    15680, 16304,
    15792, 16299,
    15880, 16294,
    15920, 16290,
    15960, 16286,
    16000, 16281,
    16020, 16278,
    16036, 16274,
    16056, 16270,
    16072, 16267,
    16092, 16264,
    16108, 16261,
    16124, 16258,
    16134, 16254,
    16142, 16248,
    16150, 16244,
    16158, 16238,
    16164, 16234,
    16172, 16230,
    16180, 16226,
    16186, 16220,
    16194, 16216,
    16200, 16212,
    16206, 16210,
    16214, 16206,
    16220, 16202,
    16226, 16198,
    16232, 16196,
    16238, 16192,
    16244, 16190,
    16250, 16186,
//zero
16313, 48948,
16310, 48942,
16307, 48936,
16305, 48928,
16302, 48922,
16300, 48918,
16297, 48912,
16295, 48908,
16293, 48902,
16291, 48898,
16289, 48892,
16287, 48884,
16285, 48876,
16283, 48868,
16281, 48864,
16279, 48856,
16278, 48852,
16276, 48844,
16275, 48840,
16273, 48832,
16271, 48828,
16270, 48824,
16269, 48820,
16267, 48816,
16266, 48808,
16264, 48804,
16263, 48800,
16262, 48800,
16261, 48796,
16259, 48792,
16258, 48788,
16257, 48784,
//0.75-1
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
16340, 49029,
16338, 49026,
16336, 49020,
16334, 49014,
16332, 49008,
16331, 49002,
16329, 48996,
16327, 48992,
16325, 48986,
16324, 48980,
16322, 48976,
16320, 48972,
16319, 48968,
16317, 48962,
16316, 48958,
16314, 48954
};

uint16_t log2_bf16_linear_coeffs_m6[2*2*(1 << m6_val)] =  // C2, C1, C0
{
//zero
16313, 48950,
16311, 48948,
16310, 48944,
16308, 48940,
16307, 48936,
16306, 48934,
16305, 48930,
16303, 48928,
16302, 48924,
16301, 48922,
16300, 48918,
16298, 48916,
16297, 48914,
16296, 48910,
16295, 48908,
16294, 48906,
16293, 48904,
16292, 48902,
16291, 48900,
16290, 48898,
16289, 48892,
16288, 48888,
16287, 48884,
16286, 48884,
16285, 48880,
16284, 48876,
16283, 48872,
16282, 48868,
16281, 48864,
16280, 48860,
16279, 48856,
16279, 48856,
16278, 48852,
16277, 48848,
16276, 48844,
16275, 48844,
16275, 48840,
16274, 48836,
16273, 48836,
16272, 48832,
16271, 48828,
16271, 48828,
16270, 48824,
16269, 48824,
16269, 48820,
16268, 48816,
16267, 48816,
16266, 48812,
16266, 48812,
16265, 48808,
16264, 48808,
16264, 48804,
16263, 48804,
16263, 48800,
16262, 48800,
16261, 48796,
16261, 48796,
16260, 48792,
16259, 48792,
16259, 48792,
16258, 48788,
16258, 48788,
16257, 48784,
16257, 48784,
//non zero
    0, 16311,
15552, 16308,
15680, 16306,
15744, 16303,
15792, 16301,
15840, 16298,
15880, 16296,
15896, 16293,
15920, 16291,
15936, 16289,
15960, 16287,
15976, 16285,
16000, 16282,
16008, 16280,
16020, 16279,
16028, 16277,
16036, 16275,
16048, 16273,
16056, 16271,
16064, 16270,
16072, 16268,
16080, 16266,
16092, 16265,
16100, 16263,
16108, 16262,
16116, 16260,
16124, 16259,
16130, 16257,
16134, 16256,
16138, 16252,
16142, 16250,
16146, 16248,
16150, 16244,
16154, 16242,
16158, 16240,
16162, 16238,
16164, 16236,
16168, 16232,
16172, 16230,
16176, 16228,
16180, 16226,
16182, 16224,
16186, 16222,
16190, 16220,
16194, 16218,
16196, 16216,
16200, 16214,
16204, 16212,
16206, 16210,
16210, 16208,
16214, 16206,
16216, 16204,
16220, 16202,
16222, 16202,
16226, 16200,
16230, 16198,
16232, 16196,
16236, 16194,
16238, 16192,
16242, 16192,
16244, 16190,
16248, 16188,
16250, 16186,
16254, 16186
};

 // ==========  bf16 log2 poly2 approximation on [1, 2] ===================

uint16_t log2_bf16_poly2_coeffs_m3[2*3*(1 << m3_val)] =  // C2, C1, C0
{
//zero
16313, 48952, 16088,
16302, 48926, 16040,
16293, 48904, 16004,
16285, 48880, 15960,
16278, 48852, 15920,
16271, 48832, 15896,
16266, 48812, 15872,
16261, 48796, 15840,
//non zero
    0, 16312, 48932,
15920, 16292, 48900,
16036, 16275, 48856,
16108, 16262, 48820,
16150, 16246, 48792,
16180, 16228, 48768,
16206, 16210, 48736,
16232, 16196, 48712
};

uint16_t log2_bf16_poly2_coeffs_m4[2*3*(1 << m4_val)] =  // C2, C1, C0
{
//zero
16313, 48952, 16100,
16307, 48938, 16072,
16302, 48926, 16048,
16297, 48914, 16028,
16293, 48904, 16012,
16289, 48896, 16000,
16285, 48880, 15968,
16281, 48864, 15952,
16278, 48852, 15928,
16275, 48840, 15912,
16271, 48832, 15896,
16269, 48820, 15888,
16266, 48812, 15872,
16263, 48804, 15856,
16261, 48796, 15840,
16258, 48788, 15824,
//non zero
    0, 16313, 48942,
15792, 16302, 48922,
15920, 16292, 48906,
16000, 16283, 48888,
16036, 16276, 48864,
16072, 16269, 48844,
16108, 16262, 48828,
16134, 16256, 48812,
16150, 16246, 48796,
16164, 16236, 48784,
16180, 16228, 48776,
16194, 16218, 48760,
16206, 16210, 48744,
16220, 16204, 48728,
16232, 16196, 48712,
16244, 16190, 48704
};

uint16_t log2_bf16_poly2_coeffs_m5[2*3*(1 << m5_val)] =  // C2, C1, C0
{
//zero
16313, 48952, 16108,
16310, 48946, 16096,
16307, 48938, 16080,
16305, 48932, 16068,
16302, 48926, 16056,
16300, 48920, 16044,
16297, 48914, 16036,
16295, 48910, 16024,
16293, 48904, 16016,
16291, 48900, 16008,
16289, 48896, 16000,
16287, 48888, 15992,
16285, 48880, 15976,
16283, 48872, 15968,
16281, 48864, 15952,
16279, 48860, 15944,
16278, 48852, 15936,
16276, 48848, 15928,
16275, 48840, 15920,
16273, 48836, 15912,
16271, 48832, 15904,
16270, 48824, 15896,
16269, 48820, 15888,
16267, 48816, 15888,
16266, 48812, 15880,
16264, 48808, 15872,
16263, 48804, 15872,
16262, 48800, 15856,
16261, 48796, 15840,
16259, 48792, 15840,
16258, 48788, 15824,
16257, 48784, 15824,
//non zero
    0, 16313, 48948,
15680, 16307, 48936,
15792, 16302, 48926,
15880, 16297, 48918,
15920, 16292, 48910,
15960, 16288, 48902,
16000, 16283, 48896,
16020, 16280, 48884,
16036, 16276, 48872,
16056, 16272, 48860,
16072, 16269, 48848,
16092, 16265, 48840,
16108, 16262, 48832,
16124, 16259, 48824,
16134, 16256, 48816,
16142, 16252, 48808,
16150, 16246, 48800,
16158, 16242, 48796,
16164, 16236, 48788,
16172, 16232, 48784,
16180, 16228, 48776,
16186, 16222, 48772,
16194, 16218, 48768,
16200, 16214, 48760,
16206, 16212, 48752,
16214, 16208, 48744,
16220, 16204, 48736,
16226, 16200, 48728,
16232, 16196, 48720,
16238, 16194, 48712,
16244, 16190, 48704,
16250, 16188, 48696
};

uint16_t log2_bf16_poly2_coeffs_m6[2*3*(1 << m6_val)] =  // C2, C1, C0
{
//zero
16313, 48952, 16112,
16311, 48948, 16104,
16310, 48946, 16096,
16308, 48942, 16092,
16307, 48938, 16084,
16306, 48934, 16076,
16305, 48932, 16068,
16303, 48928, 16064,
16302, 48926, 16056,
16301, 48922, 16052,
16300, 48920, 16048,
16298, 48918, 16040,
16297, 48914, 16036,
16296, 48912, 16032,
16295, 48910, 16028,
16294, 48908, 16024,
16293, 48904, 16020,
16292, 48902, 16016,
16291, 48900, 16012,
16290, 48898, 16008,
16289, 48896, 16004,
16288, 48892, 16000,
16287, 48888, 15992,
16286, 48884, 15984,
16285, 48880, 15984,
16284, 48876, 15976,
16283, 48872, 15968,
16282, 48868, 15960,
16281, 48864, 15960,
16280, 48864, 15952,
16279, 48860, 15944,
16279, 48856, 15944,
16278, 48852, 15936,
16277, 48852, 15936,
16276, 48848, 15928,
16275, 48844, 15928,
16275, 48840, 15920,
16274, 48840, 15920,
16273, 48836, 15912,
16272, 48832, 15912,
16271, 48832, 15904,
16271, 48828, 15904,
16270, 48824, 15896,
16269, 48824, 15896,
16269, 48820, 15888,
16268, 48820, 15888,
16267, 48816, 15888,
16266, 48816, 15880,
16266, 48812, 15880,
16265, 48808, 15880,
16264, 48808, 15872,
16264, 48804, 15872,
16263, 48804, 15872,
16263, 48800, 15856,
16262, 48800, 15856,
16261, 48800, 15856,
16261, 48796, 15840,
16260, 48796, 15840,
16259, 48792, 15840,
16259, 48792, 15840,
16258, 48788, 15824,
16258, 48788, 15824,
16257, 48784, 15824,
16257, 48784, 15824,
//non zero
    0, 16313, 48950,
15552, 16310, 48944,
15680, 16307, 48940,
15744, 16304, 48934,
15792, 16302, 48930,
15840, 16299, 48924,
15880, 16297, 48920,
15896, 16294, 48916,
15920, 16292, 48912,
15936, 16290, 48908,
15960, 16288, 48904,
15976, 16286, 48900,
16000, 16284, 48898,
16008, 16281, 48892,
16020, 16280, 48884,
16028, 16278, 48880,
16036, 16276, 48872,
16048, 16274, 48868,
16056, 16272, 48864,
16064, 16270, 48856,
16072, 16269, 48852,
16080, 16267, 48848,
16092, 16265, 48844,
16100, 16264, 48836,
16108, 16262, 48832,
16116, 16261, 48828,
16124, 16259, 48824,
16130, 16258, 48820,
16134, 16256, 48816,
16138, 16254, 48812,
16142, 16252, 48808,
16146, 16248, 48804,
16150, 16246, 48804,
16154, 16244, 48800,
16158, 16242, 48796,
16162, 16238, 48792,
16164, 16236, 48788,
16168, 16234, 48788,
16172, 16232, 48784,
16176, 16230, 48780,
16180, 16228, 48780,
16182, 16226, 48776,
16186, 16222, 48772,
16190, 16220, 48772,
16194, 16218, 48768,
16196, 16216, 48768,
16200, 16214, 48760,
16204, 16212, 48752,
16206, 16212, 48752,
16210, 16210, 48744,
16214, 16208, 48744,
16216, 16206, 48736,
16220, 16204, 48736,
16222, 16202, 48728,
16226, 16200, 48728,
16230, 16198, 48720,
16232, 16196, 48720,
16236, 16196, 48720,
16238, 16194, 48712,
16242, 16192, 48712,
16244, 16190, 48704,
16248, 16190, 48704,
16250, 16188, 48704,
16254, 16186, 48696
};

////// BF16 //////
uint16_t exp_ftable_bf16[2 * 4 * (1 << m5_val)] = // val , val -128
{
    0x3ef9,    0x3f80,    0x3f80,    0x3efb,    0x3f80,    0x3f80,    0x3f80,    0x3f80,
    0x3f80,    0x3f80,    0x3f80,    0x3f80,    0x3f02,    0x3f80,    0x3f03,    0x3f80,
    0x3f80,    0x3f05,    0x3f80,    0x3f80,    0x3f06,    0x3f80,    0x3f80,    0x3f08,
    0x3f80,    0x3f80,    0x3f0a,    0x3f80,    0x3f80,    0x3f0b,    0x3f80,    0x3f0c,
    0x3f0d,    0x3f80,    0x3f0e,    0x3f0e,    0x3f80,    0x3f10,    0x3f80,    0x3f80,
    0x3f11,    0x3f12,    0x3f80,    0x3f13,    0x3f80,    0x3f80,    0x3f15,    0x3f80,
    0x3f80,    0x3f16,    0x3f80,    0x3f80,    0x3f18,    0x3f80,    0x3f80,    0x3f1a,
    0x3f80,    0x3f1b,    0x3f1c,    0x3f1e,    0x3f1f,    0x3f20,    0x3f21,    0x3f23,
    0x3f24,    0x3f25,    0x3f27,    0x3f28,    0x3f29,    0x3f2b,    0x3f2c,    0x3f2d,
    0x3f2f,    0x3f30,    0x3f31,    0x3f33,    0x3f34,    0x3f36,    0x3f37,    0x3f38,
    0x3f3a,    0x3f3b,    0x3f3d,    0x3f3e,    0x3f40,    0x3f41,    0x3f43,    0x3f44,
    0x3f46,    0x3f47,    0x3f49,    0x3f4b,    0x3f4c,    0x3f4e,    0x3f4f,    0x3f51,
    0x3f53,    0x3f54,    0x3f56,    0x3f58,    0x3f59,    0x3f5b,    0x3f5d,    0x3f5e,
    0x3f60,    0x3f62,    0x3f64,    0x3f65,    0x3f67,    0x3f69,    0x3f6b,    0x3f6d,
    0x3f6f, 0x3f70, 0x3f72, 0x3f74, 0x3f76, 0x3f78, 0x3f7a, 0x3f7c,
    0x3f7e,    0x3f80,    0x3f81,    0x3f82,    0x3f83,    0x3f84,    0x3f85,    0x3f86,
    0x3f87,    0x3f88,    0x3f89,    0x3f8a,    0x3f8b,    0x3f8d,    0x3f8e,    0x3f8f,
    0x3f90,    0x3f91,    0x3f92,    0x3f93,    0x3f94,    0x3f96,    0x3f97,    0x3f98,
    0x3f99,    0x3f9a,    0x3f9c,    0x3f9d,    0x3f9e,    0x3f9f,    0x3fa1,    0x3fa2,
    0x3fa3,    0x3fa4,    0x3fa6,    0x3fa7,    0x3fa8,    0x3faa,    0x3fab,    0x3fac,
    0x3fae,    0x3faf,    0x3fb0,    0x3fb2,    0x3fb3,    0x3fb5,    0x3fb6,    0x3fb7,
    0x3fb9,    0x3fba,    0x3fbc,    0x3fbd,    0x3fbf,    0x3fc0,    0x3fc2,    0x3fc3,
    0x3fc5,    0x3fc6,    0x3fc8,    0x3fc9,    0x3fcb,    0x3fcd,    0x3fce,    0x3fd0,
    0x3fd1,    0x3fd3,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,
    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,
    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,
    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,
    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,
    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,
    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,
    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,
    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000,    0x0000
};

 // ==========  float log2(x) linear approximation for [0.75, 1.0] ===================

uint16_t log2m1_bf16_linear_coeffs_m4_01p[2*(1 << m4_val)] =  // C2, C1, C0
{
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
48852, 16364,
48792, 16347,
48712, 16332,
48576, 16319
};

uint16_t log2m1_bf16_linear_coeffs_m5_01p[2*(1 << m5_val)] =  // C2, C1, C0
{
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
48852, 16369,
48824, 16360,
48792, 16351,
48760, 16343,
48712, 16335,
48656, 16328,
48576, 16322,
48448, 16316
};

uint16_t log2m1_bf16_linear_coeffs_m6_01p[2*(1 << m6_val)] =  // C2, C1, C0
{
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
48852, 16372,
48836, 16367,
48824, 16362,
48808, 16357,
48792, 16353,
48780, 16349,
48760, 16345,
48736, 16341,
48712, 16337,
48680, 16334,
48656, 16330,
48624, 16327,
48576, 16323,
48528, 16320,
48448, 16317,
48320, 16314
};

 // ==========  bf16 log2(x) poly2 approximation for 0.75, 1.0] ===================

uint16_t log2m1_bf16_poly2_coeffs_m4_01p[3*(1 << m4_val)] =  // C2, C1, C0
{
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
48852, 16374, 49047,
48792, 16355, 49026,
48712, 16339, 48994,
48576, 16325, 48964
};

uint16_t log2m1_bf16_poly2_coeffs_m5_01p[3*(1 << m5_val)] =  // C2, C1, C0
{
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
48852, 16374, 49054,
48824, 16364, 49041,
48792, 16355, 49031,
48760, 16347, 49018,
48712, 16339, 49000,
48656, 16332, 48986,
48576, 16325, 48972,
48448, 16319, 48958
};

uint16_t log2m1_bf16_poly2_coeffs_m6_01p[3*(1 << m6_val)] =  // C2, C1, C0
{
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
48852, 16374, 49057,
48836, 16369, 49050,
48824, 16364, 49044,
48808, 16360, 49039,
48792, 16355, 49033,
48780, 16351, 49028,
48760, 16347, 49022,
48736, 16343, 49014,
48712, 16339, 49004,
48680, 16335, 48996,
48656, 16332, 48990,
48624, 16328, 48982,
48576, 16325, 48974,
48528, 16322, 48968,
48448, 16319, 48962,
48320, 16316, 48956
};

 // ==========  bf16 log2(x)/(x - 1.0) linear approximation for 0.0, 1.0] ===================

uint16_t log2m1_bf16_linear_coeffs_m4_01f[2*(1 << m4_val)] =  // C2, C1, C0
{
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
16340, 49024,
16332, 49000,
16325, 48978,
16319, 48960
};

uint16_t log2m1_bf16_linear_coeffs_m5_01f[2*(1 << m5_val)] =  // C2, C1, C0
{
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
16340, 49027,
16336, 49018,
16332, 49006,
16329, 48994,
16325, 48984,
16322, 48974,
16319, 48964,
16316, 48956
};

uint16_t log2m1_bf16_linear_coeffs_m6_01f[2 * (1 << m6_val)] =  // C2, C1, C0
{
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
00000, 00000,
16340, 49029,
16338, 49026,
16336, 49020,
16334, 49014,
16332, 49008,
16331, 49002,
16329, 48996,
16327, 48992,
16325, 48986,
16324, 48980,
16322, 48976,
16320, 48972,
16319, 48968,
16317, 48962,
16316, 48958,
16314, 48954
};

 // ==========  bf16 log2(x)/(x - 1.0) poly2 approximation for 0.0, 1.0] ===================

uint16_t log2m1_bf16_poly2_coeffs_m4_01f[3*(1 << m4_val)] =  // C2, C1, C0
{
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
16340, 49031, 16214,
16332, 49010, 16180,
16325, 48988, 16154,
16319, 48968, 16132
};

uint16_t log2m1_bf16_poly2_coeffs_m5_01f[3*(1 << m5_val)] =  // C2, C1, C0
{
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
16340, 49031, 16224,
16336, 49024, 16204,
16332, 49010, 16188,
16329, 49000, 16172,
16325, 48988, 16160,
16322, 48978, 16148,
16319, 48970, 16138,
16316, 48960, 16128
};

uint16_t log2m1_bf16_poly2_coeffs_m6_01f[3*(1 << m6_val)] =  // C2, C1, C0
{
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
00000, 00000, 00000,
16340, 49031, 16228,
16338, 49027, 16218,
16336, 49024, 16210,
16334, 49018, 16200,
16332, 49010, 16192,
16331, 49004, 16184,
16329, 49000, 16176,
16327, 48994, 16170,
16325, 48988, 16162,
16324, 48984, 16156,
16322, 48978, 16150,
16320, 48974, 16146,
16319, 48970, 16140,
16317, 48964, 16134,
16316, 48960, 16130,
16314, 48956, 16124
};

 // ======= reduced bf16 log2(x)/(x - 1.0) linear approximation for 0.0, 1.0] w/o zeroes =======

// reduced m4 table - no zeroes
uint16_t log2m1_bf16_linear_coeffs_m4_0_075[2 * (( 1 << m4_val) >> 2)] =  // C2, C1, C0
{
16340, 49024,
16332, 49000,
16325, 48978,
16319, 48960
};

// reduced m5 table - no zeroes
uint16_t log2m1_bf16_linear_coeffs_m5_0_075[2 * (( 1 << m5_val) >> 2)] =  // C2, C1, C0
{
16340, 49027,
16336, 49018,
16332, 49006,
16329, 48994,
16325, 48984,
16322, 48974,
16319, 48964,
16316, 48956
};

// reduced m6 table - no zeroes
uint16_t log2m1_bf16_linear_coeffs_m6_0_075[2 * ((1 << m6_val) >> 2)] =  // C2, C1, C0
{
16340, 49029,
16338, 49026,
16336, 49020,
16334, 49014,
16332, 49008,
16331, 49002,
16329, 48996,
16327, 48992,
16325, 48986,
16324, 48980,
16322, 48976,
16320, 48972,
16319, 48968,
16317, 48962,
16316, 48958,
16314, 48954
};

 // --------reduced bf16 log2(x)/(x - 1.0) poly2 approximation for 0.0, 1.0] w/o zeroes-------

uint16_t log2m1_bf16_poly2_coeffs_m4_0_075[3 * ((1 << m4_val) >> 2)] =  // C2, C1, C0
{
16340, 49031, 16214,
16332, 49010, 16180,
16325, 48988, 16154,
16319, 48968, 16132
};


uint16_t log2m1_bf16_poly2_coeffs_m5_0_075[3 * ((1 << m5_val) >> 2)] =  // C2, C1, C0
{
16340, 49031, 16224,
16336, 49024, 16204,
16332, 49010, 16188,
16329, 49000, 16172,
16325, 48988, 16160,
16322, 48978, 16148,
16319, 48970, 16138,
16316, 48960, 16128
};

uint16_t log2m1_bf16_poly2_coeffs_m6_0_075[3 * ((1 << m6_val) >> 2)] =  // C2, C1, C0
{
16340, 49031, 16228,
16338, 49027, 16218,
16336, 49024, 16210,
16334, 49018, 16200,
16332, 49010, 16192,
16331, 49004, 16184,
16329, 49000, 16176,
16327, 48994, 16170,
16325, 48988, 16162,
16324, 48984, 16156,
16322, 48978, 16150,
16320, 48974, 16146,
16319, 48970, 16140,
16317, 48964, 16134,
16316, 48960, 16130,
16314, 48956, 16124
};


// ==========  GL log2 poly2 approximation  (m = 3) ===================

// log2 zero_exp followed by non_zero exp

uint16_t log2_coeffs_bf16[3*16] =
{
    0x3dc5u,  0xb9c0u,  0x36bcu,
    0x3d70u,  0xb8eau,  0x353cu,
    0x3d27u,  0xb844u,  0x3428u,
    0x3ce7u,  0xb77cu,  0x32c0u,
    0x3caeu,  0xb6a4u,  0x3198u,
    0x3c7cu,  0xb5f4u,  0x30b0u,
    0x3c4eu,  0xb560u,  0x2ff0u,
    0x3c25u,  0xb4e0u,  0x2ec0u,
    0x0000u,  0x3dc2u,  0xb920u,
    0x3170u,  0x3d1fu,  0xb81au,
    0x3528u,  0x3c9cu,  0xb6b4u,
    0x3758u,  0x3c31u,  0xb598u,
    0x38aeu,  0x3bb0u,  0xb4bcu,
    0x399au,  0x3b18u,  0xb410u,
    0x3a76u,  0x3a96u,  0xb308u,
    0x3b42u,  0x3a26u,  0xb228u
};

// ==========  GL pow2 poly2 approximation  (m = 2) ===================

uint16_t pow2_coeffs_bf16[3 * 4] =  // C2, C1, C0
{
    16256,  16176,  16008,
    16280,  16210,  16032,
    16309,  16250,  16060,
    16343,  16277,  16096
};

// ==========  bf16 recip const approximation  (m = 7) ===================

uint16_t recip_bf16_scalar_coeffs_m7[1 << 7] =  // C2, C1, C0
{
16256,
16254,
16252,
16250,
16248,
16246,
16245,
16243,
16241,
16239,
16237,
16236,
16234,
16232,
16231,
16229,
16228,
16226,
16224,
16223,
16221,
16220,
16218,
16217,
16216,
16214,
16213,
16211,
16210,
16209,
16207,
16206,
16205,
16204,
16202,
16201,
16200,
16199,
16197,
16196,
16195,
16194,
16193,
16192,
16191,
16189,
16188,
16187,
16186,
16185,
16184,
16183,
16182,
16181,
16180,
16179,
16178,
16177,
16176,
16175,
16174,
16173,
16172,
16172,
16171,
16170,
16169,
16168,
16167,
16166,
16165,
16165,
16164,
16163,
16162,
16161,
16161,
16160,
16159,
16158,
16158,
16157,
16156,
16155,
16155,
16154,
16153,
16152,
16152,
16151,
16150,
16150,
16149,
16148,
16148,
16147,
16146,
16146,
16145,
16144,
16144,
16143,
16142,
16142,
16141,
16141,
16140,
16139,
16139,
16138,
16138,
16137,
16137,
16136,
16135,
16135,
16134,
16134,
16133,
16133,
16132,
16132,
16131,
16131,
16130,
16130,
16129,
16129
};

 // ==========  bf16 recip linear approximation  (m = 2) ===================

uint16_t recip_bf16_linear_coeffs_m2[2*(1 << 2)] =  // C1, C0
{
  16254, 48972,
  16204, 48904,
  16170, 48836,
  16146, 48788
};

uint16_t recip_bf16_linear_coeffs_m3[2*(1 << 3)] =  // C1, C0
{
  16256, 48996,
  16228, 48950,
  16204, 48916,
  16186, 48888,
  16170, 48852,
  16158, 48820,
  16146, 48796,
  16136, 48776
};

uint16_t recip_bf16_linear_coeffs_m4[2*(1 << 4)] =  // C1, C0
{
  16256, 49008,
  16240, 48982,
  16228, 48960,
  16216, 48940,
  16204, 48924,
  16194, 48910,
  16186, 48898,
  16178, 48876,
  16170, 48860,
  16164, 48840,
  16158, 48828,
  16152, 48812,
  16146, 48800,
  16142, 48792,
  16136, 48780,
  16132, 48772
};

// ==========  GL recip poly2 approximations  (m = 3) ===================
uint16_t recip_bf16_poly2_coeffs_m2[3*(1 << 2)] =  // C0, C1, C2
{
  16256, 49018, 16182,
  16204, 48930, 16072,
  16170, 48864, 15984,
  16146, 48804, 15904
};

uint16_t recip_bf16_poly2_coeffs_m3[3*(1 << 3)] =  // C0, C1, C2
{
  16256, 49022, 16214,
  16228, 48970, 16154,
  16204, 48932, 16100,
  16186, 48902, 16044,
  16170, 48868, 16008,
  16158, 48832, 15960,
  16146, 48808, 15920,
  16136, 48784, 15888
};

uint16_t recip_bf16_poly2_coeffs_m4[3*(1 << 4)] =  // C0, C1, C2
{
  16256, 49024, 16234,
  16240, 48994, 16196,
  16228, 48970, 16166,
  16216, 48950, 16142,
  16204, 48932, 16116,
  16196, 48916, 16084,
  16186, 48904, 16056,
  16178, 48888, 16032,
  16170, 48868, 16016,
  16164, 48848, 16000,
  16158, 48832, 15968,
  16152, 48820, 15944,
  16146, 48808, 15928,
  16142, 48796, 15904,
  16136, 48784, 15888,
  16132, 48776, 15880
};

uint16_t recip_coeffs_bf16[8*3] =
{
    0x3c00u,  0xbbf2u,  0x3ab2u,
    0x3b1cu,  0xba48u,  0x38ccu,
    0x3a66u,  0xb918u,  0x3718u,
    0x39d2u,  0xb836u,  0x3568u,
    0x3956u,  0xb718u,  0x3434u,
    0x38ecu,  0xb60cu,  0x32a8u,
    0x3892u,  0xb538u,  0x3160u,
    0x3844u,  0xb48cu,  0x3068u
};

// M.Wiktor imp. SW-41220:
uint16_t recip_coeffs_c0_bf16[128] =
{
    16256,16254,16252,16250,16248,16246,16245,
    16243,16241,16239,16237,16236,16234,16232,
    16231,16229,16228,16226,16224,16223,16221,
    16220,16218,16217,16216,16214,16213,16211,
    16210,16209,16207,16206,16205,16204,16202,
    16201,16200,16199,16197,16196,16195,16194,
    16193,16192,16191,16189,16188,16187,16186,
    16185,16184,16183,16182,16181,16180,16179,
    16178,16177,16176,16175,16174,16173,16172,
    16172,16171,16170,16169,16168,16167,16166,
    16165,16165,16164,16163,16162,16161,16161,
    16160,16159,16158,16158,16157,16156,16155,
    16155,16154,16153,16152,16152,16151,16150,
    16150,16149,16148,16148,16147,16146,16146,
    16145,16144,16144,16143,16142,16142,16141,
    16141,16140,16139,16139,16138,16138,16137,
    16137,16136,16135,16135,16134,16134,16133,
    16133,16132,16132,16131,16131,16130,16130,
    16129,16129
};
// ==========  GL rsqrt poly2 approximations  (m = 3) ===================
// rsqrt_default_coeffs_m3_12 followed by rsqrt_default_coeffs_m3_24
#if 0
uint16_t rsqrt_coeffs_bf16[3*16] =
{
    0x3c00u,  0xb7f8u,  0x352cu,
    0x3b8au,  0xb6acu,  0x33d8u,
    0x3b28u,  0xb5b4u,  0x3218u,
    0x3ad2u,  0xb4f4u,  0x30d8u,
    0x3a88u,  0xb458u,  0x2fe0u,
    0x3a46u,  0xb3b8u,  0x2e80u,
    0x3a0cu,  0xb2e8u,  0x2d70u,
    0x39d8u,  0xb238u,  0x2ca0u,

    0x39a8u,  0xb1a0u,  0x2b60u,
    0x3956u,  0xb0b8u,  0x2980u,
    0x3910u,  0xb008u,  0x2840u,
    0x38d2u,  0xaf00u,  0x26c0u,
    0x389eu,  0xae20u,  0x2580u,
    0x3870u,  0xad70u,  0x2480u,
    0x3846u,  0xace0u,  0x2380u,
    0x3822u,  0xac60u,  0x2280u
};
#else
    uint16_t rsqrt_coeffs_bf16[2*16] =
{
    16256u, 48876u,
    16242u, 48840u,
    16228u, 48812u,
    16218u, 48788u,
    16208u, 48772u,
    16200u, 48744u,
    16194u, 48720u,
    16186u, 48704u,

    16180u, 48680u,
    16170u, 48656u,
    16162u, 48624u,
    16154u, 48592u,
    16148u, 48576u,
    16142u, 48544u,
    16136u, 48528u,
    16132u, 48512u
};
#endif

uint16_t rsqrt_bf16_const_coeffs_m6[1 << 7] =  // C2, C1, C0 coeffs_12 followed by coeffs_24
{
    // ==========  bf16 rsqrt const approximation for [1.0, 2.0]  (m = 6) ===================
    16256,
    16254,
    16252,
    16250,
    16248,
    16247,
    16245,
    16243,
    16241,
    16240,
    16238,
    16236,
    16235,
    16233,
    16232,
    16230,
    16229,
    16228,
    16226,
    16225,
    16223,
    16222,
    16221,
    16220,
    16218,
    16217,
    16216,
    16215,
    16214,
    16212,
    16211,
    16210,
    16209,
    16208,
    16207,
    16206,
    16205,
    16204,
    16203,
    16202,
    16201,
    16200,
    16199,
    16198,
    16197,
    16196,
    16195,
    16194,
    16194,
    16193,
    16192,
    16191,
    16190,
    16189,
    16189,
    16188,
    16187,
    16186,
    16185,
    16185,
    16184,
    16183,
    16182,
    16182,
// ==========  bf16 rsqrt const approximation  for [2.0, 4.0] (m = 6) ===================
    16180,
    16178,
    16178,
    16176,
    16174,
    16174,
    16172,
    16172,
    16170,
    16168,
    16168,
    16166,
    16166,
    16164,
    16164,
    16162,
    16162,
    16160,
    16160,
    16158,
    16158,
    16156,
    16156,
    16154,
    16154,
    16154,
    16152,
    16152,
    16150,
    16150,
    16148,
    16148,
    16148,
    16146,
    16146,
    16146,
    16144,
    16144,
    16144,
    16142,
    16142,
    16140,
    16140,
    16140,
    16140,
    16138,
    16138,
    16138,
    16136,
    16136,
    16136,
    16134,
    16134,
    16134,
    16134,
    16132,
    16132,
    16132,
    16130,
    16130,
    16130,
    16130,
    16128,
    16128
};


uint16_t rsqrt_bf16_linear_coeffs_m2[2 * (1 << 3)] =  // C1, C0
{
    // ==========  bf16 rsqrt linear approximation  for [1.0, 2.0] (m = 2) ===================
    16256, 48856,
    16228, 48800,
    16208, 48760,
    16194, 48712,
// ==========  bf16 rsqrt linear approximation  for [2.0, 4.0] (m = 2) ===================
    16180, 48664,
    16162, 48608,
    16148, 48560,
    16136, 48528
};
uint16_t rsqrt_bf16_linear_coeffs_m3[2 * (1 << 4)] =  // C1, C0
{
    16256, 48876,
    16242, 48840,
    16228, 48812,
    16218, 48788,
    16208, 48772,
    16200, 48744,
    16194, 48720,
    16186, 48704,

    16180, 48680,
    16170, 48656,
    16162, 48624,
    16154, 48592,
    16148, 48576,
    16142, 48544,
    16136, 48528,
    16132, 48512
};

uint16_t rsqrt_bf16_linear_coeffs_m4[2 * (1 << 5)] =  // C1, C0
{
    16256, 48884,
    16248, 48864,
    16242, 48844,
    16234, 48832,
    16228, 48816,
    16224, 48804,
    16218, 48792,
    16214, 48784,
    16210, 48776,
    16204, 48768,
    16200, 48752,
    16198, 48736,
    16194, 48728,
    16190, 48720,
    16186, 48704,
    16184, 48696,

    16180, 48688,
    16176, 48672,
    16170, 48656,
    16166, 48648,
    16162, 48640,
    16158, 48624,
    16154, 48608,
    16150, 48592,
    16148, 48576,
    16144, 48560,
    16142, 48560,
    16140, 48544,
    16136, 48544,
    16134, 48528,
    16132, 48528,
    16130, 48512
};



uint16_t rsqrt_bf16_poly2_coeffs_m2[3 * (1 << 3)] =  // C2, C1, C0
{
    // ==========  bf16 rsqrt poly2 approximation  for [1.0, 2.0] (m = 2) ===================
    16256, 48892, 16016,
    16228, 48820, 15920,
    16210, 48780, 15840,
    16194, 48728, 15776,
    // ==========  bf16 rsqrt poly2 approximation  for [2.0, 4.0] (m = 2) ===================
    16182, 48688, 15680,
    16162, 48640, 15616,
    16148, 48576, 15552,
    16136, 48544, 15488
};

uint16_t rsqrt_bf16_poly2_coeffs_m3[3 * (1 << 4)] =  // C2, C1, C0
{
    16256, 48896, 16036,
    16242, 48852, 15992,
    16228, 48824, 15936,
    16218, 48800, 15896,
    16210, 48780, 15872,
    16200, 48760, 15824,
    16194, 48736, 15792,
    16186, 48712, 15760,

    16182, 48696, 15712,
    16170, 48664, 15680,
    16162, 48640, 15616,
    16154, 48608, 15552,
    16148, 48576, 15552,
    16142, 48560, 15488,
    16136, 48544, 15488,
    16132, 48528, 15488,
};

uint16_t rsqrt_bf16_poly2_coeffs_m4[3 * (1 << 5)] =  // C2, C1, C0
{
    16256, 48896, 16048,
    16248, 48872, 16024,
    16242, 48856, 16004,
    16234, 48836, 15976,
    16228, 48824, 15952,
    16224, 48812, 15928,
    16218, 48800, 15904,
    16214, 48788, 15888,
    16210, 48780, 15880,
    16204, 48772, 15856,
    16200, 48760, 15840,
    16198, 48744, 15808,
    16194, 48736, 15792,
    16190, 48720, 15776,
    16186, 48712, 15776,
    16184, 48704, 15760,

    16182, 48696, 15744,
    16176, 48680, 15712,
    16170, 48664, 15680,
    16166, 48648, 15648,
    16162, 48640, 15648,
    16158, 48624, 15616,
    16154, 48608, 15616,
    16150, 48592, 15552,
    16148, 48576, 15552,
    16144, 48576, 15552,
    16142, 48560, 15488,
    16140, 48544, 15488,
    16136, 48544, 15488,
    16134, 48528, 15488,
    16132, 48528, 15488,
    16130, 48512, 15488,
};

 // ==========  bf16 sqrt const approximation  for [1.0, 4.0] (m = 6) ===================

uint16_t sqrt_bf16_const_coeffs_m6[1 << 7] =  // C2, C1, C0 coeffs_12 followed by coeffs_24
{
 // ==========  bf16 sqrt const approximation for [1.0, 2.0]  (m = 6) ===================
16256,
16257,
16258,
16259,
16260,
16261,
16262,
16263,
16264,
16265,
16266,
16267,
16268,
16269,
16270,
16271,
16272,
16272,
16273,
16274,
16275,
16276,
16277,
16278,
16279,
16279,
16280,
16281,
16282,
16283,
16284,
16284,
16285,
16286,
16287,
16288,
16288,
16289,
16290,
16291,
16292,
16292,
16293,
16294,
16295,
16295,
16296,
16297,
16298,
16298,
16299,
16300,
16301,
16301,
16302,
16303,
16304,
16304,
16305,
16306,
16307,
16307,
16308,
16309,
// ==========  bf16 sqrt const approximation  for [2.0, 4.0] (m = 6) ===================
16310,
16311,
16313,
16314,
16315,
16317,
16318,
16319,
16321,
16322,
16323,
16325,
16326,
16327,
16328,
16330,
16331,
16332,
16334,
16335,
16336,
16337,
16338,
16340,
16341,
16342,
16343,
16344,
16346,
16347,
16348,
16349,
16350,
16351,
16353,
16354,
16355,
16356,
16357,
16358,
16359,
16360,
16362,
16363,
16364,
16365,
16366,
16367,
16368,
16369,
16370,
16371,
16372,
16373,
16374,
16375,
16376,
16377,
16378,
16379,
16380,
16381,
16382,
16383
};

 // ==========  bf16 sqrt linear approximation  for [1.0, 4.0] (m = 2-4) ===================

uint16_t sqrt_bf16_linear_coeffs_m2[2*2*(1 << 2)] =  // C1, C0 coeffs_12 followed by coeffs_24
{
 // ==========  bf16 sqrt linear approximation  for [1.0, 2.0] (m = 2) ===================
16256, 16112,
16271, 16092,
16285, 16072,
16297, 16060,
 // ==========  bf16 sqrt linear approximation  for [2.0, 4.0] (m = 2) ===================
16309, 16044,
16330, 16028,
16350, 16016,
16368, 16004
};

uint16_t sqrt_bf16_linear_coeffs_m3[2*2*(1 << 3)] =  // C1, C0 coeffs_12 followed by coeffs_24
{
 // ==========  bf16 sqrt linear approximation  for [1.0, 2.0] (m = 3) ===================
16256, 16120,
16264, 16108,
16271, 16096,
16278, 16084,
16285, 16076,
16291, 16068,
16297, 16064,
16303, 16056,
 // ==========  bf16 sqrt linear approximation  for [2.0, 4.0] (m = 3) ===================
16309, 16048,
16320, 16040,
16330, 16032,
16340, 16024,
16350, 16016,
16359, 16012,
16367, 16008,
16376, 16004
};

uint16_t sqrt_bf16_linear_coeffs_m4[2*2*(1 << 4)] =  // C1, C0 coeffs_12 followed by coeffs_24
{
 // ==========  bf16 sqrt linear approximation  for [1.0, 2.0] (m = 4) ===================
16256, 16124,
16260, 16116,
16264, 16112,
16267, 16104,
16271, 16100,
16275, 16092,
16278, 16088,
16281, 16084,
16285, 16080,
16288, 16076,
16291, 16072,
16294, 16068,
16297, 16064,
16300, 16060,
16303, 16056,
16306, 16056,
 // ==========  bf16 sqrt linear approximation  for [2.0, 4.0] (m = 4) ===================
16309, 16052,
16315, 16044,
16320, 16040,
16325, 16036,
16330, 16032,
16335, 16028,
16340, 16024,
16345, 16020,
16350, 16020,
16354, 16016,
16359, 16012,
16363, 16012,
16367, 16008,
16372, 16004,
16376, 16004,
16380, 16000
};

 // ==========  bf16 sqrt poly2 approximation  for [1.0, 4.0] (m = 2-4) ===================

uint16_t sqrt_bf16_poly2_coeffs_m2[2*3*(1 << 2)] =  // C2, C1, C0 coeffs_12 followed by coeffs_24
{
 // ==========  bf16 sqrt poly2 approximation  for [1.0, 2.0] (m = 2) ===================
16256, 16128, 48592,
16271, 16100, 48544,
16285, 16080, 48512,
16297, 16064, 48448,
 // ==========  bf16 sqrt poly2 approximation  for [2.0, 4.0] (m = 2) ===================
16309, 16052, 48416,
16330, 16032, 48384,
16350, 16020, 48320,
16367, 16008, 48256
};

uint16_t sqrt_bf16_poly2_coeffs_m3[2*3*(1 << 3)] =  // C2, C1, C0 coeffs_12 followed by coeffs_24
{
 // ==========  bf16 sqrt poly2 approximation  for [1.0, 2.0] (m = 3) ===================
16256, 16128, 48624,
16264, 16112, 48576,
16271, 16100, 48560,
16278, 16092, 48528,
16285, 16080, 48512,
16291, 16072, 48480,
16297, 16064, 48480,
16303, 16060, 48448,
 // ==========  bf16 sqrt poly2 approximation  for [2.0, 4.0] (m = 3) ===================
16309, 16052, 48416,
16320, 16044, 48384,
16330, 16032, 48384,
16340, 16028, 48320,
16350, 16020, 48320,
16359, 16012, 48320,
16367, 16008, 48256,
16376, 16004, 48256
};

uint16_t sqrt_bf16_poly2_coeffs_m4[2*3*(1 << 4)] =  // C2, C1, C0 coeffs_12 followed by coeffs_24
{
 // ==========  bf16 sqrt poly2 approximation  for [1.0, 2.0] (m = 4) ===================
16256, 16128, 48624,
16260, 16120, 48608,
16264, 16112, 48592,
16267, 16108, 48576,
16271, 16100, 48560,
16275, 16096, 48544,
16278, 16092, 48544,
16281, 16084, 48528,
16285, 16080, 48512,
16288, 16076, 48512,
16291, 16072, 48512,
16294, 16068, 48480,
16297, 16064, 48480,
16300, 16064, 48448,
16303, 16060, 48448,
16306, 16056, 48448,
 // ==========  bf16 sqrt poly2 approximation  for [2.0, 4.0] (m = 4) ===================
16309, 16052, 48416,
16315, 16048, 48416,
16320, 16044, 48416,
16325, 16040, 48384,
16330, 16032, 48384,
16335, 16028, 48384,
16340, 16028, 48320,
16345, 16024, 48320,
16350, 16020, 48320,
16354, 16016, 48320,
16359, 16012, 48320,
16363, 16012, 48320,
16367, 16008, 48256,
16372, 16008, 48256,
16376, 16004, 48256,
16380, 16004, 48256
};

// ==========  GL sqrt poly2 approximations  (m = 2) ===================
// sqrt_default_coeffs_m2_12 followed by sqrt_default_coeffs_m2_24
uint16_t sqrt_coeffs_bf16[3*8] =
{
    0x3c00u,  0x37f8u,  0xaec0u,
    0x3c79u,  0x3724u,  0xad00u,
    0x3ce6u,  0x3684u,  0xabc0u,
    0x3d4bu,  0x360cu,  0xaa40u,
    0x3da8u,  0x35a4u,  0xa8c0u,
    0x3e53u,  0x350cu,  0xa700u,
    0x3eeeu,  0x349cu,  0xa580u,
    0x3f7cu,  0x3444u,  0xa480u
};

 // ==========  bf16 tanhx linear approximation on [0, 1] ===================
// // ==========  bf16 tanh linear approximation on [0, 1] ===================
 // ==========  bf16 tanh linear approximation on [1, 2] ===================
 // ==========  bf16 tanh linear approximation on [2, 4] ===================
uint16_t tanh_bf16_linear_coeffs_m2[3*2*(1 << 2)] =  // C2, C1, C0
{
16256, 48544,
16252, 48736,
16236, 48800,
16216, 48816,

/*
    0, 16250,
16000, 16222,
16112, 16178,
16164, 16130,
*/

16196, 16048,
16218, 15976,
16232, 15896,
16242, 15808,

16248, 15680,
16252, 15488,
16254, 15360,
16256,     0
};

uint16_t tanh_bf16_linear_coeffs_m3[3*2*(1 << 3)] =  // C2, C1, C0
{
16256, 48416,
16254, 48640,
16250, 48712,
16244, 48768,
16236, 48792,
16228, 48804,
16216, 48812,
16206, 48816,

/*
    0, 16254,
15872, 16246,
15992, 16232,
16056, 16212,
16108, 16190,
16142, 16164,
16162, 16140,
16180, 16108,
*/

16196, 16068,
16208, 16032,
16218, 16000,
16226, 15952,
16232, 15912,
16236, 15872,
16242, 15824,
16244, 15776,

16246, 15712,
16250, 15616,
16252, 15552,
16254, 15488,
16254, 15360,
16256, 15360,
16256,     0,
16256,     0
};

uint16_t tanh_bf16_linear_coeffs_m4[3*2*(1 << 4)] =  // C2, C1, C0
{
16256, 48320,
16256, 48512,
16254, 48592,
16254, 48656,
16250, 48696,
16248, 48728,
16244, 48752,
16240, 48776,
16236, 48788,
16232, 48796,
16228, 48804,
16222, 48808,
16216, 48812,
16212, 48816,
16206, 48816,
16200, 48816,

/*
    0, 16256,
15744, 16254,
15872, 16250,
15936, 16244,
15992, 16236,
16028, 16228,
16056, 16218,
16084, 16208,
16108, 16196,
16130, 16184,
16142, 16172,
16152, 16158,
16162, 16146,
16172, 16134,
16180, 16120,
16188, 16096,
*/

16196, 16076,
16202, 16056,
16208, 16040,
16212, 16024,
16218, 16008,
16222, 15992,
16226, 15960,
16228, 15936,
16232, 15920,
16234, 15904,
16236, 15880,
16240, 15856,
16242, 15840,
16242, 15808,
16244, 15792,
16246, 15776,

16246, 15744,
16248, 15680,
16250, 15648,
16252, 15616,
16252, 15552,
16254, 15488,
16254, 15488,
16254, 15360,
16254, 15360,
16256, 15360,
16256, 15360,
16256, 15360,
16256,     0,
16256,     0,
16256,     0,
16256,     0
};

 // ==========  bf16 tanhx poly2 approximation on [0, 1] ===================
// // ==========  bf16 tanh poly2 approximation on [0, 1] ===================
 // ==========  bf16 tanh poly2 approximation on [1, 2] ===================
 // ==========  bf16 tanh poly2 approximation on [2, 4] ===================
uint16_t tanh_bf16_poly2_coeffs_m2[3*3*(1 << 2)] =  // C2, C1, C0
{
16256,     0, 48804,
16250, 48680, 48752,
16236, 48784, 48624,
16216, 48812, 48256,

/*
    0, 16257, 48624,
15992, 16242, 48800,
16108, 16202, 48836,
16162, 16152, 48820,
*/

16194, 16084, 48784,
16218, 16012, 48712,
16232, 15928, 48648,
16240, 15840, 48560,

16246, 15760, 48448,
16252, 15552, 48256,
16254, 15360, 48128,
16256,     0,     0
};

uint16_t tanh_bf16_poly2_coeffs_m3[3*3*(1 << 3)] =  // C2, C1, C0
{
16256,     0, 48808,
16254, 48560, 48796,
16250, 48672, 48776,
16244, 48744, 48720,
16236, 48780, 48664,
16228, 48800, 48560,
16216, 48812, 48416,
16206, 48816, 15360,

/*
    0, 16256, 48512,
15872, 16252, 48696,
15992, 16242, 48780,
16056, 16224, 48816,
16108, 16202, 48832,
16142, 16178, 48836,
16162, 16152, 48828,
16180, 16128, 48812,
*/

16194, 16088, 48792,
16208, 16048, 48772,
16218, 16016, 48736,
16226, 15976, 48696,
16232, 15928, 48664,
16236, 15888, 48624,
16240, 15856, 48576,
16244, 15792, 48544,

16246, 15760, 48480,
16250, 15648, 48384,
16252, 15552, 48320,
16254, 15488, 48256,
16254, 15360, 48128,
16256, 15360, 48128,
16256,     0,     0,
16256,     0,     0
};

uint16_t tanh_bf16_poly2_coeffs_m4[3*3*(1 << 4)] =  // C2, C1, C0
{
16256,     0, 48812,
16256, 48416, 48808,
16254, 48560, 48800,
16254, 48640, 48792,
16250, 48672, 48780,
16248, 48712, 48768,
16244, 48744, 48736,
16240, 48768, 48704,
16236, 48780, 48680,
16232, 48792, 48648,
16228, 48800, 48592,
16222, 48808, 48528,
16216, 48812, 48448,
16212, 48816, 48320,
16206, 48816, 48128,
16200, 48816, 15488,

/*
    0, 16256, 48384,
15744, 16256, 48576,
15872, 16252, 48664,
15936, 16248, 48720,
15992, 16240, 48768,
16028, 16232, 48792,
16056, 16224, 48808,
16084, 16212, 48820,
16108, 16202, 48832,
16130, 16190, 48836,
16142, 16178, 48836,
16152, 16164, 48836,
16162, 16152, 48832,
16172, 16140, 48824,
16180, 16130, 48816,
16188, 16108, 48808,
*/

16194, 16088, 48800,
16202, 16068, 48788,
16208, 16048, 48776,
16212, 16032, 48768,
16218, 16016, 48744,
16222, 16000, 48728,
16226, 15976, 48704,
16228, 15952, 48688,
16232, 15928, 48672,
16234, 15912, 48656,
16236, 15888, 48640,
16240, 15872, 48608,
16240, 15856, 48592,
16242, 15824, 48576,
16244, 15792, 48544,
16246, 15776, 48528,

16246, 15760, 48512,
16248, 15712, 48448,
16250, 15680, 48416,
16252, 15616, 48384,
16252, 15552, 48320,
16254, 15552, 48256,
16254, 15488, 48256,
16254, 15488, 48128,
16254, 15360, 48128,
16256, 15360, 48128,
16256, 15360, 48128,
16256, 15360, 48128,
16256,     0,     0,
16256,     0,     0,
16256,     0,     0,
16256,     0,     0
};

// tanh
// tanhx_default_coeffs_m4_01 followed by
// tanh_default_coeffs_m4_12 followed by
// tanh_default_coeffs_m4_24 followed by
// tanh_default_coeffs_m4_48

uint16_t tanh_coeffs_bf16[3 * 64] =
{
    0x3c00u,  0x0000u,  0xb550u,
    0x3bfeu,  0xa960u,  0xb538u,
    0x3bf6u,  0xad40u,  0xb508u,
    0x3be8u,  0xafd0u,  0xb4c0u,
    0x3bd6u,  0xb118u,  0xb464u,
    0x3bc0u,  0xb230u,  0xb3f8u,
    0x3ba6u,  0xb330u,  0xb310u,
    0x3b86u,  0xb408u,  0xb220u,
    0x3b64u,  0xb46cu,  0xb120u,
    0x3b40u,  0xb4bcu,  0xb028u,
    0x3b1au,  0xb500u,  0xae70u,
    0x3af0u,  0xb534u,  0xacb0u,
    0x3ac6u,  0xb558u,  0xaa20u,
    0x3a9cu,  0xb570u,  0xa640u,
    0x3a70u,  0xb57cu,  0x9c00u,
    0x3a44u,  0xb580u,  0x2300u,
    0x3a18u,  0x36b8u,  0xb4f4u,
    0x3a4au,  0x3618u,  0xb4a4u,
    0x3a7au,  0x3584u,  0xb44cu,
    0x3aa4u,  0x34fcu,  0xb3f0u,
    0x3acau,  0x347cu,  0xb348u,
    0x3aecu,  0x3408u,  0xb2a8u,
    0x3b0au,  0x3338u,  0xb210u,
    0x3b26u,  0x3278u,  0xb180u,
    0x3b3eu,  0x31c8u,  0xb0f8u,
    0x3b54u,  0x3128u,  0xb080u,
    0x3b68u,  0x3098u,  0xb008u,
    0x3b78u,  0x3018u,  0xaf40u,
    0x3b88u,  0x2f40u,  0xae80u,
    0x3b96u,  0x2e70u,  0xadd0u,
    0x3ba2u,  0x2dc0u,  0xad30u,
    0x3bacu,  0x2d10u,  0xaca0u,
    0x3bb6u,  0x2c80u,  0xabc0u,
    0x3bc6u,  0x2b20u,  0xaa20u,
    0x3bd4u,  0x2980u,  0xa8e0u,
    0x3bdcu,  0x2860u,  0xa780u,
    0x3be4u,  0x26c0u,  0xa600u,
    0x3beau,  0x2540u,  0xa4c0u,
    0x3bf0u,  0x2440u,  0xa380u,
    0x3bf4u,  0x2280u,  0xa180u,
    0x3bf6u,  0x2100u,  0xa080u,
    0x3bf8u,  0x2000u,  0x9f00u,
    0x3bfau,  0x1e00u,  0x9d00u,
    0x3bfcu,  0x1d00u,  0x9c00u,
    0x3bfcu,  0x1c00u,  0x9a00u,
    0x3bfeu,  0x1a00u,  0x9a00u,
    0x3bfeu,  0x1800u,  0x9800u,
    0x3bfeu,  0x1800u,  0x9800u,
    0x3bfeu,  0x1400u,  0x9400u,
    0x3c00u,  0x1400u,  0x9400u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u
};

//  bf16 uint16 coefficients for approximation sinx,cos on all intervals

uint16_t sincos_bf16_scalar_coeffs_m7[2*(1 << m7_val)] =  // C2, C1, C0
{
//sinx
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16252,
16252,
16252,
16252,
16252,
16252,
16252,
16252,
16252,
16252,
16250,
16250,
16250,
16250,
16250,
16250,
16250,
16250,
16248,
16248,
16248,
16248,
16248,
16248,
16248,
16246,
16246,
16246,
16246,
16246,
16246,
16244,
16244,
16244,
16244,
16244,
16244,
16242,
16242,
16242,
16242,
16242,
16242,
16240,
16240,
16240,
16240,
16240,
16238,
16238,
16238,
16238,
16236,
16236,
16236,
16236,
16236,
16234,
16234,
16234,
16234,
16232,
16232,
16232,
16232,
16230,
16230,
16230,
16230,
16230,
16228,
16228,
16228,
16226,
16226,
16226,
16226,
16224,
16224,
16224,
16224,
16222,
16222,
16222,
16220,
16220,
16220,
16220,
16218,
16218,
16218,
16216,
16216,
16216,
//cos
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16256,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16254,
16252,
16252,
16252,
16252,
16252,
16250,
16250,
16250,
16250,
16250,
16248,
16248,
16248,
16248,
16246,
16246,
16246,
16246,
16244,
16244,
16244,
16242,
16242,
16242,
16240,
16240,
16240,
16238,
16238,
16238,
16236,
16236,
16234,
16234,
16234,
16232,
16232,
16230,
16230,
16228,
16228,
16228,
16226,
16226,
16224,
16224,
16222,
16222,
16220,
16220,
16218,
16218,
16216,
16214,
16214,
16212,
16212,
16210,
16210,
16208,
16208,
16206,
16204,
16204,
16202,
16200,
16200,
16198,
16198,
16196,
16194,
16194,
16192,
16190,
16190,
16188,
16186,
16186,
16184,
16182,
16182,
16180,
16178,
16176,
16176,
16174,
16172,
16170,
16170,
16168,
16166,
16164,
16164,
16162,
16160,
16158,
16158,
16156,
16154,
16152,
16150,
16150,
16148,
16146,
16144,
16142,
16140,
16140
};

uint16_t sincos_bf16_linear_coeffs_m2[2*2 * (1 << m2_val)] =  // C2, C1, C0
{
//sinx
16256, 48416,
16254, 48640,
16246, 48720,
16232, 48780,
//cos
16257, 48640,
16250, 48828,
16226, 48918,
16188, 48964
};


uint16_t sincos_bf16_linear_coeffs_m3[2*2 * (1 << m3_val)] =  // C2, C1, C0
{
//sinx
16256, 48320,
16256, 48512,
16254, 48592,
16250, 48656,
16246, 48696,
16240, 48736,
16232, 48768,
16224, 48788,
//cos
16256, 48512,
16254, 48704,
16248, 48796,
16238, 48856,
16224, 48904,
16208, 48930,
16188, 48954,
16164, 48974
};

uint16_t sincos_bf16_linear_coeffs_m4[2*2 * (1 << m4_val)] =  // C2, C1, C0
{
//sinx
16256, 48128,
16256, 48384,
16256, 48480,
16254, 48528,
16254, 48576,
16252, 48608,
16250, 48648,
16248, 48672,
16246, 48688,
16242, 48704,
16240, 48728,
16236, 48744,
16232, 48760,
16228, 48776,
16224, 48784,
16220, 48792,
//cos
16256, 48384,
16256, 48576,
16254, 48672,
16252, 48736,
16248, 48784,
16244, 48812,
16238, 48844,
16232, 48872,
16224, 48898,
16216, 48912,
16208, 48924,
16198, 48936,
16188, 48948,
16176, 48960,
16164, 48970,
16152, 48980
};

uint16_t sincos_bf16_linear_coeffs_m5[2*2 * (1 << m5_val)] =  // C2, C1, C0
{
//sinx
16256, 48128,
16256, 48256,
16256, 48320,
16256, 48416,
16256, 48448,
16254, 48480,
16254, 48528,
16254, 48544,
16254, 48560,
16252, 48592,
16252, 48608,
16250, 48624,
16250, 48640,
16250, 48656,
16248, 48664,
16246, 48672,
16246, 48680,
16244, 48696,
16242, 48704,
16242, 48712,
16240, 48720,
16238, 48728,
16236, 48744,
16234, 48752,
16232, 48760,
16230, 48768,
16228, 48772,
16226, 48776,
16224, 48780,
16222, 48784,
16220, 48788,
16218, 48792,
//cos
16256, 48256,
16256, 48448,
16256, 48544,
16254, 48608,
16254, 48656,
16252, 48688,
16252, 48720,
16250, 48752,
16248, 48776,
16246, 48788,
16244, 48804,
16242, 48820,
16238, 48836,
16236, 48848,
16232, 48864,
16228, 48880,
16224, 48892,
16220, 48902,
16216, 48908,
16212, 48914,
16208, 48922,
16202, 48928,
16198, 48934,
16192, 48940,
16188, 48946,
16182, 48952,
16176, 48956,
16170, 48962,
16164, 48968,
16158, 48972,
16152, 48976,
16144, 48982
};

uint16_t sincos_bf16_linear_coeffs_m6[2 * 2 * (1 << m6_val)] =  // C2, C1, C0
{
//sinx
16256,     0,
16256, 48128,
16256, 48256,
16256, 48256,
16256, 48320,
16256, 48384,
16256, 48384,
16256, 48416,
16256, 48448,
16256, 48448,
16254, 48480,
16254, 48512,
16254, 48512,
16254, 48528,
16254, 48544,
16254, 48544,
16254, 48560,
16254, 48576,
16252, 48576,
16252, 48592,
16252, 48608,
16252, 48608,
16250, 48624,
16250, 48624,
16250, 48640,
16250, 48648,
16250, 48648,
16248, 48656,
16248, 48664,
16248, 48664,
16246, 48672,
16246, 48672,
16246, 48680,
16244, 48688,
16244, 48688,
16244, 48696,
16242, 48704,
16242, 48704,
16242, 48712,
16240, 48712,
16240, 48720,
16238, 48728,
16238, 48728,
16238, 48736,
16236, 48736,
16236, 48744,
16234, 48744,
16234, 48752,
16232, 48760,
16232, 48760,
16230, 48768,
16230, 48768,
16228, 48772,
16228, 48772,
16226, 48776,
16226, 48776,
16224, 48780,
16224, 48780,
16222, 48784,
16222, 48784,
16220, 48788,
16218, 48788,
16218, 48792,
16216, 48792,
//cos
16256, 48128,
16256, 48320,
16256, 48416,
16256, 48480,
16256, 48528,
16256, 48560,
16254, 48592,
16254, 48624,
16254, 48648,
16254, 48664,
16252, 48680,
16252, 48696,
16252, 48712,
16250, 48728,
16250, 48744,
16250, 48760,
16248, 48772,
16248, 48780,
16246, 48784,
16244, 48792,
16244, 48800,
16242, 48808,
16242, 48816,
16240, 48824,
16238, 48832,
16236, 48840,
16236, 48844,
16234, 48852,
16232, 48860,
16230, 48868,
16228, 48876,
16226, 48880,
16224, 48888,
16222, 48896,
16220, 48900,
16218, 48902,
16216, 48906,
16214, 48910,
16212, 48912,
16210, 48916,
16208, 48920,
16206, 48922,
16202, 48926,
16200, 48928,
16198, 48932,
16196, 48936,
16192, 48938,
16190, 48942,
16188, 48944,
16184, 48946,
16182, 48950,
16178, 48952,
16176, 48956,
16174, 48958,
16170, 48960,
16168, 48964,
16164, 48966,
16162, 48968,
16158, 48970,
16154, 48974,
16152, 48976,
16148, 48978,
16144, 48980,
16142, 48982
};

uint16_t sincos_bf16_poly2_coeffs_m2[2 * 3 * (1 << m2_val)] =  // C2, C1, C0
{
//sinx
16256,     0, 48680,
16254, 48560, 48672,
16246, 48680, 48664,
16232, 48752, 48648,
//cos
16256,     0, 48892,
16248, 48768, 48876,
16224, 48888, 48848,
16188, 48944, 48804
};

uint16_t sincos_bf16_poly2_coeffs_m3[2 * 3 * (1 << m3_val)] =  // C2, C1, C0
{
//sinx
16256,     0, 48680,
16256, 48416, 48680,
16254, 48560, 48680,
16250, 48640, 48672,
16246, 48680, 48664,
16240, 48720, 48656,
16232, 48752, 48648,
16224, 48780, 48640,
//cos
16256,     0, 48896,
16254, 48640, 48892,
16248, 48768, 48884,
16238, 48828, 48872,
16224, 48884, 48856,
16208, 48918, 48836,
16188, 48942, 48816,
16164, 48964, 48792
};

uint16_t sincos_bf16_poly2_coeffs_m4[2 * 3 * (1 << m4_val)] =  // C2, C1, C0
{
//sinx
16256,     0, 48680,
16256, 48320, 48680,
16256, 48416, 48680,
16254, 48512, 48680,
16254, 48560, 48680,
16252, 48592, 48680,
16250, 48640, 48672,
16248, 48656, 48672,
16246, 48680, 48672,
16242, 48696, 48664,
16240, 48720, 48664,
16236, 48736, 48656,
16232, 48752, 48656,
16228, 48768, 48648,
16224, 48780, 48640,
16220, 48788, 48640,
//cos
16256,     0, 48896,
16256, 48512, 48896,
16254, 48640, 48892,
16252, 48704, 48888,
16248, 48768, 48884,
16244, 48796, 48880,
16238, 48828, 48876,
16232, 48856, 48868,
16224, 48884, 48860,
16216, 48904, 48852,
16208, 48918, 48844,
16198, 48930, 48832,
16188, 48942, 48820,
16176, 48954, 48812,
16164, 48964, 48796,
16152, 48974, 48784
};

uint16_t sincos_bf16_poly2_coeffs_m5[2 * 3 * (1 << m5_val)] =  // C2, C1, C0
{
//sinx
16256,     0, 48680,
16256, 48128, 48680,
16256, 48320, 48680,
16256, 48384, 48680,
16256, 48416, 48680,
16254, 48480, 48680,
16254, 48512, 48680,
16254, 48528, 48680,
16254, 48560, 48680,
16252, 48576, 48680,
16252, 48592, 48680,
16250, 48608, 48680,
16250, 48640, 48672,
16250, 48648, 48672,
16248, 48656, 48672,
16246, 48672, 48672,
16246, 48680, 48672,
16244, 48688, 48664,
16242, 48696, 48664,
16242, 48704, 48664,
16240, 48720, 48664,
16238, 48728, 48664,
16236, 48736, 48656,
16234, 48744, 48656,
16232, 48752, 48656,
16230, 48760, 48648,
16228, 48768, 48648,
16226, 48776, 48648,
16224, 48780, 48640,
16222, 48784, 48640,
16220, 48788, 48640,
16218, 48792, 48624,
//cos
16256,     0, 48896,
16256, 48384, 48896,
16256, 48512, 48896,
16254, 48576, 48896,
16254, 48640, 48892,
16252, 48672, 48892,
16252, 48704, 48892,
16250, 48736, 48888,
16248, 48768, 48888,
16246, 48784, 48884,
16244, 48796, 48884,
16242, 48812, 48880,
16238, 48828, 48876,
16236, 48844, 48872,
16232, 48856, 48872,
16228, 48872, 48868,
16224, 48884, 48864,
16220, 48898, 48860,
16216, 48904, 48856,
16212, 48912, 48848,
16208, 48918, 48844,
16202, 48924, 48840,
16198, 48930, 48836,
16192, 48936, 48832,
16188, 48942, 48824,
16182, 48948, 48820,
16176, 48954, 48812,
16170, 48960, 48808,
16164, 48964, 48800,
16158, 48970, 48796,
16152, 48974, 48788,
16144, 48980, 48780
};

uint16_t sincos_bf16_poly2_coeffs_m6[2 * 3 * (1 << m6_val)] =  // C2, C1, C0
{
//sinx
16256,     0, 48680,
16256, 48128, 48680,
16256, 48128, 48680,
16256, 48256, 48680,
16256, 48320, 48680,
16256, 48320, 48680,
16256, 48384, 48680,
16256, 48416, 48680,
16256, 48416, 48680,
16256, 48448, 48680,
16254, 48480, 48680,
16254, 48480, 48680,
16254, 48512, 48680,
16254, 48528, 48680,
16254, 48528, 48680,
16254, 48544, 48680,
16254, 48560, 48680,
16254, 48560, 48680,
16252, 48576, 48680,
16252, 48592, 48680,
16252, 48592, 48680,
16252, 48608, 48680,
16250, 48608, 48680,
16250, 48624, 48672,
16250, 48640, 48672,
16250, 48640, 48672,
16250, 48648, 48672,
16248, 48656, 48672,
16248, 48656, 48672,
16248, 48664, 48672,
16246, 48672, 48672,
16246, 48672, 48672,
16246, 48680, 48672,
16244, 48680, 48672,
16244, 48688, 48672,
16244, 48696, 48664,
16242, 48696, 48664,
16242, 48704, 48664,
16242, 48704, 48664,
16240, 48712, 48664,
16240, 48720, 48664,
16238, 48720, 48664,
16238, 48728, 48664,
16238, 48728, 48656,
16236, 48736, 48656,
16236, 48744, 48656,
16234, 48744, 48656,
16234, 48752, 48656,
16232, 48752, 48656,
16232, 48760, 48656,
16230, 48760, 48648,
16230, 48768, 48648,
16228, 48768, 48648,
16228, 48772, 48648,
16226, 48776, 48648,
16226, 48776, 48648,
16224, 48780, 48648,
16224, 48780, 48640,
16222, 48784, 48640,
16222, 48784, 48640,
16220, 48788, 48640,
16218, 48788, 48640,
16218, 48792, 48640,
16216, 48792, 48624,
//cos
16256,     0, 48896,
16256, 48256, 48896,
16256, 48384, 48896,
16256, 48448, 48896,
16256, 48512, 48896,
16256, 48544, 48896,
16254, 48576, 48896,
16254, 48608, 48896,
16254, 48640, 48892,
16254, 48656, 48892,
16252, 48672, 48892,
16252, 48688, 48892,
16252, 48704, 48892,
16250, 48720, 48892,
16250, 48736, 48888,
16250, 48752, 48888,
16248, 48768, 48888,
16248, 48776, 48888,
16246, 48784, 48884,
16244, 48788, 48884,
16244, 48796, 48884,
16242, 48804, 48880,
16242, 48812, 48880,
16240, 48820, 48880,
16238, 48828, 48876,
16236, 48836, 48876,
16236, 48844, 48876,
16234, 48848, 48872,
16232, 48856, 48872,
16230, 48864, 48868,
16228, 48872, 48868,
16226, 48880, 48864,
16224, 48884, 48864,
16222, 48892, 48860,
16220, 48898, 48860,
16218, 48902, 48856,
16216, 48904, 48856,
16214, 48908, 48852,
16212, 48912, 48852,
16210, 48914, 48848,
16208, 48918, 48848,
16206, 48922, 48844,
16202, 48924, 48840,
16200, 48928, 48840,
16198, 48930, 48836,
16196, 48934, 48832,
16192, 48936, 48832,
16190, 48940, 48828,
16188, 48942, 48824,
16184, 48946, 48824,
16182, 48948, 48820,
16178, 48952, 48816,
16176, 48954, 48816,
16174, 48956, 48812,
16170, 48960, 48808,
16168, 48962, 48804,
16164, 48964, 48804,
16162, 48968, 48800,
16158, 48970, 48796,
16154, 48972, 48792,
16152, 48974, 48788,
16148, 48976, 48788,
16144, 48978, 48784,
16142, 48982, 48780
};

// sincos
// sinx_default_coeffs_m4_01 followed by
// cos_default_coeffs_m4_01
uint16_t sincos_coeffs_bf16[3 * 32] =
{
    0x3c00u,  0x0000u,  0xb158u,
    0x3bfeu,  0xa540u,  0xb1f8u,
    0x3bfau,  0xa960u,  0xb088u,
    0x3bf4u,  0xac00u,  0xb0d8u,
    0x3beau,  0xad50u,  0xb0d8u,
    0x3bdeu,  0xaea0u,  0xb070u,
    0x3bd0u,  0xafe0u,  0xb190u,
    0x3bc0u,  0xb098u,  0xb008u,
    0x3bacu,  0xb130u,  0xb1d8u,
    0x3b96u,  0xb1d0u,  0xb0d8u,
    0x3b7eu,  0xb268u,  0xb100u,
    0x3b62u,  0xb300u,  0xb028u,
    0x3b46u,  0xb390u,  0xb048u,
    0x3b26u,  0xb410u,  0xae80u,
    0x3b04u,  0xb450u,  0xb108u,
    0x3ae0u,  0xb494u,  0xaf10u,
    0x3c00u,  0x0000u,  0xb800u,
    0x3bfcu,  0xac00u,  0xb7f4u,
    0x3bf0u,  0xb000u,  0xb7a0u,
    0x3bdcu,  0xb1f8u,  0xb7c4u,
    0x3bc0u,  0xb3e8u,  0xb810u,
    0x3b9cu,  0xb4ecu,  0xb778u,
    0x3b72u,  0xb5dcu,  0xb790u,
    0x3b40u,  0xb6c8u,  0xb728u,
    0x3b06u,  0xb7acu,  0xb704u,
    0x3ac4u,  0xb844u,  0xb6f0u,
    0x3a7cu,  0xb8aeu,  0xb6b4u,
    0x3a2eu,  0xb914u,  0xb61cu,
    0x39dau,  0xb974u,  0xb5f0u,
    0x3980u,  0xb9d0u,  0xb508u,
    0x3920u,  0xba24u,  0xb530u,
    0x38bcu,  0xba74u,  0xb444u
};


////// FP16 //////


// ==========  GL log2 poly2 approximation  (m = 3) ===================

// log2 zero_exp followed by non_zero exp

uint16_t log2_coeffs_fp16[3 * 16] =
{
    0x3dc5u,  0xb9c0u,  0x36bcu,
    0x3d70u,  0xb8eau,  0x353cu,
    0x3d27u,  0xb844u,  0x3428u,
    0x3ce7u,  0xb77cu,  0x32c0u,
    0x3caeu,  0xb6a4u,  0x3198u,
    0x3c7cu,  0xb5f4u,  0x30b0u,
    0x3c4eu,  0xb560u,  0x2ff0u,
    0x3c25u,  0xb4e0u,  0x2ec0u,
    0x0000u,  0x3dc2u,  0xb920u,
    0x3170u,  0x3d1fu,  0xb81au,
    0x3528u,  0x3c9cu,  0xb6b4u,
    0x3758u,  0x3c31u,  0xb598u,
    0x38aeu,  0x3bb0u,  0xb4bcu,
    0x399au,  0x3b18u,  0xb410u,
    0x3a76u,  0x3a96u,  0xb308u,
    0x3b42u,  0x3a26u,  0xb228u
};

// ==========  GL pow2 poly2 approximation  (m = 2) ===================

uint16_t pow2_coeffs_fp16[3 * 4] =
{
    0x3c00u,  0x3988u,  0x3430u,
    0x3cc2u,  0x3a94u,  0x34fcu,
    0x3da8u,  0x3bd2u,  0x35f0u,
    0x3ebau,  0x3ca6u,  0x3710u
};

// ==========  GL recip poly2 approximations  (m = 3) ===================

uint16_t recip_coeffs_fp16[8 * 3] =
{
    0x3c00u,  0xbbf2u,  0x3ab2u,
    0x3b1cu,  0xba48u,  0x38ccu,
    0x3a66u,  0xb918u,  0x3718u,
    0x39d2u,  0xb836u,  0x3568u,
    0x3956u,  0xb718u,  0x3434u,
    0x38ecu,  0xb60cu,  0x32a8u,
    0x3892u,  0xb538u,  0x3160u,
    0x3844u,  0xb48cu,  0x3068u
};

// ==========  GL rsqrt poly2 approximations  (m = 3) ===================
// rsqrt_default_coeffs_m3_12 followed by rsqrt_default_coeffs_m3_24
uint16_t rsqrt_coeffs_fp16[3 * 16] =
{
    0x3c00u,  0xb7f8u,  0x352cu,
    0x3b8au,  0xb6acu,  0x33d8u,
    0x3b28u,  0xb5b4u,  0x3218u,
    0x3ad2u,  0xb4f4u,  0x30d8u,
    0x3a88u,  0xb458u,  0x2fe0u,
    0x3a46u,  0xb3b8u,  0x2e80u,
    0x3a0cu,  0xb2e8u,  0x2d70u,
    0x39d8u,  0xb238u,  0x2ca0u,
    0x39a8u,  0xb1a0u,  0x2b60u,
    0x3956u,  0xb0b8u,  0x2980u,
    0x3910u,  0xb008u,  0x2840u,
    0x38d2u,  0xaf00u,  0x26c0u,
    0x389eu,  0xae20u,  0x2580u,
    0x3870u,  0xad70u,  0x2480u,
    0x3846u,  0xace0u,  0x2380u,
    0x3822u,  0xac60u,  0x2280u
};

// ==========  GL sqrt poly2 approximations  (m = 2) ===================
// sqrt_default_coeffs_m2_12 followed by sqrt_default_coeffs_m2_24
uint16_t sqrt_coeffs_fp16[3 * 8] =
{
    0x3c00u,  0x37f8u,  0xaec0u,
    0x3c79u,  0x3724u,  0xad00u,
    0x3ce6u,  0x3684u,  0xabc0u,
    0x3d4bu,  0x360cu,  0xaa40u,
    0x3da8u,  0x35a4u,  0xa8c0u,
    0x3e53u,  0x350cu,  0xa700u,
    0x3eeeu,  0x349cu,  0xa580u,
    0x3f7cu,  0x3444u,  0xa480u
};

// tanh
// tanhx_default_coeffs_m4_01 followed by
// tanh_default_coeffs_m4_12 followed by
// tanh_default_coeffs_m4_24 followed by
// tanh_default_coeffs_m4_48

uint16_t tanh_coeffs_fp16[3 * 64] =
{
    0x3c00u,  0x0000u,  0xb550u,
    0x3bfeu,  0xa960u,  0xb538u,
    0x3bf6u,  0xad40u,  0xb508u,
    0x3be8u,  0xafd0u,  0xb4c0u,
    0x3bd6u,  0xb118u,  0xb464u,
    0x3bc0u,  0xb230u,  0xb3f8u,
    0x3ba6u,  0xb330u,  0xb310u,
    0x3b86u,  0xb408u,  0xb220u,
    0x3b64u,  0xb46cu,  0xb120u,
    0x3b40u,  0xb4bcu,  0xb028u,
    0x3b1au,  0xb500u,  0xae70u,
    0x3af0u,  0xb534u,  0xacb0u,
    0x3ac6u,  0xb558u,  0xaa20u,
    0x3a9cu,  0xb570u,  0xa640u,
    0x3a70u,  0xb57cu,  0x9c00u,
    0x3a44u,  0xb580u,  0x2300u,
    0x3a18u,  0x36b8u,  0xb4f4u,
    0x3a4au,  0x3618u,  0xb4a4u,
    0x3a7au,  0x3584u,  0xb44cu,
    0x3aa4u,  0x34fcu,  0xb3f0u,
    0x3acau,  0x347cu,  0xb348u,
    0x3aecu,  0x3408u,  0xb2a8u,
    0x3b0au,  0x3338u,  0xb210u,
    0x3b26u,  0x3278u,  0xb180u,
    0x3b3eu,  0x31c8u,  0xb0f8u,
    0x3b54u,  0x3128u,  0xb080u,
    0x3b68u,  0x3098u,  0xb008u,
    0x3b78u,  0x3018u,  0xaf40u,
    0x3b88u,  0x2f40u,  0xae80u,
    0x3b96u,  0x2e70u,  0xadd0u,
    0x3ba2u,  0x2dc0u,  0xad30u,
    0x3bacu,  0x2d10u,  0xaca0u,
    0x3bb6u,  0x2c80u,  0xabc0u,
    0x3bc6u,  0x2b20u,  0xaa20u,
    0x3bd4u,  0x2980u,  0xa8e0u,
    0x3bdcu,  0x2860u,  0xa780u,
    0x3be4u,  0x26c0u,  0xa600u,
    0x3beau,  0x2540u,  0xa4c0u,
    0x3bf0u,  0x2440u,  0xa380u,
    0x3bf4u,  0x2280u,  0xa180u,
    0x3bf6u,  0x2100u,  0xa080u,
    0x3bf8u,  0x2000u,  0x9f00u,
    0x3bfau,  0x1e00u,  0x9d00u,
    0x3bfcu,  0x1d00u,  0x9c00u,
    0x3bfcu,  0x1c00u,  0x9a00u,
    0x3bfeu,  0x1a00u,  0x9a00u,
    0x3bfeu,  0x1800u,  0x9800u,
    0x3bfeu,  0x1800u,  0x9800u,
    0x3bfeu,  0x1400u,  0x9400u,
    0x3c00u,  0x1400u,  0x9400u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u,
    0x3c00u,  0x0000u,  0x0000u
};

// sincos
// sinx_default_coeffs_m4_01 followed by
// cos_default_coeffs_m4_01
uint16_t sincos_coeffs_fp16[3 * 32] =
{
    0x3c00u,  0x0000u,  0xb158u,
    0x3bfeu,  0xa540u,  0xb1f8u,
    0x3bfau,  0xa960u,  0xb088u,
    0x3bf4u,  0xac00u,  0xb0d8u,
    0x3beau,  0xad50u,  0xb0d8u,
    0x3bdeu,  0xaea0u,  0xb070u,
    0x3bd0u,  0xafe0u,  0xb190u,
    0x3bc0u,  0xb098u,  0xb008u,
    0x3bacu,  0xb130u,  0xb1d8u,
    0x3b96u,  0xb1d0u,  0xb0d8u,
    0x3b7eu,  0xb268u,  0xb100u,
    0x3b62u,  0xb300u,  0xb028u,
    0x3b46u,  0xb390u,  0xb048u,
    0x3b26u,  0xb410u,  0xae80u,
    0x3b04u,  0xb450u,  0xb108u,
    0x3ae0u,  0xb494u,  0xaf10u,
    0x3c00u,  0x0000u,  0xb800u,
    0x3bfcu,  0xac00u,  0xb7f4u,
    0x3bf0u,  0xb000u,  0xb7a0u,
    0x3bdcu,  0xb1f8u,  0xb7c4u,
    0x3bc0u,  0xb3e8u,  0xb810u,
    0x3b9cu,  0xb4ecu,  0xb778u,
    0x3b72u,  0xb5dcu,  0xb790u,
    0x3b40u,  0xb6c8u,  0xb728u,
    0x3b06u,  0xb7acu,  0xb704u,
    0x3ac4u,  0xb844u,  0xb6f0u,
    0x3a7cu,  0xb8aeu,  0xb6b4u,
    0x3a2eu,  0xb914u,  0xb61cu,
    0x39dau,  0xb974u,  0xb5f0u,
    0x3980u,  0xb9d0u,  0xb508u,
    0x3920u,  0xba24u,  0xb530u,
    0x38bcu,  0xba74u,  0xb444u
};

// Tanh int16_t for 0-8: 64 intervals
uint16_t tanh_coeffs_int16_0_8[3 * 64] = {
    0x0u,    0x4030u, 0xf022u, 0xfeau,  0x3f2du, 0xd254u, 0x1f59u, 0x3c4au, 0xb9ceu, 0x2ddeu, 0x37ddu, 0xa8b2u, 0x3b27u,
    0x325eu, 0x9f9au, 0x46fdu, 0x2c50u, 0x9dc6u, 0x514du, 0x2626u, 0xa1aau, 0x5a1au, 0x203du, 0xa966u, 0x617cu, 0x1ad2u,
    0xb340u, 0x6797u, 0x1605u, 0xbdd6u, 0x6c95u, 0x11e3u, 0xc832u, 0x709eu, 0xe68u,  0xd1bcu, 0x73dcu, 0xb85u,  0xda28u,
    0x7672u, 0x929u,  0xe160u, 0x787fu, 0x741u,  0xe76eu, 0x7a1eu, 0x5b9u,  0xec68u, 0x7b65u, 0x480u,  0xf076u, 0x7c66u,
    0x389u,  0xf3bau, 0x7d30u, 0x2c5u,  0xf656u, 0x7dceu, 0x22bu,  0xf868u, 0x7e49u, 0x1b2u,  0xfa0cu, 0x7eaau, 0x153u,
    0xfb56u, 0x7ef5u, 0x109u,  0xfc5au, 0x7f30u, 0xceu,   0xfd26u, 0x7f5eu, 0xa1u,   0xfdc6u, 0x7f82u, 0x7eu,   0xfe44u,
    0x7f9eu, 0x62u,   0xfea6u, 0x7fb3u, 0x4cu,   0xfef2u, 0x7fc4u, 0x3cu,   0xff2eu, 0x7fd1u, 0x2eu,   0xff5cu, 0x7fdcu,
    0x24u,   0xff80u, 0x7fe4u, 0x1cu,   0xff9cu, 0x7feau, 0x16u,   0xffb2u, 0x7fefu, 0x11u,   0xffc4u, 0x7ff3u, 0xeu,
    0xffd0u, 0x7ff6u, 0xbu,    0xffdcu, 0x7ff8u, 0x8u,    0xffe4u, 0x7ffau, 0x7u,    0xffeau, 0x7ffbu, 0x5u,    0xffeeu,
    0x7ffcu, 0x4u,    0xfff2u, 0x7ffdu, 0x3u,    0xfff6u, 0x7ffeu, 0x3u,    0xfff8u, 0x7ffeu, 0x2u,    0xfffau, 0x7fffu,
    0x2u,    0xfffcu, 0x7fffu, 0x1u,    0xfffcu, 0x7fffu, 0x1u,    0xfffcu, 0x7fffu, 0x1u,    0xfffeu, 0x7fffu, 0x1u,
    0xfffeu, 0x7fffu, 0x1u,    0xfffeu, 0x7fffu, 0x1u,    0xfffeu, 0x7fffu, 0x0u,    0x0u,    0x7fffu, 0x0u,    0x0u,
    0x7fffu, 0x0u,    0x0u,    0x7fffu, 0x0u,    0x0u,    0x7fffu, 0x0u,    0x0u,    0x7fffu, 0x0u,    0x0u,    0x7fffu,
    0x0u,    0x0u,    0x7fffu, 0x0u,    0x0u,    0x7fffu, 0x0u,    0x0u,    0x7fffu, 0x0u,    0x0u,    0x7fffu, 0x0u,
    0x0u,    0x7fffu, 0x0u,    0x0u,    0x7fffu, 0x0u,    0x0u,    0x7fffu, 0x0u,    0x0u,
};

//int32_t qfC0_sigmoid = -15;
//int32_t qfC1_sigmoid = -16;
//int32_t qfC2_sigmoid = -19;
// Sigmoid int16_t for 0-8: 64 intervals
uint16_t sigmoid_coeffs_int16_0_8[3 * 64] =
{
    0x4000u, 0x400cu, 0xf800u,
    0x43ffu, 0x3fccu, 0xe850u,
    0x47f5u, 0x3f0eu, 0xd950u,
    0x4bdcu, 0x3dd8u, 0xcb80u,
    0x4fadu, 0x3c32u, 0xbf30u,
    0x5360u, 0x3a2au, 0xb4a0u,
    0x56efu, 0x37ceu, 0xac10u,
    0x5a57u, 0x352cu, 0xa580u,
    0x5d93u, 0x3258u, 0xa100u,
    0x60a1u, 0x2f5eu, 0x9e60u,
    0x637fu, 0x2c50u, 0x9d80u,
    0x662bu, 0x293cu, 0x9e30u,
    0x68a6u, 0x262cu, 0xa030u,
    0x6af1u, 0x232eu, 0xa340u,
    0x6d0du, 0x2046u, 0xa720u,
    0x6efbu, 0x1d80u, 0xabb0u,
    0x70beu, 0x1adeu, 0xb0a0u,
    0x7258u, 0x1862u, 0xb5e0u,
    0x73ccu, 0x1612u, 0xbb30u,
    0x751bu, 0x13eau, 0xc080u,
    0x764au, 0x11eeu, 0xc5b0u,
    0x775bu, 0x101cu, 0xcab0u,
    0x784fu, 0xe72u, 0xcf70u,
    0x792au, 0xceeu, 0xd400u,
    0x79eeu, 0xb8eu, 0xd830u,
    0x7a9du, 0xa50u, 0xdc20u,
    0x7b39u, 0x930u, 0xdfb0u,
    0x7bc4u, 0x82eu, 0xe300u,
    0x7c40u, 0x746u, 0xe610u,
    0x7cadu, 0x678u, 0xe8d0u,
    0x7d0fu, 0x5beu, 0xeb40u,
    0x7d66u, 0x518u, 0xed80u,
    0x7db3u, 0x484u, 0xef90u,
    0x7df7u, 0x400u, 0xf160u,
    0x7e33u, 0x38cu, 0xf300u,
    0x7e69u, 0x324u, 0xf470u,
    0x7e98u, 0x2c8u, 0xf5c0u,
    0x7ec2u, 0x276u, 0xf6f0u,
    0x7ee7u, 0x22cu, 0xf7f0u,
    0x7f08u, 0x1ecu, 0xf8e0u,
    0x7f25u, 0x1b4u, 0xf9b0u,
    0x7f3eu, 0x180u, 0xfa60u,
    0x7f55u, 0x154u, 0xfb10u,
    0x7f69u, 0x12cu, 0xfba0u,
    0x7f7bu, 0x10au, 0xfc20u,
    0x7f8au, 0xeau, 0xfc90u,
    0x7f98u, 0xceu, 0xfd00u,
    0x7fa4u, 0xb6u, 0xfd50u,
    0x7fafu, 0xa2u, 0xfda0u,
    0x7fb8u, 0x8eu, 0xfdf0u,
    0x7fc1u, 0x7eu, 0xfe20u,
    0x7fc8u, 0x70u, 0xfe60u,
    0x7fcfu, 0x62u, 0xfe90u,
    0x7fd5u, 0x56u, 0xfec0u,
    0x7fdau, 0x4cu, 0xfee0u,
    0x7fdeu, 0x44u, 0xff00u,
    0x7fe2u, 0x3cu, 0xff20u,
    0x7fe6u, 0x34u, 0xff40u,
    0x7fe9u, 0x2eu, 0xff50u,
    0x7febu, 0x28u, 0xff60u,
    0x7feeu, 0x24u, 0xff80u,
    0x7ff0u, 0x20u, 0xff80u,
    0x7ff2u, 0x1cu, 0xff90u,
    0x7ff4u, 0x18u, 0xffa0u
};

//int32_t qfC0_exp = -15;
//int32_t qfC1_exp = -15;
//int32_t qfC2_exp = -16;
// int expX = -11
// Exp(-x) int16_t for x in 0-16 (expX = -11): 64 intervals
uint16_t expminusx_coeffs_int16_0_16[3 * 64] = {
    0x7ffeu, 0x80adu, 0x712cu,
    0x63aeu, 0x9cd7u, 0x5823u,
    0x4da1u, 0xb2c6u, 0x44a9u,
    0x3c75u, 0xc3dbu, 0x357cu,
    0x2f16u, 0xd129u, 0x29a1u,
    0x24abu, 0xdb85u, 0x2079u,
    0x1c8fu, 0xe397u, 0x1943u,
    0x163eu, 0xe9e0u, 0x13a5u,
    0x1152u, 0xeec5u, 0xf49u,
    0xd7eu, 0xf295u, 0xbdeu,
    0xa81u, 0xf58cu, 0x958u,
    0x82fu, 0xf7dcu, 0x745u,
    0x65fu, 0xf9a9u, 0x5a9u,
    0x4f6u, 0xfb10u, 0x468u,
    0x3ddu, 0xfc28u, 0x362u,
    0x302u, 0xfd01u, 0x2b7u,
    0x258u, 0xfdabu, 0x213u,
    0x1d3u, 0xfe2fu, 0x19fu,
    0x16cu, 0xfe96u, 0x13fu,
    0x11bu, 0xfee6u, 0xfbu,
    0xddu, 0xff24u, 0xcfu,
    0xacu, 0xff55u, 0x97u,
    0x86u, 0xff7bu, 0x70u,
    0x68u, 0xff98u, 0x64u,
    0x51u, 0xffafu, 0x4eu,
    0x3fu, 0xffc1u, 0x3au,
    0x31u, 0xffcfu, 0x2bu,
    0x26u, 0xffdau, 0x1du,
    0x1eu, 0xffe2u, 0x23u,
    0x17u, 0xffe9u, 0x10u,
    0x12u, 0xffeeu, 0xfu,
    0xeu, 0xfff2u, 0xbu,
    0xbu, 0xfff5u, 0xcu,
    0x8u, 0xfff7u, 0x17u,
    0x7u, 0xfff9u, 0x12u,
    0x5u, 0xfffbu, 0xffffu,
    0x4u, 0xfffcu, 0x3u,
    0x3u, 0xfffdu, 0xffffu,
    0x3u, 0xfffeu, 0xfff4u,
    0x2u, 0xfffeu, 0x5u,
    0x2u, 0xffffu, 0xfff2u,
    0x1u, 0xffffu, 0xfffcu,
    0x1u, 0xffffu, 0x4u,
    0x1u, 0xffffu, 0xau,
    0x0u, 0xffffu, 0xfu,
    0x1u, 0x0u, 0xfff3u,
    0x0u, 0x0u, 0xfff6u,
    0x0u, 0x0u, 0xfff8u,
    0x0u, 0x0u, 0xfffau,
    0x0u, 0x0u, 0xfffbu,
    0x0u, 0x0u, 0xfffcu,
    0x0u, 0x0u, 0xfffdu,
    0x0u, 0x0u, 0xfffeu,
    0x0u, 0x0u, 0xfffeu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
};



//int32_t qfC0_recip = -15;
//int32_t qfC1_recip = -15;
//int32_t qfC2_recip = -15;
// int expX = -11
// 1/x int16_t for x in 1-4: 64 intervals
// The intervals go from 0 to 4, but the intervals from 0 to 1 are zeros
uint16_t recip_coeffs_int16_1_4[3 * 64] = {
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x7fffu, 0x8041u, 0x74d9u,
    0x7878u, 0x8ed1u, 0x61edu,
    0x71c7u, 0x9b06u, 0x52e2u,
    0x6bcau, 0xa55cu, 0x46c4u,
    0x6666u, 0xae30u, 0x3ce6u,
    0x6186u, 0xb5c9u, 0x34c9u,
    0x5d17u, 0xbc5fu, 0x2e0eu,
    0x590bu, 0xc21eu, 0x286du,
    0x5555u, 0xc72au, 0x23abu,
    0x51ebu, 0xcb9eu, 0x1fa1u,
    0x4ec5u, 0xcf91u, 0x1c2eu,
    0x4bdau, 0xd315u, 0x1939u,
    0x4925u, 0xd63bu, 0x16aau,
    0x469fu, 0xd910u, 0x146du,
    0x4444u, 0xdb9du, 0x127cu,
    0x4210u, 0xddecu, 0x10c7u,
    0x4000u, 0xe004u, 0xf48u,
    0x3e0fu, 0xe1edu, 0xdf2u,
    0x3c3cu, 0xe3abu, 0xcc5u,
    0x3a84u, 0xe543u, 0xbb9u,
    0x38e4u, 0xe6bau, 0xac9u,
    0x375au, 0xe813u, 0x9f1u,
    0x35e5u, 0xe951u, 0x930u,
    0x3483u, 0xea77u, 0x882u,
    0x3333u, 0xeb87u, 0x7e4u,
    0x31f4u, 0xec83u, 0x757u,
    0x30c3u, 0xed6eu, 0x6d5u,
    0x2fa1u, 0xee48u, 0x660u,
    0x2e8cu, 0xef14u, 0x5f4u,
    0x2d83u, 0xefd3u, 0x590u,
    0x2c86u, 0xf085u, 0x536u,
    0x2b93u, 0xf12bu, 0x4e6u,
    0x2aabu, 0xf1c8u, 0x499u,
    0x29ccu, 0xf25bu, 0x453u,
    0x28f6u, 0xf2e5u, 0x413u,
    0x2828u, 0xf368u, 0x3d5u,
    0x2762u, 0xf3e2u, 0x3a1u,
    0x26a4u, 0xf456u, 0x36du,
    0x25edu, 0xf4c4u, 0x33du,
    0x253du, 0xf52bu, 0x312u,
    0x2492u, 0xf58eu, 0x2e7u,
    0x23eeu, 0xf5ebu, 0x2c1u,
    0x234fu, 0xf643u, 0x29eu,
    0x22b6u, 0xf697u, 0x27cu,
    0x2222u, 0xf6e6u, 0x25fu,
    0x2193u, 0xf732u, 0x241u,
    0x2108u, 0xf77au, 0x226u,
    0x2082u, 0xf7bfu, 0x20cu,
};

// uint8 sqrt values scaled by 16 - used for LOOKUP instruction test
uint8_t sqrt_coeffs_int8_scale_1_16[256] = {0, 16, 23, 28, 32, 36, 39, 42, 45, 48, 51, 53, 55, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 78, 80, 82, 83, 85, 86, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 148, 149, 150, 151, 152, 153, 153, 154, 155, 156, 157, 158, 158, 159, 160, 161, 162, 162, 163, 164, 165, 166, 166, 167, 168, 169, 169, 170, 171, 172, 172, 173, 174, 175, 175, 176, 177, 177, 178, 179, 180, 180, 181, 182, 182, 183, 184, 185, 185, 186, 187, 187, 188, 189, 189, 190, 191, 191, 192, 193, 193, 194, 195, 195, 196, 197, 197, 198, 199, 199, 200, 200, 201, 202, 202, 203, 204, 204, 205, 206, 206, 207, 207, 208, 209, 209, 210, 210, 211, 212, 212, 213, 213, 214, 215, 215, 216, 216, 217, 218, 218, 219, 219, 220, 221, 221, 222, 222, 223, 223, 224, 225, 225, 226, 226, 227, 227, 228, 229, 229, 230, 230, 231, 231, 232, 232, 233, 234, 234, 235, 235, 236, 236, 237, 237, 238, 238, 239, 239, 240, 241, 241, 242, 242, 243, 243, 244, 244, 245, 245, 246, 246, 247, 247, 248, 248, 249, 249, 250, 250, 251, 251, 252, 252, 253, 253, 254, 254, 255, 255};
uint16_t square_coeffs_uint16[] = { 0,1,4,9,16,25,36,49,64,81,100,121,144,169,196,225,256,289,324,361,400,441,484,529,576,625,676,729,784,841,900,961,1024,1089,1156,1225,1296,1369,1444,1521,1600,1681,1764,1849,1936,2025,2116,2209,2304,2401,2500,2601,2704,2809,2916,3025,3136,3249,3364,3481,3600,3721,3844,3969,4096,4225,4356,4489,4624,4761,4900,5041,5184,5329,5476,5625,5776,5929,6084,6241,6400,6561,6724,6889,7056,7225,7396,7569,7744,7921,8100,8281,8464,8649,8836,9025,9216,9409,9604,9801,10000,10201,10404,10609,10816,11025,11236,11449,11664,11881,12100,12321,12544,12769,12996,13225,13456,13689,13924,14161,14400,14641,14884,15129,15376,15625,15876,16129,16384,16641,16900,17161,17424,17689,17956,18225,18496,18769,19044,19321,19600,19881,20164,20449,20736,21025,21316,21609,21904,22201,22500,22801,23104,23409,23716,24025,24336,24649,24964,25281,25600,25921,26244,26569,26896,27225,27556,27889,28224,28561,28900,29241,29584,29929,30276,30625,30976,31329,31684,32041,32400,32761,33124,33489,33856,34225,34596,34969,35344,35721,36100,36481,36864,37249,37636,38025,38416,38809,39204,39601,40000,40401,40804,41209,41616,42025,42436,42849,43264,43681,44100,44521,44944,45369,45796,46225,46656,47089,47524,47961,48400,48841,49284,49729,50176,50625,51076,51529,51984,52441,52900,53361,53824,54289,54756,55225,55696,56169,56644,57121,57600,58081,58564,59049,59536,60025,60516,61009,61504,62001,62500,63001,63504,64009,64516,65025 };
uint32_t power4_coeffs_uint32[] = { 0,1,16,81,256,625,1296,2401,4096,6561,10000,14641,20736,28561,38416,50625,65536,83521,104976,130321,160000,194481,234256,279841,331776,390625,456976,531441,614656,707281,810000,923521,1048576,1185921,1336336,1500625,1679616,1874161,2085136,2313441,2560000,2825761,3111696,3418801,3748096,4100625,4477456,4879681,5308416,5764801,6250000,6765201,7311616,7890481,8503056,9150625,9834496,10556001,11316496,12117361,12960000,13845841,14776336,15752961,16777216,17850625,18974736,20151121,21381376,22667121,24010000,25411681,26873856,28398241,29986576,31640625,33362176,35153041,37015056,38950081,40960000,43046721,45212176,47458321,49787136,52200625,54700816,57289761,59969536,62742241,65610000,68574961,71639296,74805201,78074896,81450625,84934656,88529281,92236816,96059601,100000000,104060401,108243216,112550881,116985856,121550625,126247696,131079601,136048896,141158161,146410000,151807041,157351936,163047361,168896016,174900625,181063936,187388721,193877776,200533921,207360000,214358881,221533456,228886641,236421376,244140625,252047376,260144641,268435456,276922881,285610000,294499921,303595776,312900721,322417936,332150625,342102016,352275361,362673936,373301041,384160000,395254161,406586896,418161601,429981696,442050625,454371856,466948881,479785216,492884401,506250000,519885601,533794816,547981281,562448656,577200625,592240896,607573201,623201296,639128961,655360000,671898241,688747536,705911761,723394816,741200625,759333136,777796321,796594176,815730721,835210000,855036081,875213056,895745041,916636176,937890625,959512576,981506241,1003875856,1026625681,1049760000,1073283121,1097199376,1121513121,1146228736,1171350625,1196883216,1222830961,1249198336,1275989841,1303210000,1330863361,1358954496,1387488001,1416468496,1445900625,1475789056,1506138481,1536953616,1568239201,1600000000,1632240801,1664966416,1698181681,1731891456,1766100625,1800814096,1836036801,1871773696,1908029761,1944810000,1982119441,2019963136,2058346161,2097273616,2136750625,2176782336,2217373921,2258530576,2300257521,2342560000,2385443281,2428912656,2472973441,2517630976,2562890625,2608757776,2655237841,2702336256,2750058481,2798410000,2847396321,2897022976,2947295521,2998219536,3049800625,3102044416,3154956561,3208542736,3262808641,3317760000,3373402561,3429742096,3486784401,3544535296,3603000625,3662186256,3722098081,3782742016,3844124001,3906250000,3969126001,4032758016,4097152081,4162314256,4228250625 };

// C0, C1, C2
// expC0 = -7, expC1 = -6, expC2 = -8
int8_t tanh_coeffs_int8[] = {
    0    , 64,  -16,
    16    , 63,  -46,
    31    , 60,  -70,
    46    , 56,  -87,
    59    , 50,  -96,
    71    , 44,  -98,
    81    , 38,  -94,
    90    , 32,  -87,
    97    , 27,  -77,
    104    , 22,  -66,
    109    , 18,  -56,
    113    , 14,  -46,
    116    , 12,  -38,
    118    , 9 , -31 ,
    120    , 7 , -25 ,
    122    , 6 , -20 ,
    123    , 5 , -16 ,
    124    , 4 , -12 ,
    125    , 3 , -10 ,
    126    , 2 , -8  ,
    126    , 2 , -6  ,
    127    , 1 , -5  ,
    127    , 1 , -4  ,
    127    , 1 , -3  ,
    127    , 1 , -2  ,
    127    , 0 , -2  ,
    127    , 0 , -1  ,
    127    , 0 , -1  ,
    127    , 0 , -1  ,
    127    , 0 , -1  ,
    127    , 0 , -1  ,
    127    , 0    , 0
};

int8_t tanh_coeffs_int8_linear[] = {
// C0 (not used), C1 (used as C0), C2 (used as C1)
// Exponents:     -7,              -7
    0,    0,    127,
    0,    16,    123,
    0,    31,    120,
    0,    46,    106,
    0,    59,    95 ,
    0,    71,    82 ,
    0,    81,    72 ,
    0,    90,    59 ,
    0,    97,    59 ,
    0,    104, 39,
    0,    109, 32,
    0,    113, 23,
    0,    116, 21,
    0,    118, 24,
    0,    120, 13,
    0,    122, 10,
    0,    123, 8 ,
    0,    124, 8 ,
    0,    125, 8 ,
    0,    126, 4 ,
    0,    126, 3 ,
    0,    127, 2 ,
    0,    127, 2 ,
    0,    127, 1 ,
    0,    127, 1 ,
    0,    127, 1 ,
    0,    127, 1 ,
    0,    127, 1 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0 ,
    0,    127, 0
};

int8_t sigmoid_coeffs_0_8_linear[] =
{
    // C0 (not used), C1 (used as C0), C2 (used as C1)
   //   Exponents:    -7,             -9
    0, 64,    127,
    0, 68,    127,
    0, 72,    125,
    0, 76,    122,
    0, 80,    100,
    0, 83,    114,
    0, 87,    109,
    0, 90,    107,
    0, 94,    95 ,
    0, 97,    92 ,
    0, 99,    108,
    0, 102,    79 ,
    0, 105,    63 ,
    0, 107,    67 ,
    0, 109,    64 ,
    0, 111,    56 ,
    0, 113,    51 ,
    0, 114,    46 ,
    0, 116,    31 ,
    0, 117,    38 ,
    0, 118,    34 ,
    0, 119,    32 ,
    0, 120,    32 ,
    0, 121,    32 ,
    0, 122,    22 ,
    0, 123,    20 ,
    0, 123,    32 ,
    0, 124,    15 ,
    0, 124,    14 ,
    0, 125,    12 ,
    0, 125,    11 ,
    0, 125,    32 ,
    0, 126,    9  ,
    0, 126,    8  ,
    0, 126,    7  ,
    0, 126,    32 ,
    0, 127,    5  ,
    0, 127,    5  ,
    0, 127,    4  ,
    0, 127,    4  ,
    0, 127,    3  ,
    0, 127,    3  ,
    0, 127,    3  ,
    0, 127,    2  ,
    0, 127,    2  ,
    0, 127,    2  ,
    0, 127,    2  ,
    0, 127,    1  ,
    0, 127,    1  ,
    0, 127,    1  ,
    0, 127,    1  ,
    0, 127,    1  ,
    0, 127,    1  ,
    0, 127,    1  ,
    0, 127,    1  ,
    0, 127,    0  ,
    0, 127,    0  ,
    0, 127,    0  ,
    0, 127,    0  ,
    0, 127,    0  ,
    0, 127,    0  ,
    0, 127,    0  ,
    0, 127,    0  ,
    0, 127,    0  ,
};

int8_t exp_minusx_0_8_linear[] = {
    // C0 (not used), C1 (used as C0), C2 (used as C1)
    // Exponents:     -7,              -7
    0, 127, -110,
    0, 113, -106,
    0, 100, -94    ,
    0, 88 , -83    ,
    0, 78 , -73    ,
    0, 69 , -73    ,
    0, 60 , -55    ,
    0, 53 , -50    ,
    0, 47 , -44    ,
    0, 42 , -40    ,
    0, 37 , -40    ,
    0, 32 , -30    ,
    0, 29 , -27    ,
    0, 25 , -23    ,
    0, 22 , -21    ,
    0, 20 , -24    ,
    0, 17 , -16    ,
    0, 15 , -14    ,
    0, 13 , -7    ,
    0, 12 , -11    ,
    0, 11 , -10    ,
    0, 9 ,   -7    ,
    0, 8 ,   -7    ,
    0, 7 ,   -7    ,
    0, 6 ,   -7    ,
    0, 6 ,   -8    ,
    0, 5 ,   -5    ,
    0, 4 ,   -4    ,
    0, 4 ,   -4    ,
    0, 3 ,   -3    ,
    0, 3 ,   -3    ,
    0, 3 ,   -8    ,
    0, 2 ,   -2    ,
    0, 2 ,   -2    ,
    0, 2 ,   -2    ,
    0, 2 ,   -2    ,
    0, 1 ,   -1    ,
    0, 1 ,   -1    ,
    0, 1 ,   -1    ,
    0, 1 ,   -1    ,
    0, 1 ,   -1    ,
    0, 1 ,   -1    ,
    0, 1 ,   -1    ,
    0, 1 ,   -1    ,
    0, 1 ,   -8    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0    ,
    0, 0,     0
};

uint16_t expminusx_coeffs_int16_0_16_128_entries[3 * 64 * 2] = {
    0x7ffeu, 0x80adu, 0x712cu,
    0x63aeu, 0x9cd7u, 0x5823u,
    0x4da1u, 0xb2c6u, 0x44a9u,
    0x3c75u, 0xc3dbu, 0x357cu,
    0x2f16u, 0xd129u, 0x29a1u,
    0x24abu, 0xdb85u, 0x2079u,
    0x1c8fu, 0xe397u, 0x1943u,
    0x163eu, 0xe9e0u, 0x13a5u,
    0x1152u, 0xeec5u, 0xf49u,
    0xd7eu, 0xf295u, 0xbdeu,
    0xa81u, 0xf58cu, 0x958u,
    0x82fu, 0xf7dcu, 0x745u,
    0x65fu, 0xf9a9u, 0x5a9u,
    0x4f6u, 0xfb10u, 0x468u,
    0x3ddu, 0xfc28u, 0x362u,
    0x302u, 0xfd01u, 0x2b7u,
    0x258u, 0xfdabu, 0x213u,
    0x1d3u, 0xfe2fu, 0x19fu,
    0x16cu, 0xfe96u, 0x13fu,
    0x11bu, 0xfee6u, 0xfbu,
    0xddu, 0xff24u, 0xcfu,
    0xacu, 0xff55u, 0x97u,
    0x86u, 0xff7bu, 0x70u,
    0x68u, 0xff98u, 0x64u,
    0x51u, 0xffafu, 0x4eu,
    0x3fu, 0xffc1u, 0x3au,
    0x31u, 0xffcfu, 0x2bu,
    0x26u, 0xffdau, 0x1du,
    0x1eu, 0xffe2u, 0x23u,
    0x17u, 0xffe9u, 0x10u,
    0x12u, 0xffeeu, 0xfu,
    0xeu, 0xfff2u, 0xbu,
    0xbu, 0xfff5u, 0xcu,
    0x8u, 0xfff7u, 0x17u,
    0x7u, 0xfff9u, 0x12u,
    0x5u, 0xfffbu, 0xffffu,
    0x4u, 0xfffcu, 0x3u,
    0x3u, 0xfffdu, 0xffffu,
    0x3u, 0xfffeu, 0xfff4u,
    0x2u, 0xfffeu, 0x5u,
    0x2u, 0xffffu, 0xfff2u,
    0x1u, 0xffffu, 0xfffcu,
    0x1u, 0xffffu, 0x4u,
    0x1u, 0xffffu, 0xau,
    0x0u, 0xffffu, 0xfu,
    0x1u, 0x0u, 0xfff3u,
    0x0u, 0x0u, 0xfff6u,
    0x0u, 0x0u, 0xfff8u,
    0x0u, 0x0u, 0xfffau,
    0x0u, 0x0u, 0xfffbu,
    0x0u, 0x0u, 0xfffcu,
    0x0u, 0x0u, 0xfffdu,
    0x0u, 0x0u, 0xfffeu,
    0x0u, 0x0u, 0xfffeu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0xffffu,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
// zero pad
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u,
    0x0u, 0x0u, 0x0u
};

int16_t gelu_minus_relu_coeffs_int16_0_4[3 * 64] = {
    0,      -32766, 26050, -3892,  -29500, 25862, -7376,  -26260, 25498, -10460, -23070, 24892, -13148, -19956, 24172,
    -15456, -16938, 23160, -17392, -14040, 22056, -18976, -11280, 20802, -20224, -8676,  19496, -21156, -6240,  18014,
    -21796, -3986,  16536, -22164, -1920,  14916, -22288, -50,    13310, -22188, 1620,   11808, -21896, 3094,   10154,
    -21428, 4370,   8644,  -20816, 5454,   7214,  -20076, 6354,   5804,  -19240, 7078,   4474,  -18320, 7636,   3258,
    -17340, 8040,   2138,  -16316, 8304,   1030,  -15272, 8438,   150,   -14216, 8458,   -648,  -13164, 8378,   -1378,
    -12128, 8210,   -1932, -11116, 7968,   -2356, -10140, 7668,   -2858, -9204,  7316,   -3050, -8312,  6930,   -3366,
    -7472,  6514,   -3400, -6684,  6084,   -3580, -5952,  5642,   -3502, -5272,  5200,   -3466, -4652,  4764,   -3454,
    -4080,  4336,   -3254, -3564,  3924,   -3100, -3100,  3532,   -3028, -2680,  3158,   -2738, -2308,  2810,   -2622,
    -1976,  2484,   -2344, -1684,  2186,   -2250, -1428,  1910,   -1950, -1204,  1662,   -1844, -1012,  1436,   -1594,
    -844,   1234,   -1394, -704,   1056,   -1316, -580,   896,    -1068, -476,   758,    -1000, -388,   636,    -826,
    -316,   532,    -776,  -256,   440,    -566,  -204,   364,    -550,  -164,   298,    -436,  -132,   242,    -314,
    -104,   196,    -268,  -80,    158,    -242,  -64,    126,    -182,  -48,    100,    -144,  -36,    80,     -188,
    -28,    62,     -106,  -20,    48,     -70,   -16,    38,     -112,  -12,    28,     -14};

uint16_t gelu_coeffs_fp16[3 * 64] = {
    0x849au,  0x8d83u,  0x9265u,
    0x8820u,  0x90bau,  0x94d1u,
    0x8b2fu,  0x93d6u,  0x97b6u,
    0x8e19u,  0x9656u,  0x99edu,
    0x910cu,  0x98fdu,  0x9c64u,
    0x9413u,  0x9ba2u,  0x9e60u,
    0x966du,  0x9db9u,  0xa077u,
    0x98f3u,  0xa02du,  0xa21bu,
    0x9b73u,  0xa1f3u,  0xa412u,
    0x9d7cu,  0xa424u,  0xa548u,
    0x9fe9u,  0xa5a1u,  0xa6aau,
    0xa195u,  0xa77cu,  0xa818u,
    0xa3b9u,  0xa8ddu,  0xa8e1u,
    0xa53du,  0xaa2eu,  0xa9a3u,
    0xa6f7u,  0xabacu,  0xaa4au,
    0xa88bu,  0xaca7u,  0xaabfu,
    0xa9d0u,  0xad83u,  0xaae5u,
    0xab4cu,  0xae5cu,  0xaa9cu,
    0xac7eu,  0xaf23u,  0xa9c3u,
    0xad6du,  0xafc5u,  0xa83eu,
    0xae6du,  0xb015u,  0xa3c2u,
    0xaf75u,  0xb01cu,  0x20d3u,
    0xb03cu,  0xafd2u,  0x2933u,
    0xb0b2u,  0xaee0u,  0x2d01u,
    0xb115u,  0xad49u,  0x2fbfu,
    0xb158u,  0xa9f5u,  0x315eu,
    0xb171u,  0x15ebu,  0x32e9u,
    0xb152u,  0x2bdeu,  0x3437u,
    0xb0f0u,  0x3041u,  0x34ecu,
    0xb03fu,  0x32dfu,  0x3586u,
    0xae6cu,  0x34e1u,  0x35fcu,
    0xab34u,  0x366au,  0x363au,
    0x0u,     0x3800u,  0x3661u,
    0x2c66u,  0x38cbu,  0x3647u,
    0x30cau,  0x3990u,  0x35fdu,
    0x33c1u,  0x3a48u,  0x3586u,
    0x3588u,  0x3af0u,  0x34ecu,
    0x3757u,  0x3b82u,  0x3438u,
    0x38a4u,  0x3bfdu,  0x32ebu,
    0x39aau,  0x3c30u,  0x315fu,
    0x3abbu,  0x3c55u,  0x2fc1u,
    0x3bd3u,  0x3c6eu,  0x2d03u,
    0x3c79u,  0x3c7du,  0x2936u,
    0x3d09u,  0x3c83u,  0x20e2u,
    0x3d99u,  0x3c83u,  0xa3b7u,
    0x3e29u,  0x3c7cu,  0xa83cu,
    0x3eb8u,  0x3c72u,  0xa9c2u,
    0x3f46u,  0x3c66u,  0xaa9bu,
    0x3fd2u,  0x3c58u,  0xaae5u,
    0x402eu,  0x3c4au,  0xaabfu,
    0x4072u,  0x3c3du,  0xaa4bu,
    0x40b6u,  0x3c31u,  0xa9a4u,
    0x40f8u,  0x3c27u,  0xa8e2u,
    0x413au,  0x3c1eu,  0xa818u,
    0x417cu,  0x3c17u,  0xa6acu,
    0x41bdu,  0x3c11u,  0xa549u,
    0x41feu,  0x3c0cu,  0xa413u,
    0x423fu,  0x3c08u,  0xa21du,
    0x427fu,  0x3c06u,  0xa077u,
    0x42bfu,  0x3c04u,  0x9e5au,
    0x4300u,  0x3c02u,  0x9c65u,
    0x4340u,  0x3c02u,  0x99eau,
    0x4380u,  0x3c01u,  0x97beu,
    0x43c0u,  0x3c01u,  0x94ecu//,
    // 0x4400u,  0x3c00u,  0x9213u
};

/* REDUCTION OPS TABLES */
uint32_t reduction_shuffle_tab_32[3*64] =
{
    /* SHUFFLE 1 */             /* SHUFFLE 2 */             /* SHUFFLE 3 */
    /* DG0 */                   /* DG0 */                   /* DG0 */
    /* G0  */                   /* G0  */                   /* G0  */
    /* 1 -> 0 */ 0x81818181,    /* 2 -> 0 */ 0x82828282,    /* 4 -> 0 */ 0x84848484,
    /* 0 -> 1 */ 0x80808080,    /* 2 -> 1 */ 0x82828282,    /* 4 -> 1 */ 0x84848484,
    /* 3 -> 2 */ 0x83838383,    /* 0 -> 2 */ 0x80808080,    /* 4 -> 2 */ 0x84848484,
    /* 2 -> 3 */ 0x82828282,    /* 0 -> 3 */ 0x80808080,    /* 4 -> 3 */ 0x84848484,
    /* 5 -> 4 */ 0x85858585,    /* 6 -> 4 */ 0x86868686,    /* 0 -> 4 */ 0x80808080,
    /* 4 -> 5 */ 0x84848484,    /* 6 -> 5 */ 0x86868686,    /* 0 -> 5 */ 0x80808080,
    /* 7 -> 6 */ 0x87878787,    /* 4 -> 6 */ 0x84848484,    /* 0 -> 6 */ 0x80808080,
    /* 6 -> 7 */ 0x86868686,    /* 4 -> 7 */ 0x84848484,    /* 0 -> 7 */ 0x80808080,
    /* G1  */                   /* G1  */                   /* G1  */
    /* 1 -> 0 */ 0xA1A1A1A1,    /* 2 -> 0 */ 0xA2A2A2A2,    /* 4 -> 0 */ 0xA4A4A4A4,
    /* 0 -> 1 */ 0xA0A0A0A0,    /* 2 -> 1 */ 0xA2A2A2A2,    /* 4 -> 1 */ 0xA4A4A4A4,
    /* 3 -> 2 */ 0xA3A3A3A3,    /* 0 -> 2 */ 0xA0A0A0A0,    /* 4 -> 2 */ 0xA4A4A4A4,
    /* 2 -> 3 */ 0xA2A2A2A2,    /* 0 -> 3 */ 0xA0A0A0A0,    /* 4 -> 3 */ 0xA4A4A4A4,
    /* 5 -> 4 */ 0xA5A5A5A5,    /* 6 -> 4 */ 0xA6A6A6A6,    /* 0 -> 4 */ 0xA0A0A0A0,
    /* 4 -> 5 */ 0xA4A4A4A4,    /* 6 -> 5 */ 0xA6A6A6A6,    /* 0 -> 5 */ 0xA0A0A0A0,
    /* 7 -> 6 */ 0xA7A7A7A7,    /* 4 -> 6 */ 0xA4A4A4A4,    /* 0 -> 6 */ 0xA0A0A0A0,
    /* 6 -> 7 */ 0xA6A6A6A6,    /* 4 -> 7 */ 0xA4A4A4A4,    /* 0 -> 7 */ 0xA0A0A0A0,
    /* DG1 */                   /* DG1 */                   /* DG1 */
    /* G0  */                   /* G0  */                   /* G0  */
    /* 1 -> 0 */ 0x81818181,    /* 2 -> 0 */ 0x82828282,    /* 4 -> 0 */ 0x84848484,
    /* 0 -> 1 */ 0x80808080,    /* 2 -> 1 */ 0x82828282,    /* 4 -> 1 */ 0x84848484,
    /* 3 -> 2 */ 0x83838383,    /* 0 -> 2 */ 0x80808080,    /* 4 -> 2 */ 0x84848484,
    /* 2 -> 3 */ 0x82828282,    /* 0 -> 3 */ 0x80808080,    /* 4 -> 3 */ 0x84848484,
    /* 5 -> 4 */ 0x85858585,    /* 6 -> 4 */ 0x86868686,    /* 0 -> 4 */ 0x80808080,
    /* 4 -> 5 */ 0x84848484,    /* 6 -> 5 */ 0x86868686,    /* 0 -> 5 */ 0x80808080,
    /* 7 -> 6 */ 0x87878787,    /* 4 -> 6 */ 0x84848484,    /* 0 -> 6 */ 0x80808080,
    /* 6 -> 7 */ 0x86868686,    /* 4 -> 7 */ 0x84848484,    /* 0 -> 7 */ 0x80808080,
    /* G1  */                   /* G1  */                   /* G1  */
    /* 1 -> 0 */ 0xA1A1A1A1,    /* 2 -> 0 */ 0xA2A2A2A2,    /* 4 -> 0 */ 0xA4A4A4A4,
    /* 0 -> 1 */ 0xA0A0A0A0,    /* 2 -> 1 */ 0xA2A2A2A2,    /* 4 -> 1 */ 0xA4A4A4A4,
    /* 3 -> 2 */ 0xA3A3A3A3,    /* 0 -> 2 */ 0xA0A0A0A0,    /* 4 -> 2 */ 0xA4A4A4A4,
    /* 2 -> 3 */ 0xA2A2A2A2,    /* 0 -> 3 */ 0xA0A0A0A0,    /* 4 -> 3 */ 0xA4A4A4A4,
    /* 5 -> 4 */ 0xA5A5A5A5,    /* 6 -> 4 */ 0xA6A6A6A6,    /* 0 -> 4 */ 0xA0A0A0A0,
    /* 4 -> 5 */ 0xA4A4A4A4,    /* 6 -> 5 */ 0xA6A6A6A6,    /* 0 -> 5 */ 0xA0A0A0A0,
    /* 7 -> 6 */ 0xA7A7A7A7,    /* 4 -> 6 */ 0xA4A4A4A4,    /* 0 -> 6 */ 0xA0A0A0A0,
    /* 6 -> 7 */ 0xA6A6A6A6,    /* 4 -> 7 */ 0xA4A4A4A4,    /* 0 -> 7 */ 0xA0A0A0A0,
    /* DG2 */                   /* DG2 */                   /* DG2 */
    /* G0  */                   /* G0  */                   /* G0  */
    /* 1 -> 0 */ 0x81818181,    /* 2 -> 0 */ 0x82828282,    /* 4 -> 0 */ 0x84848484,
    /* 0 -> 1 */ 0x80808080,    /* 2 -> 1 */ 0x82828282,    /* 4 -> 1 */ 0x84848484,
    /* 3 -> 2 */ 0x83838383,    /* 0 -> 2 */ 0x80808080,    /* 4 -> 2 */ 0x84848484,
    /* 2 -> 3 */ 0x82828282,    /* 0 -> 3 */ 0x80808080,    /* 4 -> 3 */ 0x84848484,
    /* 5 -> 4 */ 0x85858585,    /* 6 -> 4 */ 0x86868686,    /* 0 -> 4 */ 0x80808080,
    /* 4 -> 5 */ 0x84848484,    /* 6 -> 5 */ 0x86868686,    /* 0 -> 5 */ 0x80808080,
    /* 7 -> 6 */ 0x87878787,    /* 4 -> 6 */ 0x84848484,    /* 0 -> 6 */ 0x80808080,
    /* 6 -> 7 */ 0x86868686,    /* 4 -> 7 */ 0x84848484,    /* 0 -> 7 */ 0x80808080,
    /* G1  */                   /* G1  */                   /* G1  */
    /* 1 -> 0 */ 0xA1A1A1A1,    /* 2 -> 0 */ 0xA2A2A2A2,    /* 4 -> 0 */ 0xA4A4A4A4,
    /* 0 -> 1 */ 0xA0A0A0A0,    /* 2 -> 1 */ 0xA2A2A2A2,    /* 4 -> 1 */ 0xA4A4A4A4,
    /* 3 -> 2 */ 0xA3A3A3A3,    /* 0 -> 2 */ 0xA0A0A0A0,    /* 4 -> 2 */ 0xA4A4A4A4,
    /* 2 -> 3 */ 0xA2A2A2A2,    /* 0 -> 3 */ 0xA0A0A0A0,    /* 4 -> 3 */ 0xA4A4A4A4,
    /* 5 -> 4 */ 0xA5A5A5A5,    /* 6 -> 4 */ 0xA6A6A6A6,    /* 0 -> 4 */ 0xA0A0A0A0,
    /* 4 -> 5 */ 0xA4A4A4A4,    /* 6 -> 5 */ 0xA6A6A6A6,    /* 0 -> 5 */ 0xA0A0A0A0,
    /* 7 -> 6 */ 0xA7A7A7A7,    /* 4 -> 6 */ 0xA4A4A4A4,    /* 0 -> 6 */ 0xA0A0A0A0,
    /* 6 -> 7 */ 0xA6A6A6A6,    /* 4 -> 7 */ 0xA4A4A4A4,    /* 0 -> 7 */ 0xA0A0A0A0,
    /* DG3 */                   /* DG3 */                   /* DG3 */
    /* G0  */                   /* G0  */                   /* G0  */
    /* 1 -> 0 */ 0x81818181,    /* 2 -> 0 */ 0x82828282,    /* 4 -> 0 */ 0x84848484,
    /* 0 -> 1 */ 0x80808080,    /* 2 -> 1 */ 0x82828282,    /* 4 -> 1 */ 0x84848484,
    /* 3 -> 2 */ 0x83838383,    /* 0 -> 2 */ 0x80808080,    /* 4 -> 2 */ 0x84848484,
    /* 2 -> 3 */ 0x82828282,    /* 0 -> 3 */ 0x80808080,    /* 4 -> 3 */ 0x84848484,
    /* 5 -> 4 */ 0x85858585,    /* 6 -> 4 */ 0x86868686,    /* 0 -> 4 */ 0x80808080,
    /* 4 -> 5 */ 0x84848484,    /* 6 -> 5 */ 0x86868686,    /* 0 -> 5 */ 0x80808080,
    /* 7 -> 6 */ 0x87878787,    /* 4 -> 6 */ 0x84848484,    /* 0 -> 6 */ 0x80808080,
    /* 6 -> 7 */ 0x86868686,    /* 4 -> 7 */ 0x84848484,    /* 0 -> 7 */ 0x80808080,
    /* G1  */                   /* G1  */                   /* G1  */
    /* 1 -> 0 */ 0xA1A1A1A1,    /* 2 -> 0 */ 0xA2A2A2A2,    /* 4 -> 0 */ 0xA4A4A4A4,
    /* 0 -> 1 */ 0xA0A0A0A0,    /* 2 -> 1 */ 0xA2A2A2A2,    /* 4 -> 1 */ 0xA4A4A4A4,
    /* 3 -> 2 */ 0xA3A3A3A3,    /* 0 -> 2 */ 0xA0A0A0A0,    /* 4 -> 2 */ 0xA4A4A4A4,
    /* 2 -> 3 */ 0xA2A2A2A2,    /* 0 -> 3 */ 0xA0A0A0A0,    /* 4 -> 3 */ 0xA4A4A4A4,
    /* 5 -> 4 */ 0xA5A5A5A5,    /* 6 -> 4 */ 0xA6A6A6A6,    /* 0 -> 4 */ 0xA0A0A0A0,
    /* 4 -> 5 */ 0xA4A4A4A4,    /* 6 -> 5 */ 0xA6A6A6A6,    /* 0 -> 5 */ 0xA0A0A0A0,
    /* 7 -> 6 */ 0xA7A7A7A7,    /* 4 -> 6 */ 0xA4A4A4A4,    /* 0 -> 6 */ 0xA0A0A0A0,
    /* 6 -> 7 */ 0xA6A6A6A6,    /* 4 -> 7 */ 0xA4A4A4A4,    /* 0 -> 7 */ 0xA0A0A0A0,
};

// Format the permutation argument for the shuffle instruction.
constexpr uint8_t SHUFFLE_EL_F32(uint8_t n)
{
    return n | ((n > 7) << 5) | 0x80;
}

// Concatanate four u8 permutation arguments into 1 u32.
constexpr uint32_t SH_EL(uint8_t n) {
    return ((uint32_t)SHUFFLE_EL_F32(n)) |
            ((uint32_t)SHUFFLE_EL_F32(n) << 8) |
            ((uint32_t)SHUFFLE_EL_F32(n) << 16) |
            ((uint32_t)SHUFFLE_EL_F32(n) << 24);
}

// From tpc_kernels/src/shuffle_tab.cpp, `f128_shuffle_table`.
// Used in `swizzle` LTO intrinsic, which is used in the fuser.
uint32_t swizzle_shuffle_tab_32[3*64] =
{
// not used  backward reorder      combine
    0x0,     SH_EL(0),             0x0,
    0x0,     SH_EL(2),             0x0,
    0x0,     SH_EL(4),             0x0,
    0x0,     SH_EL(6),             0x0,
    0x0,     SH_EL(1),             SH_EL(0),
    0x0,     SH_EL(3),             SH_EL(1),
    0x0,     SH_EL(5),             SH_EL(2),
    0x0,     SH_EL(7),             SH_EL(3),
    0x0,     SH_EL(8),             SH_EL(12),
    0x0,     SH_EL(10),            SH_EL(13),
    0x0,     SH_EL(12),            SH_EL(14),
    0x0,     SH_EL(14),            SH_EL(15),
    0x0,     SH_EL(9),             0x20202020,
    0x0,     SH_EL(11),            0x20202020,
    0x0,     SH_EL(13),            0x20202020,
    0x0,     SH_EL(15),            0x20202020,

    0x0,     SH_EL(0),             0x0,
    0x0,     SH_EL(2),             0x0,
    0x0,     SH_EL(4),             0x0,
    0x0,     SH_EL(6),             0x0,
    0x0,     SH_EL(1),             SH_EL(0),
    0x0,     SH_EL(3),             SH_EL(1),
    0x0,     SH_EL(5),             SH_EL(2),
    0x0,     SH_EL(7),             SH_EL(3),
    0x0,     SH_EL(8),             SH_EL(12),
    0x0,     SH_EL(10),            SH_EL(13),
    0x0,     SH_EL(12),            SH_EL(14),
    0x0,     SH_EL(14),            SH_EL(15),
    0x0,     SH_EL(9),             0x20202020,
    0x0,     SH_EL(11),            0x20202020,
    0x0,     SH_EL(13),            0x20202020,
    0x0,     SH_EL(15),            0x20202020,

    0x0,     SH_EL(0),             0x0,
    0x0,     SH_EL(2),             0x0,
    0x0,     SH_EL(4),             0x0,
    0x0,     SH_EL(6),             0x0,
    0x0,     SH_EL(1),             SH_EL(0),
    0x0,     SH_EL(3),             SH_EL(1),
    0x0,     SH_EL(5),             SH_EL(2),
    0x0,     SH_EL(7),             SH_EL(3),
    0x0,     SH_EL(8),             SH_EL(12),
    0x0,     SH_EL(10),            SH_EL(13),
    0x0,     SH_EL(12),            SH_EL(14),
    0x0,     SH_EL(14),            SH_EL(15),
    0x0,     SH_EL(9),             0x20202020,
    0x0,     SH_EL(11),            0x20202020,
    0x0,     SH_EL(13),            0x20202020,
    0x0,     SH_EL(15),            0x20202020,

    0x0,     SH_EL(0),             0x0,
    0x0,     SH_EL(2),             0x0,
    0x0,     SH_EL(4),             0x0,
    0x0,     SH_EL(6),             0x0,
    0x0,     SH_EL(1),             SH_EL(0),
    0x0,     SH_EL(3),             SH_EL(1),
    0x0,     SH_EL(5),             SH_EL(2),
    0x0,     SH_EL(7),             SH_EL(3),
    0x0,     SH_EL(8),             SH_EL(12),
    0x0,     SH_EL(10),            SH_EL(13),
    0x0,     SH_EL(12),            SH_EL(14),
    0x0,     SH_EL(14),            SH_EL(15),
    0x0,     SH_EL(9),             0x20202020,
    0x0,     SH_EL(11),            0x20202020,
    0x0,     SH_EL(13),            0x20202020,
    0x0,     SH_EL(15),            0x20202020
};

uint32_t reduction_shuffle_tab_16[3*128] =
{
    /* NOT USED */  /* SHUFFLE 1 */                 /* SHUFFLE 2 */
                    /* DG0 */                       /* DG0 */
                    /* G0  */                       /* G0  */
    0x0,            /* 0  <-> 1     */ 0x80808181,  /* 2  -> 0,  1  */ 0x82828282,
    0x0,            /* 2  <-> 3     */ 0x82828383,  /* 0  -> 2,  3  */ 0x80808080,
    0x0,            /* 4  <-> 5     */ 0x84848585,  /* 6  -> 4,  5  */ 0x86868686,
    0x0,            /* 6  <-> 7     */ 0x86868787,  /* 4  -> 6,  7  */ 0x84848484,
    0x0,            /* 8  <-> 9     */ 0x88888989,  /* 10 -> 8,  9  */ 0x8A8A8A8A,
    0x0,            /* 10 <-> 11    */ 0x8A8A8B8B,  /* 8  -> 10, 11 */ 0x88888888,
    0x0,            /* 12 <-> 13    */ 0x8C8C8D8D,  /* 14 -> 12, 13 */ 0x8E8E8E8E,
    0x0,            /* 14 <-> 15    */ 0x8E8E8F8F,  /* 12 -> 14, 15 */ 0x8C8C8C8C,
                    /* G1  */                       /* G1  */
    0x0,            /* 0  <-> 1     */ 0xA0A0A1A1,  /* 2  -> 0,  1  */ 0xA2A2A2A2,
    0x0,            /* 2  <-> 3     */ 0xA2A2A3A3,  /* 0  -> 2,  3  */ 0xA0A0A0A0,
    0x0,            /* 4  <-> 5     */ 0xA4A4A5A5,  /* 6  -> 4,  5  */ 0xA6A6A6A6,
    0x0,            /* 6  <-> 7     */ 0xA6A6A7A7,  /* 4  -> 6,  7  */ 0xA4A4A4A4,
    0x0,            /* 8  <-> 9     */ 0xA8A8A9A9,  /* 10 -> 8,  9  */ 0xAAAAAAAA,
    0x0,            /* 10 <-> 11    */ 0xAAAAABAB,  /* 8  -> 10, 11 */ 0xA8A8A8A8,
    0x0,            /* 12 <-> 13    */ 0xACACADAD,  /* 14 -> 12, 13 */ 0xAEAEAEAE,
    0x0,            /* 14 <-> 15    */ 0xAEAEAFAF,  /* 12 -> 14, 15 */ 0xACACACAC,
                    /* DG1 */                       /* DG1 */
                    /* G0  */                       /* G0  */
    0x0,            /* 0  <-> 1     */ 0x80808181,  /* 2  -> 0,  1  */ 0x82828282,
    0x0,            /* 2  <-> 3     */ 0x82828383,  /* 0  -> 2,  3  */ 0x80808080,
    0x0,            /* 4  <-> 5     */ 0x84848585,  /* 6  -> 4,  5  */ 0x86868686,
    0x0,            /* 6  <-> 7     */ 0x86868787,  /* 4  -> 6,  7  */ 0x84848484,
    0x0,            /* 8  <-> 9     */ 0x88888989,  /* 10 -> 8,  9  */ 0x8A8A8A8A,
    0x0,            /* 10 <-> 11    */ 0x8A8A8B8B,  /* 8  -> 10, 11 */ 0x88888888,
    0x0,            /* 12 <-> 13    */ 0x8C8C8D8D,  /* 14 -> 12, 13 */ 0x8E8E8E8E,
    0x0,            /* 14 <-> 15    */ 0x8E8E8F8F,  /* 12 -> 14, 15 */ 0x8C8C8C8C,
                    /* G1  */                       /* G1  */
    0x0,            /* 0  <-> 1     */ 0xA0A0A1A1,  /* 2  -> 0,  1  */ 0xA2A2A2A2,
    0x0,            /* 2  <-> 3     */ 0xA2A2A3A3,  /* 0  -> 2,  3  */ 0xA0A0A0A0,
    0x0,            /* 4  <-> 5     */ 0xA4A4A5A5,  /* 6  -> 4,  5  */ 0xA6A6A6A6,
    0x0,            /* 6  <-> 7     */ 0xA6A6A7A7,  /* 4  -> 6,  7  */ 0xA4A4A4A4,
    0x0,            /* 8  <-> 9     */ 0xA8A8A9A9,  /* 10 -> 8,  9  */ 0xAAAAAAAA,
    0x0,            /* 10 <-> 11    */ 0xAAAAABAB,  /* 8  -> 10, 11 */ 0xA8A8A8A8,
    0x0,            /* 12 <-> 13    */ 0xACACADAD,  /* 14 -> 12, 13 */ 0xAEAEAEAE,
    0x0,            /* 14 <-> 15    */ 0xAEAEAFAF,  /* 12 -> 14, 15 */ 0xACACACAC,
                    /* DG2 */                       /* DG2 */
                    /* G0  */                       /* G0  */
    0x0,            /* 0  <-> 1     */ 0x80808181,  /* 2  -> 0,  1  */ 0x82828282,
    0x0,            /* 2  <-> 3     */ 0x82828383,  /* 0  -> 2,  3  */ 0x80808080,
    0x0,            /* 4  <-> 5     */ 0x84848585,  /* 6  -> 4,  5  */ 0x86868686,
    0x0,            /* 6  <-> 7     */ 0x86868787,  /* 4  -> 6,  7  */ 0x84848484,
    0x0,            /* 8  <-> 9     */ 0x88888989,  /* 10 -> 8,  9  */ 0x8A8A8A8A,
    0x0,            /* 10 <-> 11    */ 0x8A8A8B8B,  /* 8  -> 10, 11 */ 0x88888888,
    0x0,            /* 12 <-> 13    */ 0x8C8C8D8D,  /* 14 -> 12, 13 */ 0x8E8E8E8E,
    0x0,            /* 14 <-> 15    */ 0x8E8E8F8F,  /* 12 -> 14, 15 */ 0x8C8C8C8C,
                    /* G1  */                       /* G1  */
    0x0,            /* 0  <-> 1     */ 0xA0A0A1A1,  /* 2  -> 0,  1  */ 0xA2A2A2A2,
    0x0,            /* 2  <-> 3     */ 0xA2A2A3A3,  /* 0  -> 2,  3  */ 0xA0A0A0A0,
    0x0,            /* 4  <-> 5     */ 0xA4A4A5A5,  /* 6  -> 4,  5  */ 0xA6A6A6A6,
    0x0,            /* 6  <-> 7     */ 0xA6A6A7A7,  /* 4  -> 6,  7  */ 0xA4A4A4A4,
    0x0,            /* 8  <-> 9     */ 0xA8A8A9A9,  /* 10 -> 8,  9  */ 0xAAAAAAAA,
    0x0,            /* 10 <-> 11    */ 0xAAAAABAB,  /* 8  -> 10, 11 */ 0xA8A8A8A8,
    0x0,            /* 12 <-> 13    */ 0xACACADAD,  /* 14 -> 12, 13 */ 0xAEAEAEAE,
    0x0,            /* 14 <-> 15    */ 0xAEAEAFAF,  /* 12 -> 14, 15 */ 0xACACACAC,
                    /* DG3 */                       /* DG3 */
                    /* G0  */                       /* G0  */
    0x0,            /* 0  <-> 1     */ 0x80808181,  /* 2  -> 0,  1  */ 0x82828282,
    0x0,            /* 2  <-> 3     */ 0x82828383,  /* 0  -> 2,  3  */ 0x80808080,
    0x0,            /* 4  <-> 5     */ 0x84848585,  /* 6  -> 4,  5  */ 0x86868686,
    0x0,            /* 6  <-> 7     */ 0x86868787,  /* 4  -> 6,  7  */ 0x84848484,
    0x0,            /* 8  <-> 9     */ 0x88888989,  /* 10 -> 8,  9  */ 0x8A8A8A8A,
    0x0,            /* 10 <-> 11    */ 0x8A8A8B8B,  /* 8  -> 10, 11 */ 0x88888888,
    0x0,            /* 12 <-> 13    */ 0x8C8C8D8D,  /* 14 -> 12, 13 */ 0x8E8E8E8E,
    0x0,            /* 14 <-> 15    */ 0x8E8E8F8F,  /* 12 -> 14, 15 */ 0x8C8C8C8C,
                    /* G1  */                       /* G1  */
    0x0,            /* 0  <-> 1     */ 0xA0A0A1A1,  /* 2  -> 0,  1  */ 0xA2A2A2A2,
    0x0,            /* 2  <-> 3     */ 0xA2A2A3A3,  /* 0  -> 2,  3  */ 0xA0A0A0A0,
    0x0,            /* 4  <-> 5     */ 0xA4A4A5A5,  /* 6  -> 4,  5  */ 0xA6A6A6A6,
    0x0,            /* 6  <-> 7     */ 0xA6A6A7A7,  /* 4  -> 6,  7  */ 0xA4A4A4A4,
    0x0,            /* 8  <-> 9     */ 0xA8A8A9A9,  /* 10 -> 8,  9  */ 0xAAAAAAAA,
    0x0,            /* 10 <-> 11    */ 0xAAAAABAB,  /* 8  -> 10, 11 */ 0xA8A8A8A8,
    0x0,            /* 12 <-> 13    */ 0xACACADAD,  /* 14 -> 12, 13 */ 0xAEAEAEAE,
    0x0,            /* 14 <-> 15    */ 0xAEAEAFAF,  /* 12 -> 14, 15 */ 0xACACACAC,
    /* NOT USED */  /* SHUFFLE 3 */                 /* SHUFFLE 4 */
                    /* DG0 */                       /* DG0 */
                    /* G0  */                       /* G0  */
    0x0,            /* 4  -> 0,  1  */ 0x84848484,  /* 8 -> 0,  1   */ 0x88888888,
    0x0,            /* 4  -> 2,  3  */ 0x84848484,  /* 8 -> 2,  3   */ 0x88888888,
    0x0,            /* 0  -> 4,  5  */ 0x80808080,  /* 8 -> 4,  5   */ 0x88888888,
    0x0,            /* 0  -> 6,  7  */ 0x80808080,  /* 8 -> 6,  7   */ 0x88888888,
    0x0,            /* 12 -> 8,  9  */ 0x8C8C8C8C,  /* 0 -> 8,  9   */ 0x80808080,
    0x0,            /* 12 -> 10, 11 */ 0x8C8C8C8C,  /* 0 -> 10, 11  */ 0x80808080,
    0x0,            /* 8  -> 12, 13 */ 0x88888888,  /* 0 -> 12, 13  */ 0x80808080,
    0x0,            /* 8  -> 14, 15 */ 0x88888888,  /* 0 -> 14, 15  */ 0x80808080,
                    /* G1  */                       /* G1  */
    0x0,            /* 4  -> 0,  1  */ 0xA4A4A4A4,  /* 8 -> 0,  1   */ 0xA8A8A8A8,
    0x0,            /* 4  -> 2,  3  */ 0xA4A4A4A4,  /* 8 -> 2,  3   */ 0xA8A8A8A8,
    0x0,            /* 0  -> 4,  5  */ 0xA0A0A0A0,  /* 8 -> 4,  5   */ 0xA8A8A8A8,
    0x0,            /* 0  -> 6,  7  */ 0xA0A0A0A0,  /* 8 -> 6,  7   */ 0xA8A8A8A8,
    0x0,            /* 12 -> 8,  9  */ 0xACACACAC,  /* 0 -> 8,  9   */ 0xA0A0A0A0,
    0x0,            /* 12 -> 10, 11 */ 0xACACACAC,  /* 0 -> 10, 11  */ 0xA0A0A0A0,
    0x0,            /* 8  -> 12, 13 */ 0xA8A8A8A8,  /* 0 -> 12, 13  */ 0xA0A0A0A0,
    0x0,            /* 8  -> 14, 15 */ 0xA8A8A8A8,  /* 0 -> 14, 15  */ 0xA0A0A0A0,
                    /* DG1 */                       /* DG1 */
                    /* G0  */                       /* G0  */
    0x0,            /* 4  -> 0,  1  */ 0x84848484,  /* 8 -> 0,  1   */ 0x88888888,
    0x0,            /* 4  -> 2,  3  */ 0x84848484,  /* 8 -> 2,  3   */ 0x88888888,
    0x0,            /* 0  -> 4,  5  */ 0x80808080,  /* 8 -> 4,  5   */ 0x88888888,
    0x0,            /* 0  -> 6,  7  */ 0x80808080,  /* 8 -> 6,  7   */ 0x88888888,
    0x0,            /* 12 -> 8,  9  */ 0x8C8C8C8C,  /* 0 -> 8,  9   */ 0x80808080,
    0x0,            /* 12 -> 10, 11 */ 0x8C8C8C8C,  /* 0 -> 10, 11  */ 0x80808080,
    0x0,            /* 8  -> 12, 13 */ 0x88888888,  /* 0 -> 12, 13  */ 0x80808080,
    0x0,            /* 8  -> 14, 15 */ 0x88888888,  /* 0 -> 14, 15  */ 0x80808080,
                    /* G1  */                       /* G1  */
    0x0,            /* 4  -> 0,  1  */ 0xA4A4A4A4,  /* 8 -> 0,  1   */ 0xA8A8A8A8,
    0x0,            /* 4  -> 2,  3  */ 0xA4A4A4A4,  /* 8 -> 2,  3   */ 0xA8A8A8A8,
    0x0,            /* 0  -> 4,  5  */ 0xA0A0A0A0,  /* 8 -> 4,  5   */ 0xA8A8A8A8,
    0x0,            /* 0  -> 6,  7  */ 0xA0A0A0A0,  /* 8 -> 6,  7   */ 0xA8A8A8A8,
    0x0,            /* 12 -> 8,  9  */ 0xACACACAC,  /* 0 -> 8,  9   */ 0xA0A0A0A0,
    0x0,            /* 12 -> 10, 11 */ 0xACACACAC,  /* 0 -> 10, 11  */ 0xA0A0A0A0,
    0x0,            /* 8  -> 12, 13 */ 0xA8A8A8A8,  /* 0 -> 12, 13  */ 0xA0A0A0A0,
    0x0,            /* 8  -> 14, 15 */ 0xA8A8A8A8,  /* 0 -> 14, 15  */ 0xA0A0A0A0,
                    /* DG2 */                       /* DG2 */
                    /* G0  */                       /* G0  */
    0x0,            /* 4  -> 0,  1  */ 0x84848484,  /* 8 -> 0,  1   */ 0x88888888,
    0x0,            /* 4  -> 2,  3  */ 0x84848484,  /* 8 -> 2,  3   */ 0x88888888,
    0x0,            /* 0  -> 4,  5  */ 0x80808080,  /* 8 -> 4,  5   */ 0x88888888,
    0x0,            /* 0  -> 6,  7  */ 0x80808080,  /* 8 -> 6,  7   */ 0x88888888,
    0x0,            /* 12 -> 8,  9  */ 0x8C8C8C8C,  /* 0 -> 8,  9   */ 0x80808080,
    0x0,            /* 12 -> 10, 11 */ 0x8C8C8C8C,  /* 0 -> 10, 11  */ 0x80808080,
    0x0,            /* 8  -> 12, 13 */ 0x88888888,  /* 0 -> 12, 13  */ 0x80808080,
    0x0,            /* 8  -> 14, 15 */ 0x88888888,  /* 0 -> 14, 15  */ 0x80808080,
                    /* G1  */                       /* G1  */
    0x0,            /* 4  -> 0,  1  */ 0xA4A4A4A4,  /* 8 -> 0,  1   */ 0xA8A8A8A8,
    0x0,            /* 4  -> 2,  3  */ 0xA4A4A4A4,  /* 8 -> 2,  3   */ 0xA8A8A8A8,
    0x0,            /* 0  -> 4,  5  */ 0xA0A0A0A0,  /* 8 -> 4,  5   */ 0xA8A8A8A8,
    0x0,            /* 0  -> 6,  7  */ 0xA0A0A0A0,  /* 8 -> 6,  7   */ 0xA8A8A8A8,
    0x0,            /* 12 -> 8,  9  */ 0xACACACAC,  /* 0 -> 8,  9   */ 0xA0A0A0A0,
    0x0,            /* 12 -> 10, 11 */ 0xACACACAC,  /* 0 -> 10, 11  */ 0xA0A0A0A0,
    0x0,            /* 8  -> 12, 13 */ 0xA8A8A8A8,  /* 0 -> 12, 13  */ 0xA0A0A0A0,
    0x0,            /* 8  -> 14, 15 */ 0xA8A8A8A8,  /* 0 -> 14, 15  */ 0xA0A0A0A0,
                    /* DG3 */                       /* DG3 */
                    /* G0  */                       /* G0  */
    0x0,            /* 4  -> 0,  1  */ 0x84848484,  /* 8 -> 0,  1   */ 0x88888888,
    0x0,            /* 4  -> 2,  3  */ 0x84848484,  /* 8 -> 2,  3   */ 0x88888888,
    0x0,            /* 0  -> 4,  5  */ 0x80808080,  /* 8 -> 4,  5   */ 0x88888888,
    0x0,            /* 0  -> 6,  7  */ 0x80808080,  /* 8 -> 6,  7   */ 0x88888888,
    0x0,            /* 12 -> 8,  9  */ 0x8C8C8C8C,  /* 0 -> 8,  9   */ 0x80808080,
    0x0,            /* 12 -> 10, 11 */ 0x8C8C8C8C,  /* 0 -> 10, 11  */ 0x80808080,
    0x0,            /* 8  -> 12, 13 */ 0x88888888,  /* 0 -> 12, 13  */ 0x80808080,
    0x0,            /* 8  -> 14, 15 */ 0x88888888,  /* 0 -> 14, 15  */ 0x80808080,
                    /* G1  */                       /* G1  */
    0x0,            /* 4  -> 0,  1  */ 0xA4A4A4A4,  /* 8 -> 0,  1   */ 0xA8A8A8A8,
    0x0,            /* 4  -> 2,  3  */ 0xA4A4A4A4,  /* 8 -> 2,  3   */ 0xA8A8A8A8,
    0x0,            /* 0  -> 4,  5  */ 0xA0A0A0A0,  /* 8 -> 4,  5   */ 0xA8A8A8A8,
    0x0,            /* 0  -> 6,  7  */ 0xA0A0A0A0,  /* 8 -> 6,  7   */ 0xA8A8A8A8,
    0x0,            /* 12 -> 8,  9  */ 0xACACACAC,  /* 0 -> 8,  9   */ 0xA0A0A0A0,
    0x0,            /* 12 -> 10, 11 */ 0xACACACAC,  /* 0 -> 10, 11  */ 0xA0A0A0A0,
    0x0,            /* 8  -> 12, 13 */ 0xA8A8A8A8,  /* 0 -> 12, 13  */ 0xA0A0A0A0,
    0x0,            /* 8  -> 14, 15 */ 0xA8A8A8A8,  /* 0 -> 14, 15  */ 0xA0A0A0A0,
};

uint32_t reduction_shuffle_tab_8[3*128] =
{
    /* SHUFFLE 1 */                         /* SHUFFLE 2 */                                 /* SHUFFLE 3 */
    /* DG0 */                               /* DG0 */                                       /* DG0 */
    /* G0  */                               /* G0  */                                       /* G0  */
    /* 0  <-> 1,  2  <-> 3  */ 0x82838081,  /* 2  -> 0,  1,    0  -> 2,  3  */ 0x80808282,  /* 4  -> 0,  1,  2,  3  */ 0x84848484,
    /* 4  <-> 5,  6  <-> 7  */ 0x86878485,  /* 6  -> 4,  5,    4  -> 6,  7  */ 0x84848686,  /* 0  -> 4,  5,  6,  7  */ 0x80808080,
    /* 8  <-> 9,  10 <-> 11 */ 0x8A8B8889,  /* 10 -> 8,  9,    8  -> 10, 11 */ 0x88888A8A,  /* 12 -> 8,  9,  10, 11 */ 0x8C8C8C8C,
    /* 12 <-> 13, 14 <-> 15 */ 0x8E8F8C8D,  /* 14 -> 12, 13,   12 -> 14, 15 */ 0x8C8C8E8E,  /* 8  -> 12, 13, 14, 15 */ 0x88888888,
    /* 16 <-> 17, 18 <-> 19 */ 0x92939091,  /* 18 -> 16, 17,   16 -> 18, 19 */ 0x90909292,  /* 20 -> 16, 17, 18, 19 */ 0x94949494,
    /* 20 <-> 21, 22 <-> 23 */ 0x96979495,  /* 22 -> 20, 21,   20 -> 22, 23 */ 0x94949696,  /* 16 -> 20, 21, 22, 23 */ 0x90909090,
    /* 24 <-> 25, 26 <-> 27 */ 0x9A9B9899,  /* 26 -> 24, 25,   24 -> 26, 27 */ 0x98989A9A,  /* 28 -> 24, 25, 26, 27 */ 0x9C9C9C9C,
    /* 28 <-> 29, 30 <-> 31 */ 0x9E9F9C9D,  /* 30 -> 28, 29,   28 -> 30, 31 */ 0x9C9C9E9E,  /* 24 -> 28, 29, 30, 31 */ 0x98989898,
    /* G1  */                               /* G1  */                                       /* G1  */
    /* 0  <-> 1,  2  <-> 3  */ 0xA2A3A0A1,  /* 2  -> 0,  1,    0  -> 2,  3  */ 0xA0A0A2A2,  /* 4  -> 0,  1,  2,  3  */ 0xA4A4A4A4,
    /* 4  <-> 5,  6  <-> 7  */ 0xA6A7A4A5,  /* 6  -> 4,  5,    4  -> 6,  7  */ 0xA4A4A6A6,  /* 0  -> 4,  5,  6,  7  */ 0xA0A0A0A0,
    /* 8  <-> 9,  10 <-> 11 */ 0xAAABA8A9,  /* 10 -> 8,  9,    8  -> 10, 11 */ 0xA8A8AAAA,  /* 12 -> 8,  9,  10, 11 */ 0xACACACAC,
    /* 12 <-> 13, 14 <-> 15 */ 0xAEAFACAD,  /* 14 -> 12, 13,   12 -> 14, 15 */ 0xACACAEAE,  /* 8  -> 12, 13, 14, 15 */ 0xA8A8A8A8,
    /* 16 <-> 17, 18 <-> 19 */ 0xB2B3B0B1,  /* 18 -> 16, 17,   16 -> 18, 19 */ 0x90909292,  /* 20 -> 16, 17, 18, 19 */ 0xB4B4B4B4,
    /* 20 <-> 21, 22 <-> 23 */ 0xB6B7B4B5,  /* 22 -> 20, 21,   20 -> 22, 23 */ 0x94949696,  /* 16 -> 20, 21, 22, 23 */ 0xB0B0B0B0,
    /* 24 <-> 25, 26 <-> 27 */ 0xBABBB8B9,  /* 26 -> 24, 25,   24 -> 26, 27 */ 0x98989A9A,  /* 28 -> 24, 25, 26, 27 */ 0xBCBCBCBC,
    /* 28 <-> 29, 30 <-> 31 */ 0xBEBFBCBD,  /* 30 -> 28, 29,   28 -> 30, 31 */ 0x9C9C9E9E,  /* 24 -> 28, 29, 30, 31 */ 0xB8B8B8B8,
    /* DG1 */                               /* DG1 */                                       /* DG1 */
    /* G0  */                               /* G0  */                                       /* G0  */
    /* 0  <-> 1,  2  <-> 3  */ 0x82838081,  /* 2  -> 0,  1,    0  -> 2,  3  */ 0x80808282,  /* 4  -> 0,  1,  2,  3  */ 0x84848484,
    /* 4  <-> 5,  6  <-> 7  */ 0x86878485,  /* 6  -> 4,  5,    4  -> 6,  7  */ 0x84848686,  /* 0  -> 4,  5,  6,  7  */ 0x80808080,
    /* 8  <-> 9,  10 <-> 11 */ 0x8A8B8889,  /* 10 -> 8,  9,    8  -> 10, 11 */ 0x88888A8A,  /* 12 -> 8,  9,  10, 11 */ 0x8C8C8C8C,
    /* 12 <-> 13, 14 <-> 15 */ 0x8E8F8C8D,  /* 14 -> 12, 13,   12 -> 14, 15 */ 0x8C8C8E8E,  /* 8  -> 12, 13, 14, 15 */ 0x88888888,
    /* 16 <-> 17, 18 <-> 19 */ 0x92939091,  /* 18 -> 16, 17,   16 -> 18, 19 */ 0x90909292,  /* 20 -> 16, 17, 18, 19 */ 0x94949494,
    /* 20 <-> 21, 22 <-> 23 */ 0x96979495,  /* 22 -> 20, 21,   20 -> 22, 23 */ 0x94949696,  /* 16 -> 20, 21, 22, 23 */ 0x90909090,
    /* 24 <-> 25, 26 <-> 27 */ 0x9A9B9899,  /* 26 -> 24, 25,   24 -> 26, 27 */ 0x98989A9A,  /* 28 -> 24, 25, 26, 27 */ 0x9C9C9C9C,
    /* 28 <-> 29, 30 <-> 31 */ 0x9E9F9C9D,  /* 30 -> 28, 29,   28 -> 30, 31 */ 0x9C9C9E9E,  /* 24 -> 28, 29, 30, 31 */ 0x98989898,
    /* G1  */                               /* G1  */                                       /* G1  */
    /* 0  <-> 1,  2  <-> 3  */ 0xA2A3A0A1,  /* 2  -> 0,  1,    0  -> 2,  3  */ 0xA0A0A2A2,  /* 4  -> 0,  1,  2,  3  */ 0xA4A4A4A4,
    /* 4  <-> 5,  6  <-> 7  */ 0xA6A7A4A5,  /* 6  -> 4,  5,    4  -> 6,  7  */ 0xA4A4A6A6,  /* 0  -> 4,  5,  6,  7  */ 0xA0A0A0A0,
    /* 8  <-> 9,  10 <-> 11 */ 0xAAABA8A9,  /* 10 -> 8,  9,    8  -> 10, 11 */ 0xA8A8AAAA,  /* 12 -> 8,  9,  10, 11 */ 0xACACACAC,
    /* 12 <-> 13, 14 <-> 15 */ 0xAEAFACAD,  /* 14 -> 12, 13,   12 -> 14, 15 */ 0xACACAEAE,  /* 8  -> 12, 13, 14, 15 */ 0xA8A8A8A8,
    /* 16 <-> 17, 18 <-> 19 */ 0xB2B3B0B1,  /* 18 -> 16, 17,   16 -> 18, 19 */ 0x90909292,  /* 20 -> 16, 17, 18, 19 */ 0xB4B4B4B4,
    /* 20 <-> 21, 22 <-> 23 */ 0xB6B7B4B5,  /* 22 -> 20, 21,   20 -> 22, 23 */ 0x94949696,  /* 16 -> 20, 21, 22, 23 */ 0xB0B0B0B0,
    /* 24 <-> 25, 26 <-> 27 */ 0xBABBB8B9,  /* 26 -> 24, 25,   24 -> 26, 27 */ 0x98989A9A,  /* 28 -> 24, 25, 26, 27 */ 0xBCBCBCBC,
    /* 28 <-> 29, 30 <-> 31 */ 0xBEBFBCBD,  /* 30 -> 28, 29,   28 -> 30, 31 */ 0x9C9C9E9E,  /* 24 -> 28, 29, 30, 31 */ 0xB8B8B8B8,
    /* DG2 */                               /* DG2 */                                       /* DG2 */
    /* G0  */                               /* G0  */                                       /* G0  */
    /* 0  <-> 1,  2  <-> 3  */ 0x82838081,  /* 2  -> 0,  1,    0  -> 2,  3  */ 0x80808282,  /* 4  -> 0,  1,  2,  3  */ 0x84848484,
    /* 4  <-> 5,  6  <-> 7  */ 0x86878485,  /* 6  -> 4,  5,    4  -> 6,  7  */ 0x84848686,  /* 0  -> 4,  5,  6,  7  */ 0x80808080,
    /* 8  <-> 9,  10 <-> 11 */ 0x8A8B8889,  /* 10 -> 8,  9,    8  -> 10, 11 */ 0x88888A8A,  /* 12 -> 8,  9,  10, 11 */ 0x8C8C8C8C,
    /* 12 <-> 13, 14 <-> 15 */ 0x8E8F8C8D,  /* 14 -> 12, 13,   12 -> 14, 15 */ 0x8C8C8E8E,  /* 8  -> 12, 13, 14, 15 */ 0x88888888,
    /* 16 <-> 17, 18 <-> 19 */ 0x92939091,  /* 18 -> 16, 17,   16 -> 18, 19 */ 0x90909292,  /* 20 -> 16, 17, 18, 19 */ 0x94949494,
    /* 20 <-> 21, 22 <-> 23 */ 0x96979495,  /* 22 -> 20, 21,   20 -> 22, 23 */ 0x94949696,  /* 16 -> 20, 21, 22, 23 */ 0x90909090,
    /* 24 <-> 25, 26 <-> 27 */ 0x9A9B9899,  /* 26 -> 24, 25,   24 -> 26, 27 */ 0x98989A9A,  /* 28 -> 24, 25, 26, 27 */ 0x9C9C9C9C,
    /* 28 <-> 29, 30 <-> 31 */ 0x9E9F9C9D,  /* 30 -> 28, 29,   28 -> 30, 31 */ 0x9C9C9E9E,  /* 24 -> 28, 29, 30, 31 */ 0x98989898,
    /* G1  */                               /* G1  */                                       /* G1  */
    /* 0  <-> 1,  2  <-> 3  */ 0xA2A3A0A1,  /* 2  -> 0,  1,    0  -> 2,  3  */ 0xA0A0A2A2,  /* 4  -> 0,  1,  2,  3  */ 0xA4A4A4A4,
    /* 4  <-> 5,  6  <-> 7  */ 0xA6A7A4A5,  /* 6  -> 4,  5,    4  -> 6,  7  */ 0xA4A4A6A6,  /* 0  -> 4,  5,  6,  7  */ 0xA0A0A0A0,
    /* 8  <-> 9,  10 <-> 11 */ 0xAAABA8A9,  /* 10 -> 8,  9,    8  -> 10, 11 */ 0xA8A8AAAA,  /* 12 -> 8,  9,  10, 11 */ 0xACACACAC,
    /* 12 <-> 13, 14 <-> 15 */ 0xAEAFACAD,  /* 14 -> 12, 13,   12 -> 14, 15 */ 0xACACAEAE,  /* 8  -> 12, 13, 14, 15 */ 0xA8A8A8A8,
    /* 16 <-> 17, 18 <-> 19 */ 0xB2B3B0B1,  /* 18 -> 16, 17,   16 -> 18, 19 */ 0x90909292,  /* 20 -> 16, 17, 18, 19 */ 0xB4B4B4B4,
    /* 20 <-> 21, 22 <-> 23 */ 0xB6B7B4B5,  /* 22 -> 20, 21,   20 -> 22, 23 */ 0x94949696,  /* 16 -> 20, 21, 22, 23 */ 0xB0B0B0B0,
    /* 24 <-> 25, 26 <-> 27 */ 0xBABBB8B9,  /* 26 -> 24, 25,   24 -> 26, 27 */ 0x98989A9A,  /* 28 -> 24, 25, 26, 27 */ 0xBCBCBCBC,
    /* 28 <-> 29, 30 <-> 31 */ 0xBEBFBCBD,  /* 30 -> 28, 29,   28 -> 30, 31 */ 0x9C9C9E9E,  /* 24 -> 28, 29, 30, 31 */ 0xB8B8B8B8,
    /* DG3 */                               /* DG3 */                                       /* DG3 */
    /* G0  */                               /* G0  */                                       /* G0  */
    /* 0  <-> 1,  2  <-> 3  */ 0x82838081,  /* 2  -> 0,  1,    0  -> 2,  3  */ 0x80808282,  /* 4  -> 0,  1,  2,  3  */ 0x84848484,
    /* 4  <-> 5,  6  <-> 7  */ 0x86878485,  /* 6  -> 4,  5,    4  -> 6,  7  */ 0x84848686,  /* 0  -> 4,  5,  6,  7  */ 0x80808080,
    /* 8  <-> 9,  10 <-> 11 */ 0x8A8B8889,  /* 10 -> 8,  9,    8  -> 10, 11 */ 0x88888A8A,  /* 12 -> 8,  9,  10, 11 */ 0x8C8C8C8C,
    /* 12 <-> 13, 14 <-> 15 */ 0x8E8F8C8D,  /* 14 -> 12, 13,   12 -> 14, 15 */ 0x8C8C8E8E,  /* 8  -> 12, 13, 14, 15 */ 0x88888888,
    /* 16 <-> 17, 18 <-> 19 */ 0x92939091,  /* 18 -> 16, 17,   16 -> 18, 19 */ 0x90909292,  /* 20 -> 16, 17, 18, 19 */ 0x94949494,
    /* 20 <-> 21, 22 <-> 23 */ 0x96979495,  /* 22 -> 20, 21,   20 -> 22, 23 */ 0x94949696,  /* 16 -> 20, 21, 22, 23 */ 0x90909090,
    /* 24 <-> 25, 26 <-> 27 */ 0x9A9B9899,  /* 26 -> 24, 25,   24 -> 26, 27 */ 0x98989A9A,  /* 28 -> 24, 25, 26, 27 */ 0x9C9C9C9C,
    /* 28 <-> 29, 30 <-> 31 */ 0x9E9F9C9D,  /* 30 -> 28, 29,   28 -> 30, 31 */ 0x9C9C9E9E,  /* 24 -> 28, 29, 30, 31 */ 0x98989898,
    /* G1  */                               /* G1  */                                       /* G1  */
    /* 0  <-> 1,  2  <-> 3  */ 0xA2A3A0A1,  /* 2  -> 0,  1,    0  -> 2,  3  */ 0xA0A0A2A2,  /* 4  -> 0,  1,  2,  3  */ 0xA4A4A4A4,
    /* 4  <-> 5,  6  <-> 7  */ 0xA6A7A4A5,  /* 6  -> 4,  5,    4  -> 6,  7  */ 0xA4A4A6A6,  /* 0  -> 4,  5,  6,  7  */ 0xA0A0A0A0,
    /* 8  <-> 9,  10 <-> 11 */ 0xAAABA8A9,  /* 10 -> 8,  9,    8  -> 10, 11 */ 0xA8A8AAAA,  /* 12 -> 8,  9,  10, 11 */ 0xACACACAC,
    /* 12 <-> 13, 14 <-> 15 */ 0xAEAFACAD,  /* 14 -> 12, 13,   12 -> 14, 15 */ 0xACACAEAE,  /* 8  -> 12, 13, 14, 15 */ 0xA8A8A8A8,
    /* 16 <-> 17, 18 <-> 19 */ 0xB2B3B0B1,  /* 18 -> 16, 17,   16 -> 18, 19 */ 0x90909292,  /* 20 -> 16, 17, 18, 19 */ 0xB4B4B4B4,
    /* 20 <-> 21, 22 <-> 23 */ 0xB6B7B4B5,  /* 22 -> 20, 21,   20 -> 22, 23 */ 0x94949696,  /* 16 -> 20, 21, 22, 23 */ 0xB0B0B0B0,
    /* 24 <-> 25, 26 <-> 27 */ 0xBABBB8B9,  /* 26 -> 24, 25,   24 -> 26, 27 */ 0x98989A9A,  /* 28 -> 24, 25, 26, 27 */ 0xBCBCBCBC,
    /* 28 <-> 29, 30 <-> 31 */ 0xBEBFBCBD,  /* 30 -> 28, 29,   28 -> 30, 31 */ 0x9C9C9E9E,  /* 24 -> 28, 29, 30, 31 */ 0xB8B8B8B8,
    /* NOT USED */                          /* SHUFFLE 4 */                                 /* SHUFFLE 5 */
                                            /* DG0 */                                       /* DG0 */
                                            /* G0  */                                       /* G0  */
    0x0,                                    /* 8  -> 0,  1,  2,  3          */ 0x88888888,  /* 16 -> 0,  1,  2,  3  */ 0x90909090,
    0x0,                                    /* 8  -> 4,  5,  6,  7          */ 0x88888888,  /* 16 -> 4,  5,  6,  7  */ 0x90909090,
    0x0,                                    /* 0  -> 8,  9,  10, 11         */ 0x80808080,  /* 16 -> 8,  9,  10, 11 */ 0x90909090,
    0x0,                                    /* 0  -> 12, 13, 14, 15         */ 0x80808080,  /* 16 -> 12, 13, 14, 15 */ 0x90909090,
    0x0,                                    /* 24 -> 16, 17, 18, 19         */ 0x98989898,  /* 0  -> 16, 17, 18, 19 */ 0x80808080,
    0x0,                                    /* 24 -> 20, 21, 22, 23         */ 0x98989898,  /* 0  -> 20, 21, 22, 23 */ 0x80808080,
    0x0,                                    /* 16 -> 24, 25, 26, 27         */ 0x90909090,  /* 0  -> 24, 25, 26, 27 */ 0x80808080,
    0x0,                                    /* 16 -> 28, 29, 30, 31         */ 0x90909090,  /* 0  -> 28, 29, 30, 31 */ 0x80808080,
                                            /* G1  */                                       /* G1  */
    0x0,                                    /* 8  -> 0,  1,  2,  3          */ 0xA8A8A8A8,  /* 16 -> 0,  1,  2,  3  */ 0xB0B0B0B0,
    0x0,                                    /* 8  -> 4,  5,  6,  7          */ 0xA8A8A8A8,  /* 16 -> 4,  5,  6,  7  */ 0xB0B0B0B0,
    0x0,                                    /* 0  -> 8,  9,  10, 11         */ 0xA0A0A0A0,  /* 16 -> 8,  9,  10, 11 */ 0xB0B0B0B0,
    0x0,                                    /* 0  -> 12, 13, 14, 15         */ 0xA0A0A0A0,  /* 16 -> 12, 13, 14, 15 */ 0xB0B0B0B0,
    0x0,                                    /* 24 -> 16, 17, 18, 19         */ 0xB8B8B8B8,  /* 0  -> 16, 17, 18, 19 */ 0xA0A0A0A0,
    0x0,                                    /* 24 -> 20, 21, 22, 23         */ 0xB8B8B8B8,  /* 0  -> 20, 21, 22, 23 */ 0xA0A0A0A0,
    0x0,                                    /* 16 -> 24, 25, 26, 27         */ 0xB0B0B0B0,  /* 0  -> 24, 25, 26, 27 */ 0xA0A0A0A0,
    0x0,                                    /* 16 -> 28, 29, 30, 31         */ 0xB0B0B0B0,  /* 0  -> 28, 29, 30, 31 */ 0xA0A0A0A0,
                                            /* DG1 */                                       /* DG1 */
                                            /* G0  */                                       /* G0  */
    0x0,                                    /* 8  -> 0,  1,  2,  3          */ 0x88888888,  /* 16 -> 0,  1,  2,  3  */ 0x90909090,
    0x0,                                    /* 8  -> 4,  5,  6,  7          */ 0x88888888,  /* 16 -> 4,  5,  6,  7  */ 0x90909090,
    0x0,                                    /* 0  -> 8,  9,  10, 11         */ 0x80808080,  /* 16 -> 8,  9,  10, 11 */ 0x90909090,
    0x0,                                    /* 0  -> 12, 13, 14, 15         */ 0x80808080,  /* 16 -> 12, 13, 14, 15 */ 0x90909090,
    0x0,                                    /* 24 -> 16, 17, 18, 19         */ 0x98989898,  /* 0  -> 16, 17, 18, 19 */ 0x80808080,
    0x0,                                    /* 24 -> 20, 21, 22, 23         */ 0x98989898,  /* 0  -> 20, 21, 22, 23 */ 0x80808080,
    0x0,                                    /* 16 -> 24, 25, 26, 27         */ 0x90909090,  /* 0  -> 24, 25, 26, 27 */ 0x80808080,
    0x0,                                    /* 16 -> 28, 29, 30, 31         */ 0x90909090,  /* 0  -> 28, 29, 30, 31 */ 0x80808080,
                                            /* G1  */                                       /* G1  */
    0x0,                                    /* 8  -> 0,  1,  2,  3          */ 0xA8A8A8A8,  /* 16 -> 0,  1,  2,  3  */ 0xB0B0B0B0,
    0x0,                                    /* 8  -> 4,  5,  6,  7          */ 0xA8A8A8A8,  /* 16 -> 4,  5,  6,  7  */ 0xB0B0B0B0,
    0x0,                                    /* 0  -> 8,  9,  10, 11         */ 0xA0A0A0A0,  /* 16 -> 8,  9,  10, 11 */ 0xB0B0B0B0,
    0x0,                                    /* 0  -> 12, 13, 14, 15         */ 0xA0A0A0A0,  /* 16 -> 12, 13, 14, 15 */ 0xB0B0B0B0,
    0x0,                                    /* 24 -> 16, 17, 18, 19         */ 0xB8B8B8B8,  /* 0  -> 16, 17, 18, 19 */ 0xA0A0A0A0,
    0x0,                                    /* 24 -> 20, 21, 22, 23         */ 0xB8B8B8B8,  /* 0  -> 20, 21, 22, 23 */ 0xA0A0A0A0,
    0x0,                                    /* 16 -> 24, 25, 26, 27         */ 0xB0B0B0B0,  /* 0  -> 24, 25, 26, 27 */ 0xA0A0A0A0,
    0x0,                                    /* 16 -> 28, 29, 30, 31         */ 0xB0B0B0B0,  /* 0  -> 28, 29, 30, 31 */ 0xA0A0A0A0,
                                            /* DG2 */                                       /* DG2 */
                                            /* G0  */                                       /* G0  */
    0x0,                                    /* 8  -> 0,  1,  2,  3          */ 0x88888888,  /* 16 -> 0,  1,  2,  3  */ 0x90909090,
    0x0,                                    /* 8  -> 4,  5,  6,  7          */ 0x88888888,  /* 16 -> 4,  5,  6,  7  */ 0x90909090,
    0x0,                                    /* 0  -> 8,  9,  10, 11         */ 0x80808080,  /* 16 -> 8,  9,  10, 11 */ 0x90909090,
    0x0,                                    /* 0  -> 12, 13, 14, 15         */ 0x80808080,  /* 16 -> 12, 13, 14, 15 */ 0x90909090,
    0x0,                                    /* 24 -> 16, 17, 18, 19         */ 0x98989898,  /* 0  -> 16, 17, 18, 19 */ 0x80808080,
    0x0,                                    /* 24 -> 20, 21, 22, 23         */ 0x98989898,  /* 0  -> 20, 21, 22, 23 */ 0x80808080,
    0x0,                                    /* 16 -> 24, 25, 26, 27         */ 0x90909090,  /* 0  -> 24, 25, 26, 27 */ 0x80808080,
    0x0,                                    /* 16 -> 28, 29, 30, 31         */ 0x90909090,  /* 0  -> 28, 29, 30, 31 */ 0x80808080,
                                            /* G1  */                                       /* G1  */
    0x0,                                    /* 8  -> 0,  1,  2,  3          */ 0xA8A8A8A8,  /* 16 -> 0,  1,  2,  3  */ 0xB0B0B0B0,
    0x0,                                    /* 8  -> 4,  5,  6,  7          */ 0xA8A8A8A8,  /* 16 -> 4,  5,  6,  7  */ 0xB0B0B0B0,
    0x0,                                    /* 0  -> 8,  9,  10, 11         */ 0xA0A0A0A0,  /* 16 -> 8,  9,  10, 11 */ 0xB0B0B0B0,
    0x0,                                    /* 0  -> 12, 13, 14, 15         */ 0xA0A0A0A0,  /* 16 -> 12, 13, 14, 15 */ 0xB0B0B0B0,
    0x0,                                    /* 24 -> 16, 17, 18, 19         */ 0xB8B8B8B8,  /* 0  -> 16, 17, 18, 19 */ 0xA0A0A0A0,
    0x0,                                    /* 24 -> 20, 21, 22, 23         */ 0xB8B8B8B8,  /* 0  -> 20, 21, 22, 23 */ 0xA0A0A0A0,
    0x0,                                    /* 16 -> 24, 25, 26, 27         */ 0xB0B0B0B0,  /* 0  -> 24, 25, 26, 27 */ 0xA0A0A0A0,
    0x0,                                    /* 16 -> 28, 29, 30, 31         */ 0xB0B0B0B0,  /* 0  -> 28, 29, 30, 31 */ 0xA0A0A0A0,
                                            /* DG3 */                                       /* DG3 */
                                            /* G0  */                                       /* G0  */
    0x0,                                    /* 8  -> 0,  1,  2,  3          */ 0x88888888,  /* 16 -> 0,  1,  2,  3  */ 0x90909090,
    0x0,                                    /* 8  -> 4,  5,  6,  7          */ 0x88888888,  /* 16 -> 4,  5,  6,  7  */ 0x90909090,
    0x0,                                    /* 0  -> 8,  9,  10, 11         */ 0x80808080,  /* 16 -> 8,  9,  10, 11 */ 0x90909090,
    0x0,                                    /* 0  -> 12, 13, 14, 15         */ 0x80808080,  /* 16 -> 12, 13, 14, 15 */ 0x90909090,
    0x0,                                    /* 24 -> 16, 17, 18, 19         */ 0x98989898,  /* 0  -> 16, 17, 18, 19 */ 0x80808080,
    0x0,                                    /* 24 -> 20, 21, 22, 23         */ 0x98989898,  /* 0  -> 20, 21, 22, 23 */ 0x80808080,
    0x0,                                    /* 16 -> 24, 25, 26, 27         */ 0x90909090,  /* 0  -> 24, 25, 26, 27 */ 0x80808080,
    0x0,                                    /* 16 -> 28, 29, 30, 31         */ 0x90909090,  /* 0  -> 28, 29, 30, 31 */ 0x80808080,
                                            /* G1  */                                       /* G1  */
    0x0,                                    /* 8  -> 0,  1,  2,  3          */ 0xA8A8A8A8,  /* 16 -> 0,  1,  2,  3  */ 0xB0B0B0B0,
    0x0,                                    /* 8  -> 4,  5,  6,  7          */ 0xA8A8A8A8,  /* 16 -> 4,  5,  6,  7  */ 0xB0B0B0B0,
    0x0,                                    /* 0  -> 8,  9,  10, 11         */ 0xA0A0A0A0,  /* 16 -> 8,  9,  10, 11 */ 0xB0B0B0B0,
    0x0,                                    /* 0  -> 12, 13, 14, 15         */ 0xA0A0A0A0,  /* 16 -> 12, 13, 14, 15 */ 0xB0B0B0B0,
    0x0,                                    /* 24 -> 16, 17, 18, 19         */ 0xB8B8B8B8,  /* 0  -> 16, 17, 18, 19 */ 0xA0A0A0A0,
    0x0,                                    /* 24 -> 20, 21, 22, 23         */ 0xB8B8B8B8,  /* 0  -> 20, 21, 22, 23 */ 0xA0A0A0A0,
    0x0,                                    /* 16 -> 24, 25, 26, 27         */ 0xB0B0B0B0,  /* 0  -> 24, 25, 26, 27 */ 0xA0A0A0A0,
    0x0,                                    /* 16 -> 28, 29, 30, 31         */ 0xB0B0B0B0,  /* 0  -> 28, 29, 30, 31 */ 0xA0A0A0A0,
};

uint8_t *getLUTStartAddressFromFuncID(uint32_t funcID, uint8_t* baseAddr, uint8_t lutPtr)
{
    uint32_t numEntriesID;
    uint32_t indexInType;
    uint32_t funcOffset;
    uint8_t *addr;
    if (lutPtr)
    {
        numEntriesID = funcID & 0x3;
        indexInType = (funcID & 0x00FFFFFF) >> 2; //bits 23:2
        addr = baseAddr + (indexInType<<8);
    }
    else
    {
        numEntriesID = funcID >> SPECIAL_FUNC_NUM_ENTRIES_IN_FUNCID_OFFSET;
        indexInType = funcID & ((1 << SPECIAL_FUNC_NUM_ENTRIES_IN_FUNCID_OFFSET) - 1);
        switch (numEntriesID)
        {
        case 0:
            funcOffset = SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_256 * CACHE_LINE_SIZE_IN_BYTES;
            break;
        case 1:
            funcOffset = SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_128 * CACHE_LINE_SIZE_IN_BYTES;
            break;
        case 2:
            funcOffset = SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_64 * CACHE_LINE_SIZE_IN_BYTES;
            break;
        case 3:
            funcOffset = SPECIAL_FUNCS_NUM_OF_CACHE_LINES_IN_FUNC_32 * CACHE_LINE_SIZE_IN_BYTES;
            break;
        default:
            assert(0);
            funcOffset = UINT32_MAX;
        }

        addr = baseAddr + (funcOffset *  indexInType);
    }
    return addr;
}

uint32_t getCoefAddrFromOffset(uint8_t offset, bool isLOOKUP, uint32_t elementSize)
{
    if (isLOOKUP)    //Generic Lookup
    {
        // In case of 16b/32b lookups, the elements are conscutive. In case of int8_t, they are duplicated 4 times.
        return (offset*sizeof(float));
    }
    else if (elementSize==4) //32bit
    {
        //add 8 bytes at end of each cache line (which has 10 intervals)
        uint8_t cacheLinePadding = 8*sizeof(uint8_t)*(offset/SPECIAL_FUNCS_NUM_OF_INTERVALS_IN_CACHE_LINE);
        return (offset*SPECIAL_FUNC_BYTES_IN_ENTRY + cacheLinePadding);
    }
    else //16bit/8bit
    {
        return (offset*sizeof(uint16_t));
    }
}

void addTableLookup(uint32_t funcID, uint8_t* baseAddr, uint8_t *tableAddr, uint32_t tableActualSizeInBytes, uint8_t elementSize, uint8_t lutPtr)
{
    uint8_t *targetAddr = getLUTStartAddressFromFuncID(funcID, baseAddr, lutPtr);
    if (elementSize == 1)
    {
        // Duplicate each element 4 times
        for (uint32_t itr = 0, targetItr = 0; itr < tableActualSizeInBytes; itr += elementSize, targetItr += sizeof(uint32_t))
        {
            for (uint32_t elemItr = targetItr; elemItr < targetItr + sizeof(uint32_t); elemItr += elementSize)
            {
                memcpy(targetAddr + elemItr, tableAddr + itr, elementSize);
            }
        }
    }
    else
    {
        assert((elementSize == 2 || elementSize == 4) && "Unexpected elementSize");
        // In case elementSize is 2 or 4, copy the table as is
        memcpy(targetAddr, tableAddr, tableActualSizeInBytes);
    }
}

void addTableLookupC0C1C2(uint32_t funcID, uint8_t* baseAddr, uint8_t *tableAddr, uint32_t tableActualSizeInBytes, uint8_t elementSize, uint8_t lutPtr)
{
    uint8_t *targetAddr = getLUTStartAddressFromFuncID(funcID, baseAddr, lutPtr);

    if (elementSize==sizeof(float))
    {
        for (uint32_t itr = 0; itr < tableActualSizeInBytes; itr += elementSize)
        {
            // Cache line contains 10 intervals (of 3 coefficients) + 8 bytes of "garbage"
            if ((itr>0) && (itr % (SPECIAL_FUNCS_NUM_OF_INTERVALS_IN_CACHE_LINE*SPECIAL_FUNC_BYTES_IN_ENTRY) == 0))
            {
                targetAddr= targetAddr + SPECIAL_FUNCS_CACHE_LINE_PADDING;
            }

            memcpy(targetAddr, tableAddr, elementSize);
            tableAddr+=elementSize;
            targetAddr+=elementSize;
        }
    }
    else    // 16/8 bits element
    {
        for (uint32_t itr = 0, target_itr = 0; itr < tableActualSizeInBytes; itr += elementSize, target_itr+=sizeof(uint32_t))
        {
            // Cache line contains 10 intervals (of 3 coefficients) + 8 bytes of "garbage"
            if ((target_itr>0) && (target_itr % (SPECIAL_FUNCS_NUM_OF_INTERVALS_IN_CACHE_LINE*SPECIAL_FUNC_BYTES_IN_ENTRY) == 0))
            {
                targetAddr= targetAddr + SPECIAL_FUNCS_CACHE_LINE_PADDING;
            }

            //duplicate data in memory
            for (int j=0;j<sizeof(uint32_t)/elementSize;j++)
            {
                memcpy(targetAddr + j*elementSize, tableAddr, elementSize);
            }
            tableAddr+=elementSize;
            targetAddr+=sizeof(uint32_t);
        }
    }
}


void addTableLookupC0C1C2_16bit(uint32_t funcID, uint32_t funcID2, uint8_t* baseAddr, uint8_t *tableAddr, uint32_t tableActualSizeInBytes, uint8_t elementSize, uint8_t lutPtr)
{
    uint8_t *targetAddr = getLUTStartAddressFromFuncID(funcID, baseAddr, lutPtr);   //C1C2
    uint8_t *targetAddr2;
    if (funcID2 != FUNC_ID_UNUSED) //init C0 only if it is used
        targetAddr2 = getLUTStartAddressFromFuncID(funcID2, baseAddr, lutPtr); //C0
    else
        targetAddr2 = targetAddr;

    if (elementSize != 2)
    {
        assert(0 && "addTableLookupC1C0_16bit: can't get 32bit/8bit coefficient tables");
    }
    else    // 16 bits element
    {
        for (uint32_t itr = 0, target_itr = 0; itr < tableActualSizeInBytes; itr += elementSize, target_itr += sizeof(uint16_t))
        {
            if ((itr % 3) == 0) //C0
            {
                if (funcID2 != FUNC_ID_UNUSED) //init C0 only if it is used
                {
                    memcpy(targetAddr2, tableAddr, elementSize);
                    targetAddr2 += sizeof(uint16_t);
                }
                tableAddr += elementSize;
            }
            else
            {
                memcpy(targetAddr, tableAddr, elementSize);
                tableAddr += elementSize;
                targetAddr += sizeof(uint16_t);
            }
        }
    }
}

void addTableLookupC0C1C2_8bit(uint32_t funcID, uint32_t funcID2, uint8_t* baseAddr, uint8_t *tableAddr, uint32_t tableActualSizeInBytes, uint8_t elementSize, uint8_t lutPtr)
{
    uint8_t *targetAddr = getLUTStartAddressFromFuncID(funcID, baseAddr, lutPtr);   //C1C2
    uint8_t *targetAddr2;
    if (funcID2 != FUNC_ID_UNUSED) //init C0 only if it is used
        targetAddr2 = getLUTStartAddressFromFuncID(funcID2, baseAddr, lutPtr); //C0
    else
        targetAddr2 = targetAddr;

    if (elementSize != 1)
    {
        assert(0 && "addTableLookupC1C0_8bit: can't get 32bit/16bit coefficient tables");
    }
    else    //8 bits element
    {
        for (uint32_t itr = 0; itr < tableActualSizeInBytes; itr += elementSize)
        {
            if ((itr % 3) == 0) //C0
            {
                if (funcID2 != FUNC_ID_UNUSED) //init C0 only if it is used
                {
                    memcpy(targetAddr2, tableAddr, elementSize);
                    targetAddr2 += sizeof(uint8_t);
                }
                tableAddr += elementSize;
            }
            else
            {
                memcpy(targetAddr, tableAddr, elementSize);
                tableAddr += elementSize;
                targetAddr += sizeof(uint8_t);
            }
        }
    }
}


void addTableLookup_16bit(uint32_t funcID, uint8_t* baseAddr, uint8_t *tableAddr, uint32_t tableActualSizeInBytes, uint8_t elementSize, uint8_t lutPtr)
{
    uint8_t *targetAddr = getLUTStartAddressFromFuncID(funcID, baseAddr, lutPtr);

    if (elementSize != 2)
    {
        assert(0 && "addTableLookup_16bit: can't get 32bit/8bit coefficient tables");
    }
    else    // 16 bits element
    {
        for (uint32_t itr = 0, target_itr = 0; itr < tableActualSizeInBytes; itr += elementSize, target_itr += sizeof(uint16_t))
        {
                memcpy(targetAddr, tableAddr, elementSize);
                tableAddr += elementSize;
                targetAddr += sizeof(uint16_t);

        }
    }
}

void addTableLookup_8bit(uint32_t funcID, uint8_t* baseAddr, uint8_t *tableAddr, uint32_t tableActualSizeInBytes, uint8_t elementSize, uint8_t lutPtr)
{
    uint8_t *targetAddr = getLUTStartAddressFromFuncID(funcID, baseAddr, lutPtr);

    if (elementSize != 1)
    {
        assert(0 && "addTableLookup_8bit: can't get 32bit/16bit coefficient tables");
    }
    else    //8 bits element
    {
        for (uint32_t itr = 0, target_itr = 0; itr < tableActualSizeInBytes; itr += elementSize, target_itr += sizeof(uint16_t))
        {
            memcpy(targetAddr, tableAddr, elementSize);
            tableAddr += elementSize;
            targetAddr += sizeof(uint8_t);

        }
    }
}

void buildSpecialFunctionCoefficients(vector<vector<uint8_t>> &specialFunctionCoefficients)
{
    specialFunctionCoefficients[SPECIAL_FUNC_256_ENTRIES].resize(SPECIAL_FUNC256_SIZE_BYTES);
    specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES].resize(SPECIAL_FUNC128_SIZE_BYTES);
    specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES].resize(SPECIAL_FUNC64_SIZE_BYTES);
    specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES].resize(SPECIAL_FUNC32_SIZE_BYTES);

    //256-intervals tables
    addTableLookupC0C1C2(FUNC_ID_FP32_TANH,                &specialFunctionCoefficients[SPECIAL_FUNC_256_ENTRIES][0],            (uint8_t*)tanh_coeffs_fp32,                sizeof(tanh_coeffs_fp32),                sizeof(float), 0);
    addTableLookupC0C1C2(FUNC_ID_FP32_RSQRT,            &specialFunctionCoefficients[SPECIAL_FUNC_256_ENTRIES][0],            (uint8_t*)rsqrt_coeffs_fp32,            sizeof(rsqrt_coeffs_fp32),                sizeof(float), 0);
    addTableLookupC0C1C2(FUNC_ID_FP32_LOG2,                &specialFunctionCoefficients[SPECIAL_FUNC_256_ENTRIES][0],            (uint8_t*)log2_coeffs_fp32,                sizeof(log2_coeffs_fp32),                sizeof(float), 0);
    addTableLookup_8bit(FUNC_ID_INT8_SQRT,                     &specialFunctionCoefficients[SPECIAL_FUNC_256_ENTRIES][0],            (uint8_t*)sqrt_coeffs_int8_scale_1_16,    sizeof(sqrt_coeffs_int8_scale_1_16),    sizeof(int8_t), 0);
    addTableLookup_16bit(FUNC_ID_UINT16_SQUARE,                 &specialFunctionCoefficients[SPECIAL_FUNC_256_ENTRIES][0],            (uint8_t*)square_coeffs_uint16,            sizeof(square_coeffs_uint16),            sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_UINT32_POWER4,                    &specialFunctionCoefficients[SPECIAL_FUNC_256_ENTRIES][0],            (uint8_t*)power4_coeffs_uint32,            sizeof(power4_coeffs_uint32),            sizeof(uint32_t), 0);
    addTableLookupC0C1C2(FUNC_ID_FP32_ERF,                &specialFunctionCoefficients[SPECIAL_FUNC_256_ENTRIES][0],            (uint8_t*)erf_coeffs_fp32,                sizeof(erf_coeffs_fp32),                sizeof(float), 0);
    addTableLookupC0C1C2(FUNC_ID_FP32_IMP_TANH,                &specialFunctionCoefficients[SPECIAL_FUNC_256_ENTRIES][0],            (uint8_t*)tanh_imp_coeffs_fp32,                sizeof(tanh_imp_coeffs_fp32),                sizeof(float), 0);

    //128-intervals tables
    addTableLookupC0C1C2(FUNC_ID_FP32_SQRT,                &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],            (uint8_t*)sqrt_coeffs_fp32,                sizeof(sqrt_coeffs_fp32),                sizeof(float), 0);
    addTableLookupC0C1C2(FUNC_ID_FP32_RCP,                &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],            (uint8_t*)recip_coeffs_fp32,            sizeof(recip_coeffs_fp32),                sizeof(float), 0);
    addTableLookupC0C1C2(FUNC_ID_FP32_SINCOS,            &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],            (uint8_t*)sincos_coeffs_fp32,            sizeof(sincos_coeffs_fp32),                sizeof(float), 0);
    addTableLookup(FUNC_ID_BF16_EXP, &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0], (uint8_t*)exp_ftable_bf16, sizeof(exp_ftable_bf16), sizeof(uint16_t),0);
    addTableLookupC0C1C2(FUNC_ID_INT16_EXP_NEG_0_16_128ENTRIES,    &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],    (uint8_t*)expminusx_coeffs_int16_0_16_128_entries,    (sizeof(expminusx_coeffs_int16_0_16_128_entries)),    sizeof(uint16_t), 0);
    addTableLookupC0C1C2(FUNC_ID_REDUCTION_16,              &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],            (uint8_t*)reduction_shuffle_tab_16,          sizeof(reduction_shuffle_tab_16),          sizeof(reduction_shuffle_tab_16[0]), 0);
    addTableLookupC0C1C2(FUNC_ID_REDUCTION_8,               &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],            (uint8_t*)reduction_shuffle_tab_8,           sizeof(reduction_shuffle_tab_8),           sizeof(reduction_shuffle_tab_8[0]), 0);

    //64-intervals tables
    addTableLookupC0C1C2(FUNC_ID_FP32_POW2,                &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)pow2_coeffs_fp32,                sizeof(pow2_coeffs_fp32),                sizeof(float), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_TANH,                 FUNC_ID_BF16_TANH_C0,                        &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)tanh_coeffs_bf16,                sizeof(tanh_coeffs_bf16),                sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_INT16_TANH_0_8,             FUNC_ID_INT16_TANH_0_8_C0,                    &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)tanh_coeffs_int16_0_8,        sizeof(tanh_coeffs_int16_0_8),            sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_INT16_SIGMOID_0_8,         FUNC_ID_INT16_SIGMOID_0_8_C0,                &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)sigmoid_coeffs_int16_0_8,        sizeof(sigmoid_coeffs_int16_0_8),        sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_INT16_EXP_NEG_0_16,         FUNC_ID_INT16_EXP_NEG_0_16_C0,                &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)expminusx_coeffs_int16_0_16,    sizeof(expminusx_coeffs_int16_0_16),    sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_INT16_RECIP_1_4,             FUNC_ID_INT16_RECIP_1_4_C0,                &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)recip_coeffs_int16_1_4,        sizeof(recip_coeffs_int16_1_4),            sizeof(uint16_t), 0);
    addTableLookupC0C1C2_8bit(FUNC_ID_INT8_TANH_0_8_LINEAR,        FUNC_ID_INT8_TANH_0_8_LINEAR_C0,            &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)tanh_coeffs_int8_linear,        sizeof(tanh_coeffs_int8_linear),        sizeof(int8_t), 0);
    addTableLookupC0C1C2_8bit(FUNC_ID_INT8_SIGMOID_0_8_LINEAR,     FUNC_ID_INT8_SIGMOID_0_8_LINEAR_C0,        &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)sigmoid_coeffs_0_8_linear,    sizeof(sigmoid_coeffs_0_8_linear),        sizeof(int8_t), 0);
    addTableLookupC0C1C2_8bit(FUNC_ID_INT8_EXP_NEG_0_8_LINEAR,     FUNC_ID_UNUSED,                            &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)exp_minusx_0_8_linear,        sizeof(exp_minusx_0_8_linear),            sizeof(int8_t), 0);
    addTableLookup(FUNC_ID_INT16_GELU_MINUS_RELU_0_4, &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0], (uint8_t*)gelu_minus_relu_coeffs_int16_0_4, sizeof(gelu_minus_relu_coeffs_int16_0_4), sizeof(int16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_FP16_GELU,                 FUNC_ID_FP16_GELU_C0,                        &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)gelu_coeffs_fp16,                sizeof(gelu_coeffs_fp16),                sizeof(uint16_t), 0);
    addTableLookupC0C1C2(FUNC_ID_REDUCTION_32,                &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)reduction_shuffle_tab_32,            sizeof(reduction_shuffle_tab_32),            sizeof(reduction_shuffle_tab_32[0]), 0);
    addTableLookupC0C1C2(FUNC_ID_SWIZZLE_32,                &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],            (uint8_t*)swizzle_shuffle_tab_32,            sizeof(swizzle_shuffle_tab_32),            sizeof(swizzle_shuffle_tab_32[0]), 0);

    //32-intervals tables
    addTableLookup(FUNC_ID_BF16_RSQRT,                                                                        &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],            (uint8_t*)rsqrt_coeffs_bf16,            sizeof(rsqrt_coeffs_bf16),                sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_LOG2,                 FUNC_ID_BF16_LOG2_C0,                        &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],            (uint8_t*)log2_coeffs_bf16,                sizeof(log2_coeffs_bf16),                sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SQRT,                 FUNC_ID_BF16_SQRT_C0,                        &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],            (uint8_t*)sqrt_coeffs_bf16,                sizeof(sqrt_coeffs_bf16),                sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_RCP,                 FUNC_ID_BF16_RCP_C0,                        &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],            (uint8_t*)recip_coeffs_bf16,            sizeof(recip_coeffs_bf16),                sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SINCOS,                 FUNC_ID_BF16_SINCOS_C0,                    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],            (uint8_t*)sincos_coeffs_bf16,            sizeof(sincos_coeffs_bf16),                sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_POW2,                 FUNC_ID_BF16_POW2_C0,                        &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],            (uint8_t*)pow2_coeffs_bf16,                sizeof(pow2_coeffs_bf16),                sizeof(uint16_t), 0);
    addTableLookupC0C1C2_8bit(FUNC_ID_INT8_TANH,                 FUNC_ID_INT8_TANH_C0,                        &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],            (uint8_t*)tanh_coeffs_int8,                sizeof(tanh_coeffs_int8),                sizeof(int8_t), 0);


    addTableLookup(FUNC_ID_BF16_RCP_SCALAR_M7,    &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],(uint8_t*)recip_bf16_scalar_coeffs_m7, sizeof(recip_bf16_scalar_coeffs_m7),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_RCP_LINEAR_M2,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],    (uint8_t*)recip_bf16_linear_coeffs_m2, sizeof(recip_bf16_linear_coeffs_m2),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_RCP_LINEAR_M3,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],    (uint8_t*)recip_bf16_linear_coeffs_m3, sizeof(recip_bf16_linear_coeffs_m3),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_RCP_LINEAR_M4,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],    (uint8_t*)recip_bf16_linear_coeffs_m4, sizeof(recip_bf16_linear_coeffs_m4),    sizeof(uint16_t), 0);

    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_RCP_POLY2_M2_C2C1,FUNC_ID_BF16_RCP_POLY2_M2_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)recip_bf16_poly2_coeffs_m2,sizeof(recip_bf16_poly2_coeffs_m2),            sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_RCP_POLY2_M3_C2C1,FUNC_ID_BF16_RCP_POLY2_M3_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)recip_bf16_poly2_coeffs_m3,sizeof(recip_bf16_poly2_coeffs_m3),            sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_RCP_POLY2_M4_C2C1,FUNC_ID_BF16_RCP_POLY2_M4_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)recip_bf16_poly2_coeffs_m4,sizeof(recip_bf16_poly2_coeffs_m4),            sizeof(uint16_t), 0);

    addTableLookup(FUNC_ID_BF16_C0_RECIP,    &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],    (uint8_t*)recip_coeffs_c0_bf16, sizeof(recip_coeffs_c0_bf16),    sizeof(uint16_t), 0);

    addTableLookup(FUNC_ID_BF16_SQRT_SCALAR_M6,    &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],    (uint8_t*)sqrt_bf16_const_coeffs_m6,  sizeof(sqrt_bf16_const_coeffs_m6),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_SQRT_LINEAR_M2,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],    (uint8_t*)sqrt_bf16_linear_coeffs_m2, sizeof(sqrt_bf16_linear_coeffs_m2),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_SQRT_LINEAR_M3,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],    (uint8_t*)sqrt_bf16_linear_coeffs_m3, sizeof(sqrt_bf16_linear_coeffs_m3),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_SQRT_LINEAR_M4,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],    (uint8_t*)sqrt_bf16_linear_coeffs_m4, sizeof(sqrt_bf16_linear_coeffs_m4),    sizeof(uint16_t), 0);

    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SQRT_POLY2_M2_C2C1,FUNC_ID_BF16_SQRT_POLY2_M2_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)sqrt_bf16_poly2_coeffs_m2,sizeof(sqrt_bf16_poly2_coeffs_m2),            sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SQRT_POLY2_M3_C2C1,FUNC_ID_BF16_SQRT_POLY2_M3_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)sqrt_bf16_poly2_coeffs_m3,sizeof(sqrt_bf16_poly2_coeffs_m3),            sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SQRT_POLY2_M4_C2C1,FUNC_ID_BF16_SQRT_POLY2_M4_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)sqrt_bf16_poly2_coeffs_m4,sizeof(sqrt_bf16_poly2_coeffs_m4),            sizeof(uint16_t), 0);

    addTableLookup(FUNC_ID_BF16_RSQRT_SCALAR_M6, &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0], (uint8_t*)rsqrt_bf16_const_coeffs_m6, sizeof(rsqrt_bf16_const_coeffs_m6), sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_RSQRT_LINEAR_M2, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)rsqrt_bf16_linear_coeffs_m2, sizeof(rsqrt_bf16_linear_coeffs_m2), sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_RSQRT_LINEAR_M3, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)rsqrt_bf16_linear_coeffs_m3, sizeof(rsqrt_bf16_linear_coeffs_m3), sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_RSQRT_LINEAR_M4, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)rsqrt_bf16_linear_coeffs_m4, sizeof(rsqrt_bf16_linear_coeffs_m4), sizeof(uint16_t), 0);

    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_RSQRT_POLY2_M2_C2C1, FUNC_ID_BF16_RSQRT_POLY2_M2_C0, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)rsqrt_bf16_poly2_coeffs_m2, sizeof(rsqrt_bf16_poly2_coeffs_m2), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_RSQRT_POLY2_M3_C2C1, FUNC_ID_BF16_RSQRT_POLY2_M3_C0, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)rsqrt_bf16_poly2_coeffs_m3, sizeof(rsqrt_bf16_poly2_coeffs_m3), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_RSQRT_POLY2_M4_C2C1, FUNC_ID_BF16_RSQRT_POLY2_M4_C0, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)rsqrt_bf16_poly2_coeffs_m4, sizeof(rsqrt_bf16_poly2_coeffs_m4), sizeof(uint16_t), 0);

    addTableLookup(FUNC_ID_BF16_TANH_LINEAR_M2,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)tanh_bf16_linear_coeffs_m2, sizeof(tanh_bf16_linear_coeffs_m2),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_TANH_LINEAR_M3,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],    (uint8_t*)tanh_bf16_linear_coeffs_m3, sizeof(tanh_bf16_linear_coeffs_m3),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_TANH_LINEAR_M4,    &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],    (uint8_t*)tanh_bf16_linear_coeffs_m4, sizeof(tanh_bf16_linear_coeffs_m4),    sizeof(uint16_t), 0);

    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_TANH_POLY2_M2_C2C1,FUNC_ID_BF16_TANH_POLY2_M2_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)tanh_bf16_poly2_coeffs_m2,sizeof(tanh_bf16_poly2_coeffs_m2),            sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_TANH_POLY2_M3_C2C1,FUNC_ID_BF16_TANH_POLY2_M3_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)tanh_bf16_poly2_coeffs_m3,sizeof(tanh_bf16_poly2_coeffs_m3),            sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_TANH_POLY2_M4_C2C1,FUNC_ID_BF16_TANH_POLY2_M4_C0,&specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],(uint8_t*)tanh_bf16_poly2_coeffs_m4,sizeof(tanh_bf16_poly2_coeffs_m4),            sizeof(uint16_t), 0);

    addTableLookup(FUNC_ID_BF16_LOG2ML_LINEAR_M4_0_075,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],    (uint8_t*)log2m1_bf16_linear_coeffs_m4_0_075, sizeof(log2m1_bf16_linear_coeffs_m4_0_075),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_LOG2_LINEAR_M5,    &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],    (uint8_t*)log2_bf16_linear_coeffs_m5, sizeof(log2_bf16_linear_coeffs_m5),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_LOG2_LINEAR_INTERLEAVED_M5, &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0], (uint8_t*)log2_bf16_linear_coeffs_interleaved_m5, sizeof(log2_bf16_linear_coeffs_interleaved_m5), sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_LOG2_LINEAR_GAUDI2_M5, &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0], (uint8_t*)log2_bf16_linear_gaudi2_coeffs_m5, sizeof(log2_bf16_linear_gaudi2_coeffs_m5), sizeof(uint16_t), 0);

    addTableLookup(FUNC_ID_BF16_SINCOS_SCALAR_M7,    &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],(uint8_t*)sincos_bf16_scalar_coeffs_m7, sizeof(sincos_bf16_scalar_coeffs_m7),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_SINCOS_LINEAR_M6,    &specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],(uint8_t*)sincos_bf16_linear_coeffs_m6, sizeof(sincos_bf16_linear_coeffs_m6),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_SINCOS_LINEAR_M5,    &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],(uint8_t*)sincos_bf16_linear_coeffs_m5, sizeof(sincos_bf16_linear_coeffs_m5),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_SINCOS_LINEAR_M4,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)sincos_bf16_linear_coeffs_m4, sizeof(sincos_bf16_linear_coeffs_m4),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_SINCOS_LINEAR_M3,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)sincos_bf16_linear_coeffs_m3, sizeof(sincos_bf16_linear_coeffs_m3),    sizeof(uint16_t), 0);
    addTableLookup(FUNC_ID_BF16_SINCOS_LINEAR_M2,    &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)sincos_bf16_linear_coeffs_m2, sizeof(sincos_bf16_linear_coeffs_m2),    sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SINCOS_POLY2_M6_C2C1,FUNC_ID_BF16_SINCOS_POLY2_M6_C0,&specialFunctionCoefficients[SPECIAL_FUNC_128_ENTRIES][0],(uint8_t*)sincos_bf16_poly2_coeffs_m6, sizeof(sincos_bf16_poly2_coeffs_m6),    sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SINCOS_POLY2_M5_C2C1,FUNC_ID_BF16_SINCOS_POLY2_M5_C0,&specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0],(uint8_t*)sincos_bf16_poly2_coeffs_m5, sizeof(sincos_bf16_poly2_coeffs_m5), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SINCOS_POLY2_M4_C2C1,FUNC_ID_BF16_SINCOS_POLY2_M4_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)sincos_bf16_poly2_coeffs_m4, sizeof(sincos_bf16_poly2_coeffs_m4), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SINCOS_POLY2_M3_C2C1,FUNC_ID_BF16_SINCOS_POLY2_M3_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)sincos_bf16_poly2_coeffs_m3, sizeof(sincos_bf16_poly2_coeffs_m3), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_BF16_SINCOS_POLY2_M2_C2C1,FUNC_ID_BF16_SINCOS_POLY2_M2_C0,&specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0],(uint8_t*)sincos_bf16_poly2_coeffs_m2, sizeof(sincos_bf16_poly2_coeffs_m2), sizeof(uint16_t), 0);

    addTableLookupC0C1C2_16bit(FUNC_ID_FP16_RCP, FUNC_ID_FP16_RCP_C0, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)recip_coeffs_fp16, sizeof(recip_coeffs_fp16), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_FP16_TANH, FUNC_ID_FP16_TANH_C0, &specialFunctionCoefficients[SPECIAL_FUNC_64_ENTRIES][0], (uint8_t*)tanh_coeffs_fp16, sizeof(tanh_coeffs_fp16), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_FP16_LOG2, FUNC_ID_FP16_LOG2_C0, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)log2_coeffs_fp16, sizeof(log2_coeffs_fp16), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_FP16_SQRT, FUNC_ID_FP16_SQRT_C0, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)sqrt_coeffs_fp16, sizeof(sqrt_coeffs_fp16), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_FP16_RSQRT, FUNC_ID_FP16_RSQRT_C0, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)rsqrt_coeffs_fp16, sizeof(rsqrt_coeffs_fp16), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_FP16_SINCOS, FUNC_ID_FP16_SINCOS_C0, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)sincos_coeffs_fp16, sizeof(sincos_coeffs_fp16), sizeof(uint16_t), 0);
    addTableLookupC0C1C2_16bit(FUNC_ID_FP16_POW2, FUNC_ID_FP16_POW2_C0, &specialFunctionCoefficients[SPECIAL_FUNC_32_ENTRIES][0], (uint8_t*)pow2_coeffs_fp16, sizeof(pow2_coeffs_fp16), sizeof(uint16_t), 0);
}

// clang-format on

} // namespace tpc_gaudi2
// clang-format on
